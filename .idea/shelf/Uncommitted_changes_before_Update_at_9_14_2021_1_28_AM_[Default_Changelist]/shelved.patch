Index: app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.integration.android.IntentIntegrator\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentScanScrapBinding\r\n\r\nclass ScanScrap_Fragment : Fragment() {\r\n\r\n    var scannedResult: String = \"\"\r\n    private lateinit var binding: FragmentScanScrapBinding\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_scan_scrap, container, false)\r\n        // Inflate the layout for this fragment\r\n        binding.ScrapScan.setOnClickListener {\r\n            run {\r\n                val intentIntegrator = IntentIntegrator.forSupportFragment(this)\r\n                intentIntegrator.initiateScan()\r\n            }\r\n        }\r\n        return binding.root\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){\r\n\r\n        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)\r\n\r\n        val db = Firebase.firestore\r\n\r\n        if (result != null) {\r\n            Log.w(ContentValues.TAG, \"partNo 2 \")\r\n            if (result.contents != null) {\r\n                scannedResult = result.contents\r\n                binding.textView6.text = scannedResult\r\n                binding.textView6 .text = scannedResult\r\n                Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n                val valueBarcode : String = scannedResult\r\n\r\n\r\n\r\n                db.collection(\"ReceivedProduct\").document(scannedResult)\r\n                    .get()\r\n                    .addOnSuccessListener { result ->\r\n                        if(result.data == null){\r\n                            Toast.makeText(context, \"Invalid Bar code. Please try again !!\", Toast.LENGTH_LONG).show()\r\n                        }else{\r\n//                            Toast.makeText(context, \"Valid Bar code\", Toast.LENGTH_LONG).show()\r\n\r\n                            basicAlert(scannedResult)\r\n                        }\r\n                    }\r\n\r\n\r\n            } else {\r\n                binding.textView6.text = \"scan failed\"\r\n                Log.w(ContentValues.TAG, \"scan failed\")\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data)\r\n        }\r\n    }\r\n\r\n    fun basicAlert(serialNo: String) {\r\n\r\n        val db = Firebase.firestore\r\n\r\n        val builder: AlertDialog.Builder = AlertDialog.Builder(this.requireContext())\r\n        builder.setTitle(\"Scrap Meterial\")\r\n\r\n\r\n        builder.setMessage(\"Are you sure put product ${serialNo} to scrap ?? \")\r\n\r\n        builder.setPositiveButton(\"Save\") { dialog, which ->\r\n            db.collection(\"ReceivedProduct\").document(serialNo)\r\n                .update(\r\n                    mapOf(\r\n                        \"Status\" to \"scrap\"\r\n                    )\r\n                )\r\n\r\n        }\r\n\r\n        builder.setNegativeButton(\"Cancel\") { dialog, which ->\r\n\r\n        }\r\n        builder.show()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt	(date 1631386593991)
@@ -17,6 +17,9 @@
 import com.google.zxing.integration.android.IntentIntegrator
 import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding
 import my.edu.tarc.warehouserit3g2.databinding.FragmentScanScrapBinding
+import java.text.SimpleDateFormat
+import java.util.*
+
 
 class ScanScrap_Fragment : Fragment() {
 
@@ -27,9 +30,16 @@
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
+
         binding = DataBindingUtil.inflate(inflater,R.layout.fragment_scan_scrap, container, false)
         // Inflate the layout for this fragment
         binding.ScrapScan.setOnClickListener {
+
+//            val intent: Intent = Intent(this, MainActivity::class.java)
+//            intent.putExtra("BarcodeNumber", scannedResult)
+//            Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+//            startActivity(intent)
+
             run {
                 val intentIntegrator = IntentIntegrator.forSupportFragment(this)
                 intentIntegrator.initiateScan()
@@ -63,9 +73,20 @@
                         }else{
 //                            Toast.makeText(context, "Valid Bar code", Toast.LENGTH_LONG).show()
 
-                            basicAlert(scannedResult)
-                        }
+                            if(result.data?.get("Status").toString() != "Scrap" && result.data?.get("Status").toString() != "Transit"){
+
+                                basicAlert(scannedResult)
+                            }else{
+                                Toast.makeText(
+                                    context,
+                                    "The Product already become scrap or already transit. Please try again!!",
+                                    Toast.LENGTH_LONG
+                                ).show()
+                            }
+
+
                     }
+                    }
 
 
             } else {
@@ -80,6 +101,14 @@
     fun basicAlert(serialNo: String) {
 
         val db = Firebase.firestore
+        var sdf = SimpleDateFormat("dd/M/yyyy")
+        var currentDate = sdf.format(Date())
+
+        db.collection("ReceivedProduct").document(serialNo)
+            .get()
+            .addOnSuccessListener { result ->
+
+            }
 
         val builder: AlertDialog.Builder = AlertDialog.Builder(this.requireContext())
         builder.setTitle("Scrap Meterial")
@@ -88,13 +117,23 @@
         builder.setMessage("Are you sure put product ${serialNo} to scrap ?? ")
 
         builder.setPositiveButton("Save") { dialog, which ->
+
             db.collection("ReceivedProduct").document(serialNo)
-                .update(
-                    mapOf(
-                        "Status" to "scrap"
-                    )
-                )
-
+                .get()
+                .addOnSuccessListener { result ->
+
+                    if(result.data?.get("RackID").toString() == ""){
+                        currentDate = ""
+                    }
+
+                    db.collection("ReceivedProduct").document(serialNo)
+                        .update(
+                            mapOf(
+                                "RackOutDate" to currentDate.toString(),
+                                "Status" to "Scrap"
+                            )
+                        )
+                }
         }
 
         builder.setNegativeButton("Cancel") { dialog, which ->
@@ -102,4 +141,7 @@
         }
         builder.show()
     }
+
+
+
 }
\ No newline at end of file
Index: app/src/main/res/layout/app_bar_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".EmployeeActivity\">\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:theme=\"@style/Theme.WarehouseRIT3G2.AppBarOverlay\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"?attr/actionBarSize\"\r\n            android:background=\"?attr/colorPrimary\"\r\n            app:popupTheme=\"@style/Theme.WarehouseRIT3G2.PopupOverlay\" />\r\n\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <include layout=\"@layout/content_main\" />\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/fab\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"bottom|end\"\r\n        android:layout_marginEnd=\"@dimen/fab_margin\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        app:srcCompat=\"@android:drawable/ic_dialog_email\" />\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/app_bar_main.xml b/app/src/main/res/layout/app_bar_main.xml
--- a/app/src/main/res/layout/app_bar_main.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/app_bar_main.xml	(date 1631553978885)
@@ -15,20 +15,11 @@
             android:id="@+id/toolbar"
             android:layout_width="match_parent"
             android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary"
+            android:background="#3F51B5"
             app:popupTheme="@style/Theme.WarehouseRIT3G2.PopupOverlay" />
 
     </com.google.android.material.appbar.AppBarLayout>
 
     <include layout="@layout/content_main" />
 
-    <com.google.android.material.floatingactionbutton.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end"
-        android:layout_marginEnd="@dimen/fab_margin"
-        android:layout_marginBottom="16dp"
-        app:srcCompat="@android:drawable/ic_dialog_email" />
-
 </androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2.Data\r\n\r\nimport android.content.ContentValues\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Filter\r\nimport android.widget.Filterable\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport my.edu.tarc.warehouserit3g2.R\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass ProductAdapter (private var productList :MutableList<Product>, private val listener: OnItemClickListener ) : RecyclerView.Adapter<ProductAdapter.myViewHolder>(), Filterable{\r\n\r\n    var searchV = ArrayList<Product>();\r\n//    fun setData(searchV: ArrayList<Product>){\r\n//        this.searchV = searchV\r\n//        notifyDataSetChanged()\r\n//    }\r\n    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{\r\n\r\n        val partNo:TextView = itemView.findViewById(R.id.PartNo)\r\n        val serialNo:TextView =itemView.findViewById(R.id.SerialNo)\r\n\r\n\r\n        init {\r\n            Log.w(ContentValues.TAG, \"search value 30 = \")\r\n            itemView.setOnClickListener(this)\r\n        }\r\n\r\n        override fun onClick(p0: View?) {\r\n            Log.w(ContentValues.TAG, \"search value 34 = \")\r\n            val position = adapterPosition\r\n            if(position != RecyclerView.NO_POSITION) {\r\n                listener.onItemClick(position)\r\n            }\r\n        }\r\n    }\r\n\r\n    init {\r\n        searchV = productList as ArrayList<Product>\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {\r\n        Log.w(ContentValues.TAG, \"search value 42 = \")\r\n        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.received_item, parent, false)\r\n\r\n        return myViewHolder(itemView)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: myViewHolder, position: Int) {\r\n        Log.w(ContentValues.TAG, \"search value 49 = \")\r\n\r\n        val currentProduct = searchV[position]\r\n//        holder.itemView.setOnClickListener(\r\n        holder.partNo.text = currentProduct.partNo\r\n        holder.serialNo.text = currentProduct.SerialNo\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        Log.w(ContentValues.TAG, \"search value 57 = \")\r\n        return searchV.size\r\n    }\r\n\r\n\r\n    interface OnItemClickListener{\r\n\r\n        fun onItemClick(position: Int)\r\n\r\n    }\r\n\r\n    override fun getFilter(): Filter {\r\n        Log.w(ContentValues.TAG, \"search value 5 = \")\r\n        return object: Filter(){\r\n            override fun performFiltering(constraint: CharSequence?): FilterResults {\r\n                val charSearch = constraint.toString()\r\n                Log.w(ContentValues.TAG, \"search value 75 = ${charSearch} \")\r\n                if (charSearch.isEmpty()) {\r\n                    Log.w(ContentValues.TAG, \"77 \")\r\n                    searchV = productList as ArrayList<Product>\r\n\r\n\r\n                } else {\r\n                    val resultList = ArrayList<Product>()\r\n                    for (row in productList) {\r\n                        Log.w(ContentValues.TAG, \" 999 \")\r\n                       if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch)){\r\n                           Log.w(ContentValues.TAG, \"search value 83 = ${row} \")\r\n                           resultList.add(row)\r\n                       }\r\n                    }\r\n                    searchV = resultList\r\n                    Log.w(ContentValues.TAG, \"search value 88 = ${searchV} \")\r\n                }\r\n                val filterResults = FilterResults()\r\n                filterResults.values = searchV\r\n                Log.w(ContentValues.TAG, \"Final2 = ${filterResults} \")\r\n                return filterResults\r\n            }\r\n\r\n\r\n            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {\r\n                Log.w(ContentValues.TAG, \"final= ${filterResults} \")\r\n                searchV = filterResults!!.values as ArrayList<Product>\r\n                notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt	(date 1631551790252)
@@ -24,6 +24,8 @@
 
         val partNo:TextView = itemView.findViewById(R.id.PartNo)
         val serialNo:TextView =itemView.findViewById(R.id.SerialNo)
+        val quanti:TextView = itemView.findViewById(R.id.quantity)
+        val receivedD:TextView = itemView.findViewById(R.id.receivedDate)
 
 
         init {
@@ -58,6 +60,8 @@
 //        holder.itemView.setOnClickListener(
         holder.partNo.text = currentProduct.partNo
         holder.serialNo.text = currentProduct.SerialNo
+        holder.quanti.text = currentProduct.quantity
+        holder.receivedD.text = currentProduct.date
     }
 
     override fun getItemCount(): Int {
@@ -87,7 +91,7 @@
                     val resultList = ArrayList<Product>()
                     for (row in productList) {
                         Log.w(ContentValues.TAG, " 999 ")
-                       if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch)){
+                       if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch) || row.date.contains(charSearch) || row.quantity.contains(charSearch)){
                            Log.w(ContentValues.TAG, "search value 83 = ${row} ")
                            resultList.add(row)
                        }
Index: app/src/main/res/layout/display_rack.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"10dp\"\r\n    app:cardBackgroundColor=\"#B39ADF\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_margin=\"5dp\"\r\n        android:clickable=\"false\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_marginStart=\"15dp\"\r\n            android:layout_marginTop=\"7dp\"\r\n            tools:srcCompat=\"@tools:sample/avatars\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/RackID\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_toEndOf=\"@id/imageView\"\r\n            android:text=\"TextView\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/SerialNo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/RackID\"\r\n            android:layout_toEndOf=\"@id/imageView\"\r\n            android:text=\"TextView\" />\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_rack.xml b/app/src/main/res/layout/display_rack.xml
--- a/app/src/main/res/layout/display_rack.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/display_rack.xml	(date 1631550322666)
@@ -4,39 +4,30 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:layout_margin="10dp"
-    app:cardBackgroundColor="#B39ADF">
+    android:layout_margin="20dp"
+    android:layout_marginLeft="100dp"
+    android:layout_marginTop="20dp"
+    android:layout_marginRight="100dp"
+    app:cardBackgroundColor="#B2E2E8">
 
-    <RelativeLayout
+    <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_margin="5dp"
         android:clickable="false">
 
-        <ImageView
-            android:id="@+id/imageView"
-            android:layout_width="80dp"
-            android:layout_height="80dp"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentTop="true"
-            android:layout_marginStart="15dp"
-            android:layout_marginTop="7dp"
-            tools:srcCompat="@tools:sample/avatars" />
-
         <TextView
             android:id="@+id/RackID"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_toEndOf="@id/imageView"
-            android:text="TextView" />
+            android:text="TextView"
+            android:textSize="20dp"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
 
-        <TextView
-            android:id="@+id/SerialNo"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_below="@id/RackID"
-            android:layout_toEndOf="@id/imageView"
-            android:text="TextView" />
-    </RelativeLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
 
 </androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.TextView\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport my.edu.tarc.warehouserit3g2.Models.PersonViewModel\r\nimport my.edu.tarc.warehouserit3g2.databinding.ActivityEmployeeBinding\r\n\r\n\r\nclass EmployeeActivity : AppCompatActivity() {\r\n\r\n    private lateinit var drawerLayout: DrawerLayout\r\n    private lateinit var binding: ActivityEmployeeBinding\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var Person: PersonViewModel\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n//        setContentView(R.layout.activity_employee)\r\n\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_employee)\r\n\r\n        drawerLayout = binding.drawerLayout\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n\r\n        binding.appBarMain.fab.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n\r\n//        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val headerView = navView.getHeaderView(0)\r\n        val username : TextView = headerView.findViewById(R.id.usernameDis)\r\n        val navController = findNavController(R.id.myNavHostFragment)\r\n\r\n        Person = PersonViewModel.getInstance()\r\n        username.text = Person.getUsername().username\r\n\r\n\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.home_Fragment, R.id.receiveProduct_Fragment, R.id.onReceived_Fragment,\r\n                R.id.display_Received_item_Fragment, R.id.onRack_Product_Fragment, R.id.onRack_Display_Fragment,\r\n                R.id.changeRack_product_Fragment, R.id.scanScrap_Fragment\r\n            ), drawerLayout\r\n        )\r\n\r\n\r\n\r\n        // val navController = findNavController(R.id.myNavHostFragment)\r\n\r\n//        NavigationUI.setupActionBarWithNavController(this,navController, drawerLayout)\r\n\r\n//        NavigationUI.setupWithNavController(binding.navView, navController)\r\n\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = this.findNavController(R.id.myNavHostFragment)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt	(date 1631553978878)
@@ -1,27 +1,38 @@
 package my.edu.tarc.warehouserit3g2
 
+import android.content.ContentValues
+import android.content.Intent
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
+import android.util.Log
+import android.webkit.WebViewFragment
+import android.widget.Button
 import android.widget.TextView
+import androidx.core.view.GravityCompat
 import androidx.databinding.DataBindingUtil
 import androidx.drawerlayout.widget.DrawerLayout
+import androidx.fragment.app.FragmentManager
+import androidx.navigation.NavDirections
+import androidx.navigation.Navigation
 import androidx.navigation.findNavController
-import androidx.navigation.ui.AppBarConfiguration
-import androidx.navigation.ui.navigateUp
-import androidx.navigation.ui.setupActionBarWithNavController
-import androidx.navigation.ui.setupWithNavController
+import androidx.navigation.fragment.NavHostFragment
+import androidx.navigation.ui.*
 import com.google.android.material.navigation.NavigationView
 import com.google.android.material.snackbar.Snackbar
 import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
 import my.edu.tarc.warehouserit3g2.databinding.ActivityEmployeeBinding
 
 
+
 class EmployeeActivity : AppCompatActivity() {
 
     private lateinit var drawerLayout: DrawerLayout
     private lateinit var binding: ActivityEmployeeBinding
     private lateinit var appBarConfiguration: AppBarConfiguration
+    private lateinit var app2: AppBarConfiguration
     private lateinit var Person: PersonViewModel
+//    private val navController by lazy { NavHostFragment.findNavController(this) }
+
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -33,26 +44,25 @@
 
         setSupportActionBar(binding.appBarMain.toolbar)
 
-        binding.appBarMain.fab.setOnClickListener { view ->
-            Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
-                .setAction("Action", null).show()
-        }
+
 
 //        val drawerLayout: DrawerLayout = binding.drawerLayout
         val navView: NavigationView = binding.navView
         val headerView = navView.getHeaderView(0)
         val username : TextView = headerView.findViewById(R.id.usernameDis)
         val navController = findNavController(R.id.myNavHostFragment)
-
+//        val profileButton : TextView = headerView.findViewById(R.id.btnProfileSetting)
         Person = PersonViewModel.getInstance()
         username.text = Person.getUsername().username
 
 
+
         appBarConfiguration = AppBarConfiguration(
             setOf(
                 R.id.home_Fragment, R.id.receiveProduct_Fragment, R.id.onReceived_Fragment,
                 R.id.display_Received_item_Fragment, R.id.onRack_Product_Fragment, R.id.onRack_Display_Fragment,
-                R.id.changeRack_product_Fragment, R.id.scanScrap_Fragment
+                R.id.changeRack_product_Fragment, R.id.scanScrap_Fragment,R.id.profileEdit_Fragment, R.id.receiveProductList_Fragment,
+                R.id.scrapList_Fragment, R.id.displayTransit_Fragment
             ), drawerLayout
         )
 
@@ -66,10 +76,21 @@
 
         setupActionBarWithNavController(navController, appBarConfiguration)
         navView.setupWithNavController(navController)
+
+
     }
 
     override fun onSupportNavigateUp(): Boolean {
         val navController = this.findNavController(R.id.myNavHostFragment)
         return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()
     }
+
+    fun settings() {
+
+//        var i = view.findViewById(R.id.profileEdit_Fragment)
+//        findNavController(this).navigate(R.id.profileEdit_Fragment)
+
+
+    }
+
 }
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/displayScrap_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/displayScrap_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/displayScrap_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631442879869)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/displayScrap_Fragment.kt	(date 1631442879869)
@@ -0,0 +1,61 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.Navigation
+import androidx.navigation.fragment.NavHostFragment
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayScrapBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedDetailBinding
+
+
+class displayScrap_Fragment : Fragment() {
+
+    private lateinit var binding: FragmentDisplayScrapBinding
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_display_scrap, container, false)
+        val args = displayScrap_FragmentArgs.fromBundle(requireArguments())
+        val serialNo = args.serialNo
+        val db = Firebase.firestore
+
+        db.collection("ReceivedProduct").document(serialNo)
+            .get()
+            .addOnSuccessListener { result ->
+                if (result.data != null) {
+                    binding.tvtPartNo.text = result.data?.get("PartNo").toString()
+                    binding.tvtQuantity.text = result.data?.get("Quantity").toString()
+                    binding.tvtSerialNo.text = result.data?.get("SerialNo").toString()
+                    binding.tvtStatus.text = result.data?.get("Status").toString()
+                    binding.tvtReceivedDate.text = result.data?.get("ReceivedDate").toString()
+                    binding.tvtReceivedBy.text = result.data?.get("ReceivedBy").toString()
+                    binding.tvtRackID.text = result.data?.get("RackID").toString()
+                    binding.tvtRackInD.text = result.data?.get("RackInDate").toString()
+                    binding.tvtRackOutD.text = result.data?.get("RackOutDate").toString()
+
+                }else{
+                    Toast.makeText(context, "Cannot find scrap", Toast.LENGTH_SHORT).show()
+                    navController.navigate(R.id.action_displayScrap_Fragment_to_scrapList_Fragment)
+
+                }
+
+                binding.btnOk.setOnClickListener {
+                    navController.navigate(R.id.action_displayScrap_Fragment_to_scrapList_Fragment)
+                }
+            }
+
+       return binding.root
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_on_rack_product_display.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".OnRack_Product_Display_Fragment\">\r\n\r\n    <SearchView\r\n        android:id=\"@+id/searchOnRackProductView\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"10dp\"\r\n        android:background=\"#55F5F5F5\"\r\n        android:elevation=\"1dp\"\r\n        android:queryHint=\"Search\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/OnRackproductRecycleView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/searchOnRackProductView\"\r\n        tools:listitem=\"@layout/received_item\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack_product_display.xml b/app/src/main/res/layout/fragment_on_rack_product_display.xml
--- a/app/src/main/res/layout/fragment_on_rack_product_display.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/fragment_on_rack_product_display.xml	(date 1631440909719)
@@ -28,6 +28,6 @@
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/searchOnRackProductView"
-        tools:listitem="@layout/received_item" />
+        tools:listitem="@layout/display_rack_product" />
 </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.integration.android.IntentIntegrator\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentChangeRackProductBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding\r\n\r\nclass changeRack_product_Fragment : Fragment() {\r\n\r\n    var scannedResult: String = \"\"\r\n    private lateinit var binding: FragmentChangeRackProductBinding\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_change_rack_product, container, false)\r\n\r\n        binding.ChangeRackProductScan.setOnClickListener {\r\n            run {\r\n                val intentIntegrator = IntentIntegrator.forSupportFragment(this)\r\n                intentIntegrator.initiateScan()\r\n            }\r\n        }\r\n        return binding.root\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){\r\n\r\n        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)\r\n\r\n        val db = Firebase.firestore\r\n\r\n        if (result != null) {\r\n            Log.w(ContentValues.TAG, \"partNo 2 \")\r\n            if (result.contents != null) {\r\n                scannedResult = result.contents\r\n                binding.textView6.text = scannedResult\r\n                binding.txtValue2 .text = scannedResult\r\n                Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n//                val valueBarcode : String = scannedResult\r\n\r\n\r\n\r\n                db.collection(\"ReceivedProduct\").document(scannedResult)\r\n                    .get()\r\n                    .addOnSuccessListener { result ->\r\n                        if(result.data == null){\r\n                            Toast.makeText(context, \"Invalid QR code. Please try again !!\", Toast.LENGTH_LONG).show()\r\n                        }else{\r\n\r\n                            if(result.data?.get(\"Status\").toString() != \"scrap\"){\r\n                                if(result.data?.get(\"RackID\").toString() != \"\"){\r\n//\r\n                                    Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n                                    val action : NavDirections = changeRack_product_FragmentDirections.actionChangeRackProductFragmentToChangeRackRackFragment(scannedResult)\r\n                                    navController.navigate(action)\r\n\r\n                                }else {\r\n                                    Toast.makeText(context, \"Product not in rack. Please try again !!\", Toast.LENGTH_LONG).show()\r\n                                }\r\n                            }else{\r\n                                Toast.makeText(context, \"Product already become scrap. Please try again !!\", Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n            } else {\r\n                binding.textView6.text = \"scan failed\"\r\n                Log.w(ContentValues.TAG, \"scan failed\")\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data)\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt	(date 1631386520666)
@@ -65,7 +65,7 @@
                             Toast.makeText(context, "Invalid QR code. Please try again !!", Toast.LENGTH_LONG).show()
                         }else{
 
-                            if(result.data?.get("Status").toString() != "scrap"){
+                            if(result.data?.get("Status").toString() != "Scrap" && result.data?.get("Status").toString() != "Transit"){
                                 if(result.data?.get("RackID").toString() != ""){
 //
                                     Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
@@ -76,7 +76,7 @@
                                     Toast.makeText(context, "Product not in rack. Please try again !!", Toast.LENGTH_LONG).show()
                                 }
                             }else{
-                                Toast.makeText(context, "Product already become scrap. Please try again !!", Toast.LENGTH_LONG).show()
+                                Toast.makeText(context, "Product already become scrap or already transit", Toast.LENGTH_LONG).show()
                             }
                         }
                     }
Index: app/src/main/res/layout/fragment_display_scrap.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_display_scrap.xml b/app/src/main/res/layout/fragment_display_scrap.xml
new file mode 100644
--- /dev/null	(date 1631552718629)
+++ b/app/src/main/res/layout/fragment_display_scrap.xml	(date 1631552718629)
@@ -0,0 +1,221 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".displayScrap_Fragment">
+
+
+    <TextView
+        android:id="@+id/textView7"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="48dp"
+        android:layout_marginTop="44dp"
+        android:text="Part No :"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/tvtPartNo"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView7"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView7"
+        app:layout_constraintTop_toTopOf="@+id/textView7"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/textView9"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="Serial No :"
+        app:layout_constraintEnd_toEndOf="@+id/textView7"
+        app:layout_constraintTop_toBottomOf="@+id/textView7" />
+
+    <TextView
+        android:id="@+id/tvtSerialNo"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView9"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView9"
+        app:layout_constraintTop_toTopOf="@+id/textView9"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/textView11"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="Quantity :"
+        app:layout_constraintEnd_toEndOf="@+id/textView9"
+        app:layout_constraintTop_toBottomOf="@+id/textView9" />
+
+    <TextView
+        android:id="@+id/tvtQuantity"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView11"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView11"
+        app:layout_constraintTop_toTopOf="@+id/textView11"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/textView13"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="Status :"
+        app:layout_constraintEnd_toEndOf="@+id/textView11"
+        app:layout_constraintTop_toBottomOf="@+id/textView11" />
+
+    <TextView
+        android:id="@+id/tvtStatus"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView13"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView13"
+        app:layout_constraintTop_toTopOf="@+id/textView13"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/textView15"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="Received Date :"
+        app:layout_constraintEnd_toEndOf="@+id/textView13"
+        app:layout_constraintTop_toBottomOf="@+id/textView13" />
+
+    <TextView
+        android:id="@+id/tvtReceivedDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView15"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView15"
+        app:layout_constraintTop_toTopOf="@+id/textView15"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/textView17"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="ReceivedBy :"
+        app:layout_constraintEnd_toEndOf="@+id/textView15"
+        app:layout_constraintTop_toBottomOf="@+id/textView15" />
+
+    <TextView
+        android:id="@+id/tvtReceivedBy"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView17"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView17"
+        app:layout_constraintTop_toTopOf="@+id/textView17"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <Button
+        android:id="@+id/btnOk"
+        android:layout_width="313dp"
+        android:layout_height="52dp"
+        android:layout_marginBottom="20dp"
+        android:text="OK"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.571"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/tvtRackOutD" />
+
+    <TextView
+        android:id="@+id/textView30"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="RackIn Date :"
+        app:layout_constraintEnd_toEndOf="@+id/textView32"
+        app:layout_constraintTop_toBottomOf="@+id/textView32" />
+
+    <TextView
+        android:id="@+id/textView31"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="Scraped :"
+        app:layout_constraintEnd_toEndOf="@+id/textView30"
+        app:layout_constraintTop_toBottomOf="@+id/textView30" />
+
+    <TextView
+        android:id="@+id/textView32"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="40dp"
+        android:text="Rack ID :"
+        app:layout_constraintEnd_toEndOf="@+id/textView17"
+        app:layout_constraintTop_toBottomOf="@+id/textView17" />
+
+    <TextView
+        android:id="@+id/tvtRackID"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView32"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView32"
+        app:layout_constraintTop_toTopOf="@+id/textView32"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtRackInD"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView30"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.316"
+        app:layout_constraintStart_toEndOf="@+id/textView30"
+        app:layout_constraintTop_toTopOf="@+id/textView30"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtRackOutD"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView31"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.316"
+        app:layout_constraintStart_toEndOf="@+id/textView31"
+        app:layout_constraintTop_toTopOf="@+id/textView31"
+        app:layout_constraintVertical_bias="0.0" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.Navigation\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDetailBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedDetailBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n\r\nclass OnRack_Detail_Fragment : Fragment() {\r\n\r\n    private lateinit var binding: FragmentOnRackDetailBinding\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_detail, container, false)\r\n        val args = OnRack_Detail_FragmentArgs.fromBundle(requireArguments())\r\n        Log.w(ContentValues.TAG, \"partNo 4 = ${args.rackId}\")\r\n        Log.w(ContentValues.TAG, \"partNo 4 = ${args.serialNo}\")\r\n\r\n        val db = Firebase.firestore\r\n        val sdf = SimpleDateFormat(\"dd/M/yyyy\")\r\n        val rackId = args.rackId\r\n        val serialNo = args.serialNo\r\n        val rackStatus = \"In Rack\"\r\n        val rackInDate = sdf.format(Date())\r\n\r\n        db.collection(\"ReceivedProduct\").document(serialNo)\r\n            .get()\r\n            .addOnSuccessListener { result ->\r\n                val partNo = result.data?.get(\"PartNo\").toString()\r\n\r\n                binding.tvtPartN.text = partNo\r\n                binding.tvtRackId.text = rackId\r\n                binding.tvtRackInDate.text = rackInDate\r\n                binding.RackStatus.text = rackStatus\r\n                binding.tvtSerialN.text = serialNo\r\n                binding.tvtRackOutDate.text = \"-\"\r\n\r\n                val RackInValue = hashMapOf(\r\n                    \"PartNo\" to result.data?.get(\"PartNo\").toString(),\r\n                    \"ReceivedBy\" to result.data?.get(\"ReceivedBy\").toString(),\r\n                    \"ReceivedDate\" to result.data?.get(\"ReceivedDate\").toString(),\r\n                    \"Status\" to rackStatus,\r\n                    \"quantity\" to result.data?.get(\"quantity\").toString(),\r\n                    \"serialNo\" to result.data?.get(\"serialNo\").toString(),\r\n                    \"RackID\" to rackId,\r\n                    \"RackInDate\" to rackInDate,\r\n                    \"RackOutDate\" to \"\",\r\n                )\r\n\r\n                //db.collection(\"RackIn\").document(\"\").update(RackInValue as Map<String, Any>)\r\n                db.collection(\"ReceivedProduct\").document(serialNo).set(RackInValue)\r\n\r\n\r\n\r\n            }.addOnFailureListener { exception ->\r\n                Log.d(ContentValues.TAG, \"getfailedwith \", exception)\r\n            }\r\n\r\n        binding.BtnOk.setOnClickListener {\r\n            Navigation.findNavController(it).navigate(R.id.action_onRack_Detail_Fragment_to_onRack_Product_Fragment)\r\n        }\r\n\r\n\r\n\r\n        return binding.root\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt	(date 1631387447140)
@@ -51,20 +51,29 @@
                 binding.tvtSerialN.text = serialNo
                 binding.tvtRackOutDate.text = "-"
 
-                val RackInValue = hashMapOf(
-                    "PartNo" to result.data?.get("PartNo").toString(),
-                    "ReceivedBy" to result.data?.get("ReceivedBy").toString(),
-                    "ReceivedDate" to result.data?.get("ReceivedDate").toString(),
-                    "Status" to rackStatus,
-                    "quantity" to result.data?.get("quantity").toString(),
-                    "serialNo" to result.data?.get("serialNo").toString(),
-                    "RackID" to rackId,
-                    "RackInDate" to rackInDate,
-                    "RackOutDate" to "",
-                )
-
-                //db.collection("RackIn").document("").update(RackInValue as Map<String, Any>)
-                db.collection("ReceivedProduct").document(serialNo).set(RackInValue)
+//                val RackInValue = hashMapOf(
+//                    "PartNo" to result.data?.get("PartNo").toString(),
+//                    "ReceivedBy" to result.data?.get("ReceivedBy").toString(),
+//                    "ReceivedDate" to result.data?.get("ReceivedDate").toString(),
+//                    "Status" to rackStatus,
+//                    "Quantity" to result.data?.get("Quantity").toString(),
+//                    "SerialNo" to result.data?.get("SerialNo").toString(),
+//                    "RackID" to rackId,
+//                    "RackInDate" to rackInDate,
+//                    "RackOutDate" to "",
+//                )
+
+                //db.collection("RackIn").document("").update(RackInValue as Map<String, Any>)
+//                db.collection("ReceivedProduct").document(serialNo).set(RackInValue)
+                db.collection("ReceivedProduct").document(serialNo)
+                    .update(
+                        mapOf(
+                            "RackID" to rackId,
+                            "RackInDate" to rackInDate,
+                            "RackOutDate" to "",
+                            "Status" to rackStatus
+                        )
+                    )
 
 
 
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/scrapList_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/scrapList_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/scrapList_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631552281883)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/scrapList_Fragment.kt	(date 1631552281883)
@@ -0,0 +1,100 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.widget.SearchView
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Data.Product
+import my.edu.tarc.warehouserit3g2.Data.ScrapAdapter
+import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentScrapListBinding
+
+
+class scrapList_Fragment : Fragment(), ScrapAdapter.OnItemClickListener {
+
+    private lateinit var binding: FragmentScrapListBinding
+    var productList: MutableList<Product> = ArrayList()
+    lateinit var adapter: ScrapAdapter
+    lateinit var myRecyclerView : RecyclerView
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+    lateinit var searchValue : ArrayList<Product>
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_scrap_list_, container, false)
+        val db = Firebase.firestore
+        productList.clear()
+        myRecyclerView = binding.scrapproductRecycleView
+
+        db.collection("ReceivedProduct").orderBy("PartNo")
+            .get()
+            .addOnSuccessListener { result ->
+                val i = 0
+                for (document in result) {
+                    Log.d(ContentValues.TAG, "${document.id} => ${document.data}")
+
+                    if(document.data?.get("Status").toString() == "Scrap") {
+
+                        val p = Product("${document.data.get("PartNo").toString()}", "${document.id}","${document.data.get("RackOutDate").toString()}","")
+                        productList.add(p)
+
+                        Log.w(ContentValues.TAG, "name2 = ${productList}")
+                    }
+                }
+
+                productList.sortBy { it.partNo }
+
+                adapter = ScrapAdapter(productList, this)
+                myRecyclerView.adapter = adapter
+
+                binding.scrapsearchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,
+                    android.widget.SearchView.OnQueryTextListener {
+                    val myRecyclerView : RecyclerView = binding.scrapproductRecycleView
+
+
+                    override fun onQueryTextSubmit(query: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${query}")
+
+                        return true
+                    }
+
+                    override fun onQueryTextChange(newText: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${newText}")
+
+                        adapter.filter.filter(newText)
+
+
+                        return false
+                    }
+                })
+            }
+
+        return binding.root
+    }
+
+    override fun onItemClick(position: Int) {
+        Toast.makeText(context, "Item $position clicked", Toast.LENGTH_SHORT).show()
+        val clickedItem : Product = productList[position]
+        Log.d(ContentValues.TAG, "DocumentSnapshot qty data: ${clickedItem}")
+        val action : NavDirections = scrapList_FragmentDirections.actionScrapListFragmentToDisplayScrapFragment(clickedItem.SerialNo)
+
+        navController.navigate(action)
+//        ProductAdapter.notifyItemChanged(position)
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/display_scrap.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_scrap.xml b/app/src/main/res/layout/display_scrap.xml
new file mode 100644
--- /dev/null	(date 1631552770671)
+++ b/app/src/main/res/layout/display_scrap.xml	(date 1631552770671)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="10dp"
+    android:scrollbarSize="6dp"
+    app:cardBackgroundColor="#B2E2E8">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:clickable="false">
+
+        <TextView
+            android:id="@+id/ScrapPartNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="TextView"
+            android:textSize="18dp"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/displaySerial"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/ScrapPartNo"
+
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="0dp"
+            android:layout_marginTop="7dp"
+            android:text="Serial No :" />
+
+        <TextView
+            android:id="@+id/displayRackOutDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/displaySerial"
+
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="0dp"
+            android:layout_marginTop="9dp"
+            android:text="RackOut Date : " />
+
+        <TextView
+            android:id="@+id/ScrapSerialNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/ScrapPartNo"
+            android:layout_marginStart="99dp"
+            android:layout_marginTop="9dp"
+            android:layout_toEndOf="@id/displaySerial"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/rackOutDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/ScrapSerialNo"
+            android:layout_marginStart="68dp"
+            android:layout_marginTop="7dp"
+            android:layout_toEndOf="@id/displayRackOutDate"
+            android:text="TextView" />
+    </RelativeLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2.Data\r\n\r\nimport android.content.ContentValues\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Filter\r\nimport android.widget.Filterable\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport my.edu.tarc.warehouserit3g2.OnRack_Product_Display_Fragment\r\nimport my.edu.tarc.warehouserit3g2.R\r\n\r\nclass RackProductAdapter(private var productList:MutableList<Product>, private val listener: OnRack_Product_Display_Fragment) : RecyclerView.Adapter<RackProductAdapter.myViewHolder>(),\r\n    Filterable {\r\n\r\n    var searchV = ArrayList<Product>();\r\n\r\n    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{\r\n\r\n        val OnRackPartNo: TextView = itemView.findViewById(R.id.OnRackPartNo)\r\n        val OnRackSerialNo: TextView =itemView.findViewById(R.id.OnRackSerialNo)\r\n\r\n\r\n        init {\r\n            Log.w(ContentValues.TAG, \"search value 30 = \")\r\n            itemView.setOnClickListener(this)\r\n        }\r\n\r\n        override fun onClick(p0: View?) {\r\n            Log.w(ContentValues.TAG, \"search value 34 = \")\r\n            val position = adapterPosition\r\n            if(position != RecyclerView.NO_POSITION) {\r\n                listener.onItemClick(position)\r\n            }\r\n        }\r\n    }\r\n\r\n    init {\r\n        searchV = productList as ArrayList<Product>\r\n    }\r\n\r\n    interface OnItemClickListener {\r\n        fun onItemClick(position: Int)\r\n\r\n    }\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {\r\n        Log.w(ContentValues.TAG, \"search value 42 = \")\r\n        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.display_rack_product, parent, false)\r\n\r\n        return myViewHolder(itemView)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: myViewHolder, position: Int) {\r\n        Log.w(ContentValues.TAG, \"search value 49 = \")\r\n\r\n        val currentProduct = searchV[position]\r\n//        holder.itemView.setOnClickListener(\r\n        holder.OnRackPartNo.text = currentProduct.partNo\r\n        holder.OnRackSerialNo.text = currentProduct.SerialNo\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        Log.w(ContentValues.TAG, \"search value 57 = \")\r\n        return searchV.size\r\n    }\r\n\r\n    override fun getFilter(): Filter {\r\n        return object: Filter(){\r\n            override fun performFiltering(constraint: CharSequence?): FilterResults {\r\n                val charSearch = constraint.toString()\r\n                Log.w(ContentValues.TAG, \"search value 75 = ${charSearch} \")\r\n                if (charSearch.isEmpty()) {\r\n                    Log.w(ContentValues.TAG, \"77 \")\r\n                    searchV = productList as ArrayList<Product>\r\n\r\n\r\n                } else {\r\n                    val resultList = ArrayList<Product>()\r\n                    for (row in productList) {\r\n                        Log.w(ContentValues.TAG, \" 999 \")\r\n                        if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch)){\r\n                            Log.w(ContentValues.TAG, \"search value 83 = ${row} \")\r\n                            resultList.add(row)\r\n                        }\r\n                    }\r\n                    searchV = resultList\r\n                    Log.w(ContentValues.TAG, \"search value 88 = ${searchV} \")\r\n                }\r\n                val filterResults = FilterResults()\r\n                filterResults.values = searchV\r\n                Log.w(ContentValues.TAG, \"Final2 = ${filterResults} \")\r\n                return filterResults\r\n            }\r\n\r\n\r\n            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {\r\n                Log.w(ContentValues.TAG, \"final= ${filterResults} \")\r\n                searchV = filterResults!!.values as ArrayList<Product>\r\n                notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt	(date 1631548233039)
@@ -12,15 +12,18 @@
 import my.edu.tarc.warehouserit3g2.OnRack_Product_Display_Fragment
 import my.edu.tarc.warehouserit3g2.R
 
-class RackProductAdapter(private var productList:MutableList<Product>, private val listener: OnRack_Product_Display_Fragment) : RecyclerView.Adapter<RackProductAdapter.myViewHolder>(),
+class RackProductAdapter(private var productList:MutableList<RackProduct>, private val listener: OnRack_Product_Display_Fragment) : RecyclerView.Adapter<RackProductAdapter.myViewHolder>(),
     Filterable {
 
-    var searchV = ArrayList<Product>();
+    var searchV = ArrayList<RackProduct>();
 
     inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{
 
-        val OnRackPartNo: TextView = itemView.findViewById(R.id.OnRackPartNo)
-        val OnRackSerialNo: TextView =itemView.findViewById(R.id.OnRackSerialNo)
+        val OnRackPartNo: TextView = itemView.findViewById(R.id.disPartNo)
+        val OnRackSerialNo: TextView =itemView.findViewById(R.id.SerialNo)
+        val OnRackRackID: TextView = itemView.findViewById(R.id.rackID)
+        val OnRackQuantity: TextView = itemView.findViewById(R.id.quantity)
+        val OnRackRackInD: TextView = itemView.findViewById(R.id.rackInDate)
 
 
         init {
@@ -38,7 +41,7 @@
     }
 
     init {
-        searchV = productList as ArrayList<Product>
+        searchV = productList as ArrayList<RackProduct>
     }
 
     interface OnItemClickListener {
@@ -59,6 +62,9 @@
 //        holder.itemView.setOnClickListener(
         holder.OnRackPartNo.text = currentProduct.partNo
         holder.OnRackSerialNo.text = currentProduct.SerialNo
+        holder.OnRackQuantity.text = currentProduct.quantity
+        holder.OnRackRackID.text = currentProduct.rackID
+        holder.OnRackRackInD.text = currentProduct.rackInDate
     }
 
     override fun getItemCount(): Int {
@@ -73,14 +79,15 @@
                 Log.w(ContentValues.TAG, "search value 75 = ${charSearch} ")
                 if (charSearch.isEmpty()) {
                     Log.w(ContentValues.TAG, "77 ")
-                    searchV = productList as ArrayList<Product>
+                    searchV = productList as ArrayList<RackProduct>
 
 
                 } else {
-                    val resultList = ArrayList<Product>()
+                    val resultList = ArrayList<RackProduct>()
                     for (row in productList) {
                         Log.w(ContentValues.TAG, " 999 ")
-                        if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch)){
+                        if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch) || row.quantity.contains(charSearch) ||
+                            row.rackID.contains(charSearch) || row.rackInDate.contains(charSearch)){
                             Log.w(ContentValues.TAG, "search value 83 = ${row} ")
                             resultList.add(row)
                         }
@@ -97,7 +104,7 @@
 
             override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
                 Log.w(ContentValues.TAG, "final= ${filterResults} ")
-                searchV = filterResults!!.values as ArrayList<Product>
+                searchV = filterResults!!.values as ArrayList<RackProduct>
                 notifyDataSetChanged()
             }
 
Index: app/src/main/res/layout/fragment_scrap_list_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_scrap_list_.xml b/app/src/main/res/layout/fragment_scrap_list_.xml
new file mode 100644
--- /dev/null	(date 1631544357329)
+++ b/app/src/main/res/layout/fragment_scrap_list_.xml	(date 1631544357329)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    tools:context=".scrapList_Fragment">
+
+    <SearchView
+        android:id="@+id/scrapsearchView"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:background="#55F5F5F5"
+        android:elevation="1dp"
+        android:queryHint="Search"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/scrapproductRecycleView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/scrapsearchView"
+        tools:listitem="@layout/display_scrap" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDB.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2.Data\r\n\r\nimport android.content.Context\r\nimport androidx.room.Database\r\nimport androidx.room.Room\r\nimport androidx.room.RoomDatabase\r\n\r\n\r\n@Database (entities = [Person::class] , version = 1, exportSchema = false)\r\nabstract class PersonDB:RoomDatabase() {\r\n    abstract val personDao: PersonDB\r\n\r\n    companion object {\r\n\r\n        @Volatile\r\n        private var INSTANCE: PersonDB? = null\r\n\r\n        fun getInstance(context: Context): PersonDB {\r\n            synchronized(this) {\r\n                var instance = INSTANCE\r\n\r\n                if (instance == null) {\r\n                    instance = Room.databaseBuilder(\r\n                        context.applicationContext,\r\n                        PersonDB::class.java,\r\n                        \"MyProductDatabase\"\r\n                    )\r\n                        .fallbackToDestructiveMigration()\r\n                        .build()\r\n                    INSTANCE = instance\r\n                }\r\n                return instance\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDB.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDB.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDB.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDB.kt	(date 1631285806842)
@@ -1,36 +1,36 @@
-package my.edu.tarc.warehouserit3g2.Data
-
-import android.content.Context
-import androidx.room.Database
-import androidx.room.Room
-import androidx.room.RoomDatabase
-
-
-@Database (entities = [Person::class] , version = 1, exportSchema = false)
-abstract class PersonDB:RoomDatabase() {
-    abstract val personDao: PersonDB
-
-    companion object {
-
-        @Volatile
-        private var INSTANCE: PersonDB? = null
-
-        fun getInstance(context: Context): PersonDB {
-            synchronized(this) {
-                var instance = INSTANCE
-
-                if (instance == null) {
-                    instance = Room.databaseBuilder(
-                        context.applicationContext,
-                        PersonDB::class.java,
-                        "MyProductDatabase"
-                    )
-                        .fallbackToDestructiveMigration()
-                        .build()
-                    INSTANCE = instance
-                }
-                return instance
-            }
-        }
-    }
-}
\ No newline at end of file
+//package my.edu.tarc.warehouserit3g2.Data
+//
+//import android.content.Context
+//import androidx.room.Database
+//import androidx.room.Room
+//import androidx.room.RoomDatabase
+//
+//
+//@Database (entities = [Person::class] , version = 1, exportSchema = false)
+//abstract class PersonDB:RoomDatabase() {
+//    abstract val personDao: PersonDB
+//
+//    companion object {
+//
+//        @Volatile
+//        private var INSTANCE: PersonDB? = null
+//
+//        fun getInstance(context: Context): PersonDB {
+//            synchronized(this) {
+//                var instance = INSTANCE
+//
+//                if (instance == null) {
+//                    instance = Room.databaseBuilder(
+//                        context.applicationContext,
+//                        PersonDB::class.java,
+//                        "MyProductDatabase"
+//                    )
+//                        .fallbackToDestructiveMigration()
+//                        .build()
+//                    INSTANCE = instance
+//                }
+//                return instance
+//            }
+//        }
+//    }
+//}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransit.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransit.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransit.kt
new file mode 100644
--- /dev/null	(date 1631467543065)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransit.kt	(date 1631467543065)
@@ -0,0 +1,3 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+data class DisplayTransit(var partNo :String, var quantity :String, var from :String, var destination :String)
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransitAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransitAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransitAdapter.kt
new file mode 100644
--- /dev/null	(date 1631468839523)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/DisplayTransitAdapter.kt	(date 1631468839523)
@@ -0,0 +1,115 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+import android.content.ContentValues
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Filter
+import android.widget.Filterable
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import my.edu.tarc.warehouserit3g2.DisplayTransit_Fragment
+import my.edu.tarc.warehouserit3g2.R
+
+
+class DisplayTransitAdapter ( private var TransitProductList: MutableList<DisplayTransit>, private val listener: DisplayTransit_Fragment
+) : RecyclerView.Adapter<DisplayTransitAdapter.myViewHolder>(), Filterable {
+
+    var searchV = ArrayList<DisplayTransit>();
+
+    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{
+
+        val partNo: TextView = itemView.findViewById(R.id.TransitPartNo)
+        val quantity: TextView = itemView.findViewById(R.id.TransitQuantity)
+        val destination: TextView = itemView.findViewById(R.id.TransitDestination)
+        val from: TextView = itemView.findViewById(R.id.TransitFrom)
+
+        init {
+            Log.w(ContentValues.TAG, "search value 30 = ")
+            itemView.setOnClickListener(this)
+        }
+
+        override fun onClick(p0: View?) {
+            Log.w(ContentValues.TAG, "search value 34 = ")
+            val position = adapterPosition
+            if(position != RecyclerView.NO_POSITION) {
+                listener.onItemClick(position)
+            }
+        }
+
+    }
+    init {
+        searchV = TransitProductList as ArrayList<DisplayTransit>
+    }
+
+    interface OnItemClickListener{
+
+        fun onItemClick(position: Int)
+
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {
+        Log.w(ContentValues.TAG, "search value 42 = ")
+        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.display_transit, parent, false)
+
+        return myViewHolder(itemView)
+    }
+
+    override fun onBindViewHolder(holder: myViewHolder, position: Int) {
+//        Log.w(ContentValues.TAG, "search value 49 = ${current.partNo}")
+
+        val current = searchV[position]
+        Log.w(ContentValues.TAG, "search value 49 = ${current.partNo}")
+//        holder.itemView.setOnClickListener(
+        holder.partNo.text = current.partNo
+        holder.quantity.text = current.quantity
+        holder.destination.text = current.destination
+        holder.from.text = current.from
+
+    }
+
+    override fun getItemCount(): Int {
+        return searchV.size
+    }
+
+    override fun getFilter(): Filter {
+        return object: Filter(){
+            override fun performFiltering(constraint: CharSequence?): FilterResults {
+                val charSearch = constraint.toString()
+                Log.w(ContentValues.TAG, "search value 75 = ${charSearch} ")
+                if (charSearch.isEmpty()) {
+                    Log.w(ContentValues.TAG, "77 ")
+                    searchV = TransitProductList as ArrayList<DisplayTransit>
+
+
+                } else {
+                    val resultList = ArrayList<DisplayTransit>()
+                    for (row in TransitProductList) {
+                        Log.w(ContentValues.TAG, " 999 ")
+                        if(row.partNo.contains(charSearch) || row.quantity.contains(charSearch) || row.destination.contains(charSearch)
+                            || row.from.contains(charSearch)){
+
+                            Log.w(ContentValues.TAG, "search value 83 = ${row} ")
+                            resultList.add(row)
+                        }
+                    }
+                    searchV = resultList
+                    Log.w(ContentValues.TAG, "search value 88 = ${searchV} ")
+                }
+                val filterResults = FilterResults()
+                filterResults.values = searchV
+                Log.w(ContentValues.TAG, "Final2 = ${filterResults} ")
+                return filterResults
+            }
+
+
+            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
+                Log.w(ContentValues.TAG, "final= ${filterResults} ")
+                searchV = filterResults!!.values as ArrayList<DisplayTransit>
+                notifyDataSetChanged()
+            }
+
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/DisplayTransit_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/DisplayTransit_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/DisplayTransit_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631473794789)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/DisplayTransit_Fragment.kt	(date 1631473794789)
@@ -0,0 +1,101 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import android.view.Display
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.widget.SearchView
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Data.DisplayTransit
+import my.edu.tarc.warehouserit3g2.Data.DisplayTransitAdapter
+import my.edu.tarc.warehouserit3g2.Data.Product
+import my.edu.tarc.warehouserit3g2.Data.ProductAdapter
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayTransitBinding
+
+class DisplayTransit_Fragment : Fragment(), DisplayTransitAdapter.OnItemClickListener {
+
+    private lateinit var binding: FragmentDisplayTransitBinding
+    var transitProduct: MutableList<DisplayTransit> = ArrayList()
+    lateinit var adapter: DisplayTransitAdapter
+    lateinit var myRecyclerView : RecyclerView
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_display_transit, container, false)
+        val db = Firebase.firestore
+        transitProduct.clear()
+        myRecyclerView = binding.TransitRecycleView
+
+
+        db.collection("Transfer")
+            .get()
+            .addOnSuccessListener { result ->
+                val i = 0
+                for (document in result) {
+                    Log.d(ContentValues.TAG, "${document.id} => ${document.data}")
+
+//                    if(document.data?.get("Status").toString() != "inTransit" && document.data?.get("Status").toString() != "complete") {
+                    if(document.data?.get("status").toString() == "pending" ) {
+                        val p = DisplayTransit("${document.data.get("partNo").toString()}", "${document.data.get("quantity").toString()}",
+                        "${document.data.get("from").toString()}", "${document.data.get("to").toString()}")
+                        transitProduct.add(p)
+
+                        Log.w(ContentValues.TAG, "name2 = ${transitProduct}")
+                    }
+                }
+
+                transitProduct.sortBy { it.partNo }
+
+                adapter = DisplayTransitAdapter(transitProduct, this)
+                myRecyclerView.adapter = adapter
+
+                binding.TransitSearchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,
+                    android.widget.SearchView.OnQueryTextListener {
+                    val myRecyclerView : RecyclerView = binding.TransitRecycleView
+
+
+                    override fun onQueryTextSubmit(query: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${query}")
+
+                        return true
+                    }
+
+                    override fun onQueryTextChange(newText: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${newText}")
+
+                        adapter.filter.filter(newText)
+
+
+                        return false
+                    }
+                })
+            }
+
+        return binding.root
+    }
+
+    override fun onItemClick(position: Int) {
+        Toast.makeText(context, "Item $position clicked", Toast.LENGTH_SHORT).show()
+        val clickedItem : DisplayTransit = transitProduct[position]
+        Log.d(ContentValues.TAG, "DocumentSnapshot qty data: ${clickedItem}")
+//        val action : NavDirections = Display_Received_item_FragmentDirections.actionDisplayReceivedItemFragmentToOnReceivedDetailFragment("0", "view", clickedItem.SerialNo)
+//
+//        navController.navigate(action)
+//        ProductAdapter.notifyItemChanged(position)
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/display_transit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_transit.xml b/app/src/main/res/layout/display_transit.xml
new file mode 100644
--- /dev/null	(date 1631553891182)
+++ b/app/src/main/res/layout/display_transit.xml	(date 1631553891182)
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="10dp"
+    app:cardBackgroundColor="#B2E2E8">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:clickable="false">
+
+        <TextView
+            android:id="@+id/TransitPartNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/displayQuantity"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/TransitPartNo"
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="0dp"
+            android:layout_marginTop="15dp"
+            android:text="Quantity : " />
+
+        <TextView
+            android:id="@+id/displayFrom"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/displayQuantity"
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="2dp"
+            android:layout_marginTop="15dp"
+            android:text="From :" />
+
+        <TextView
+            android:id="@+id/displayTo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/displayFrom"
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="1dp"
+            android:layout_marginTop="10dp"
+            android:text="To :" />
+
+        <TextView
+            android:id="@+id/TransitQuantity"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+
+            android:layout_alignParentTop="true"
+            android:layout_marginStart="23dp"
+            android:layout_marginTop="37dp"
+            android:layout_toEndOf="@id/displayQuantity"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/TransitFrom"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/TransitQuantity"
+            android:layout_marginStart="44dp"
+            android:layout_marginTop="13dp"
+            android:layout_toEndOf="@id/displayFrom"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/TransitDestination"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/TransitFrom"
+            android:layout_marginStart="64dp"
+            android:layout_marginTop="10dp"
+            android:layout_toEndOf="@id/displayTo"
+            android:text="TextView" />
+
+    </RelativeLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2.Data\r\n\r\nimport androidx.room.Dao\r\nimport androidx.room.Insert\r\n\r\n@Dao\r\ninterface PersonDao {\r\n\r\n    @Insert\r\n    fun insertPerson(p:Person )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDao.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDao.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDao.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/PersonDao.kt	(date 1631285806834)
@@ -1,11 +1,11 @@
-package my.edu.tarc.warehouserit3g2.Data
-
-import androidx.room.Dao
-import androidx.room.Insert
-
-@Dao
-interface PersonDao {
-
-    @Insert
-    fun insertPerson(p:Person )
-}
\ No newline at end of file
+//package my.edu.tarc.warehouserit3g2.Data
+//
+//import androidx.room.Dao
+//import androidx.room.Insert
+//
+//@Dao
+//interface PersonDao {
+//
+//    @Insert
+//    fun insertPerson(p:Person )
+//}
\ No newline at end of file
Index: app/src/main/res/layout/display_rack_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"10dp\"\r\n    app:cardBackgroundColor=\"#B39ADF\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_margin=\"5dp\"\r\n        android:clickable=\"false\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_marginStart=\"15dp\"\r\n            android:layout_marginTop=\"7dp\"\r\n            tools:srcCompat=\"@tools:sample/avatars\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/OnRackPartNo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_toEndOf=\"@id/imageView\"\r\n            android:text=\"TextView\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/OnRackSerialNo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/OnRackPartNo\"\r\n            android:layout_toEndOf=\"@id/imageView\"\r\n            android:text=\"TextView\" />\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_rack_product.xml b/app/src/main/res/layout/display_rack_product.xml
--- a/app/src/main/res/layout/display_rack_product.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/display_rack_product.xml	(date 1631551289026)
@@ -4,37 +4,100 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_margin="10dp"
-    app:cardBackgroundColor="#B39ADF">
+    app:cardBackgroundColor="#B2E2E8"
+    app:cardElevation="10dp">
 
     <RelativeLayout
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_margin="5dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="0dp"
         android:clickable="false">
 
-        <ImageView
-            android:id="@+id/imageView"
-            android:layout_width="80dp"
-            android:layout_height="80dp"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentTop="true"
-            android:layout_marginStart="15dp"
-            android:layout_marginTop="7dp"
-            tools:srcCompat="@tools:sample/avatars" />
+        <TextView
+            android:id="@+id/disPartNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:text="TextView"
+            android:textColor="#000000"
+            android:textSize="18sp"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/disSerialNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disPartNo"
+            android:layout_marginLeft="10dp"
+            android:layout_marginTop="10dp"
+            android:text="Serial No :" />
+
+        <TextView
+            android:id="@+id/disRackID"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disSerialNo"
+            android:layout_marginLeft="10dp"
+            android:layout_marginTop="10dp"
+            android:text="Rack ID :" />
+
+        <TextView
+            android:id="@+id/disQuantity"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disRackID"
+            android:layout_marginLeft="10dp"
+            android:layout_marginTop="10dp"
+            android:text="Quantity  :" />
+
+        <TextView
+            android:id="@+id/disRackInDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disQuantity"
+            android:layout_marginLeft="10dp"
+            android:layout_marginTop="10dp"
+            android:layout_marginBottom="10dp"
+            android:text="RackIn Date  :" />
+
+        <TextView
+            android:id="@+id/SerialNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disPartNo"
+            android:layout_marginStart="75dp"
+            android:layout_marginTop="10dp"
+            android:layout_toEndOf="@id/disSerialNo"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/rackID"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/SerialNo"
+            android:layout_marginStart="86dp"
+            android:layout_marginTop="10dp"
+            android:layout_toEndOf="@id/disRackID"
+            android:text="TextView" />
 
         <TextView
-            android:id="@+id/OnRackPartNo"
+            android:id="@+id/quantity"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_toEndOf="@id/imageView"
+            android:layout_below="@id/rackID"
+            android:layout_marginStart="78dp"
+            android:layout_marginTop="10dp"
+            android:layout_toEndOf="@id/disQuantity"
             android:text="TextView" />
 
         <TextView
-            android:id="@+id/OnRackSerialNo"
+            android:id="@+id/rackInDate"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_below="@id/OnRackPartNo"
-            android:layout_toEndOf="@id/imageView"
+            android:layout_below="@id/quantity"
+            android:layout_marginStart="55dp"
+            android:layout_marginTop="10dp"
+            android:layout_toEndOf="@id/disRackInDate"
             android:text="TextView" />
     </RelativeLayout>
 
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.Navigation\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.BarcodeFormat\r\nimport com.google.zxing.MultiFormatWriter\r\nimport com.google.zxing.WriterException\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedDetailBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n\r\nclass OnReceivedDetail_Fragment : Fragment() {\r\n\r\n    private lateinit var binding: FragmentOnReceivedDetailBinding\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_received_detail_, container, false)\r\n\r\n\r\n\r\n        val args = OnReceivedDetail_FragmentArgs.fromBundle(requireArguments())\r\n        var partNumberDatabase = \"\"\r\n        var quantityDataBase = \"\"\r\n        var serialNumber = \"\"\r\n        val myArray3 = arrayOf<String>(\"SE\",\"RE\",\"SA\",\"YO\",\"RA\",\"KE\")\r\n        val db = Firebase.firestore\r\n        val place = args.place\r\n        val seNo = args.serialNo\r\n\r\n\r\n      //  binding.tvtPartNo.text = args.barcodeValue\r\n        Log.w(ContentValues.TAG, \"partNo 4 = ${args.barcodeValue}\")\r\n\r\n        if(place == \"receive\") {\r\n\r\n\r\n            db.collection(\"Barcode\").document(args.barcodeValue)\r\n                .get()\r\n                .addOnSuccessListener { result ->\r\n                    Log.d(ContentValues.TAG, \"Abaaba\")\r\n                    if (result.data != null) {\r\n\r\n                        Log.d(ContentValues.TAG, \"DocumentSnapshot result data: ${result.data}\")\r\n                        val randomInt = (0..5).random()\r\n\r\n                        val rnd = Random()\r\n                        val number: Int = rnd.nextInt(999999999)\r\n                        var no = String.format(\"%07d\", number)\r\n                        val sdf = SimpleDateFormat(\"dd/M/yyyy\")\r\n                        val currentDate = sdf.format(Date())\r\n                        val receivedBy = \"Data Kang\"\r\n\r\n                        partNumberDatabase = result.data?.get(\"partNo\").toString()\r\n                        quantityDataBase = result.data?.get(\"quantity\").toString()\r\n                        serialNumber = myArray3[randomInt] + no\r\n\r\n                        Log.d(\r\n                            ContentValues.TAG,\r\n                            \"DocumentSnapshot part data: ${partNumberDatabase}\"\r\n                        )\r\n                        Log.d(ContentValues.TAG, \"DocumentSnapshot qty data: ${quantityDataBase}\")\r\n\r\n\r\n\r\n\r\n                        Log.d(ContentValues.TAG, \"Serial number: ${serialNumber}\")\r\n                        val bitmap = generateQRCode(serialNumber)\r\n                        binding.imagePreview.setImageBitmap(bitmap)\r\n\r\n                        binding.tvtPartNo.text = partNumberDatabase.toString()\r\n                        binding.tvtQuantity.text = quantityDataBase.toString()\r\n                        binding.tvtSerialNo.text = serialNumber.toString()\r\n                        binding.tvtStatus.text = \"received\"\r\n                        binding.tvtReceivedDate.text = currentDate\r\n                        binding.tvtReceivedBy.text = receivedBy\r\n                        saveData(\r\n                            partNumberDatabase,\r\n                            quantityDataBase,\r\n                            serialNumber,\r\n                            \"received\",\r\n                            currentDate,\r\n                            receivedBy\r\n                        )\r\n\r\n                        binding.btnOk.setOnClickListener {\r\n                            Navigation.findNavController(it)\r\n                                .navigate(R.id.action_onReceivedDetail_Fragment_to_onReceived_Fragment)\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }.addOnFailureListener { exception ->\r\n                    Log.d(ContentValues.TAG, \"getfailedwith \", exception)\r\n                }\r\n        } else if(place == \"view\"){\r\n            db.collection(\"ReceivedProduct\").document(seNo)\r\n                .get()\r\n                .addOnSuccessListener { result ->\r\n\r\n                    binding.tvtPartNo.text = result.data?.get(\"PartNo\").toString()\r\n                    binding.tvtQuantity.text = result.data?.get(\"quantity\").toString()\r\n                    binding.tvtSerialNo.text = result.id\r\n                    binding.tvtStatus.text = result.data?.get(\"Status\").toString()\r\n                    binding.tvtReceivedDate.text = result.data?.get(\"ReceivedDate\").toString()\r\n                    binding.tvtReceivedBy.text = result.data?.get(\"ReceivedBy\").toString()\r\n\r\n                    val bitmap = generateQRCode(result.id)\r\n                    binding.imagePreview.setImageBitmap(bitmap)\r\n\r\n                    binding.btnOk.setOnClickListener {\r\n                        Navigation.findNavController(it).navigate(R.id.action_onReceivedDetail_Fragment_to_display_Received_item_Fragment)\r\n\r\n                    }\r\n\r\n                }.addOnFailureListener { exception ->\r\n                    Log.d(ContentValues.TAG, \"getfailedwith \", exception)\r\n                }\r\n\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n\r\n\r\n    private fun generateQRCode(text: String): Bitmap {\r\n        val width = 400\r\n        val height = 400\r\n        val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\r\n        val codeWriter = MultiFormatWriter()\r\n        try {\r\n            val bitMatrix = codeWriter.encode(text, BarcodeFormat.QR_CODE, width, height)\r\n            for (x in 0 until width) {\r\n                for (y in 0 until height) {\r\n                    bitmap.setPixel(x, y, if (bitMatrix[x, y]) Color.BLACK else Color.WHITE)\r\n                }\r\n            }\r\n        } catch (e: WriterException) { Log.d(ContentValues.TAG, \"generateQRCode: ${e.message}\") }\r\n        return bitmap\r\n    }\r\n\r\n    private fun saveData(partNo: String, quantity: String, serialNo: String, Status :String, Date :String, ReceivedBy :String){\r\n\r\n        val db = Firebase.firestore\r\n        val barcodeValue = hashMapOf(\r\n            \"PartNo\" to partNo,\r\n            \"quantity\" to quantity.toInt(),\r\n            \"serialNo\" to serialNo,\r\n            \"Status\" to Status,\r\n            \"ReceivedDate\" to Date,\r\n            \"ReceivedBy\" to ReceivedBy,\r\n            \"RackID\" to \"\",\r\n            \"RackInDate\" to \"\",\r\n            \"RackOutDate\" to \"\",\r\n        )\r\n\r\n        db.collection(\"ReceivedProduct\").document(serialNo).set(barcodeValue)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt	(date 1631387964759)
@@ -17,6 +17,7 @@
 import com.google.zxing.BarcodeFormat
 import com.google.zxing.MultiFormatWriter
 import com.google.zxing.WriterException
+import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
 import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedDetailBinding
 import java.text.SimpleDateFormat
 import java.util.*
@@ -25,6 +26,7 @@
 class OnReceivedDetail_Fragment : Fragment() {
 
     private lateinit var binding: FragmentOnReceivedDetailBinding
+    private lateinit var Person: PersonViewModel
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
@@ -41,6 +43,7 @@
         val db = Firebase.firestore
         val place = args.place
         val seNo = args.serialNo
+        Person = PersonViewModel.getInstance()
 
 
       //  binding.tvtPartNo.text = args.barcodeValue
@@ -63,7 +66,7 @@
                         var no = String.format("%07d", number)
                         val sdf = SimpleDateFormat("dd/M/yyyy")
                         val currentDate = sdf.format(Date())
-                        val receivedBy = "Data Kang"
+                        val receivedBy = Person.getUsername().fullName
 
                         partNumberDatabase = result.data?.get("partNo").toString()
                         quantityDataBase = result.data?.get("quantity").toString()
@@ -85,7 +88,7 @@
                         binding.tvtPartNo.text = partNumberDatabase.toString()
                         binding.tvtQuantity.text = quantityDataBase.toString()
                         binding.tvtSerialNo.text = serialNumber.toString()
-                        binding.tvtStatus.text = "received"
+                        binding.tvtStatus.text = "Received"
                         binding.tvtReceivedDate.text = currentDate
                         binding.tvtReceivedBy.text = receivedBy
                         saveData(
@@ -115,7 +118,7 @@
                 .addOnSuccessListener { result ->
 
                     binding.tvtPartNo.text = result.data?.get("PartNo").toString()
-                    binding.tvtQuantity.text = result.data?.get("quantity").toString()
+                    binding.tvtQuantity.text = result.data?.get("Quantity").toString()
                     binding.tvtSerialNo.text = result.id
                     binding.tvtStatus.text = result.data?.get("Status").toString()
                     binding.tvtReceivedDate.text = result.data?.get("ReceivedDate").toString()
@@ -160,8 +163,8 @@
         val db = Firebase.firestore
         val barcodeValue = hashMapOf(
             "PartNo" to partNo,
-            "quantity" to quantity.toInt(),
-            "serialNo" to serialNo,
+            "Quantity" to quantity.toInt(),
+            "SerialNo" to serialNo,
             "Status" to Status,
             "ReceivedDate" to Date,
             "ReceivedBy" to ReceivedBy,
Index: app/src/main/res/layout/fragment_profile_edit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_profile_edit.xml b/app/src/main/res/layout/fragment_profile_edit.xml
new file mode 100644
--- /dev/null	(date 1631353366835)
+++ b/app/src/main/res/layout/fragment_profile_edit.xml	(date 1631353366835)
@@ -0,0 +1,177 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout
+    android:id="@+id/frameLayout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".profileEdit_Fragment">
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/usernameLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:hint="Username"
+        app:layout_constraintTop_toBottomOf="@+id/textView27">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/EditUsername"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+           />
+
+    </com.google.android.material.textfield.TextInputLayout>
+
+
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/nameLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:hint="Name"
+        app:layout_constraintTop_toBottomOf="@+id/usernameLayout"
+        tools:layout_editor_absoluteX="10dp">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/Name"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:fontFamily="@font/poppins_medium" />
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/emailLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:hint="Email"
+        app:layout_constraintTop_toBottomOf="@+id/nameLayout">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/email"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/phoneLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:hint="Phone No"
+        app:layout_constraintTop_toBottomOf="@+id/emailLayout">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/phone"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:inputType="phone"/>
+
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <TextView
+        android:id="@+id/textView27"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="25dp"
+        android:text="Edit Profile"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <Button
+        android:id="@+id/btnProfileEdit"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="24dp"
+        android:text="Edit"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/phoneLayout" />
+
+    <Button
+        android:id="@+id/btnProfileSubmit"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="24dp"
+        android:text="@string/submit"
+        android:visibility="invisible"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.507"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/phoneLayout" />
+
+    <Button
+        android:id="@+id/btnChangePass"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="20dp"
+        android:text="Change Password"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView29" />
+
+    <TextView
+        android:id="@+id/textView29"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="190dp"
+        android:text="Change Password"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/phoneLayout" />
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_marginTop="60dp"
+        app:layout_constraintBottom_toTopOf="@+id/textView29"
+        app:layout_constraintTop_toBottomOf="@+id/phoneLayout">
+
+        <TextView
+            android:id="@+id/tvText"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:text="OR" />
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="16dp"
+            android:layout_toLeftOf="@id/tvText"
+            android:background="#FF0000" />
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_centerVertical="true"
+            android:layout_marginRight="16dp"
+            android:layout_toRightOf="@id/tvText"
+            android:background="#FF0000" />
+
+    </RelativeLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_on_received_detail_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".OnReceivedDetail_Fragment\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"48dp\"\r\n        android:layout_marginTop=\"44dp\"\r\n        android:text=\"Part No :\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvtPartNo\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"80dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView7\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textView7\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView7\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView9\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"44dp\"\r\n        android:text=\"Serial No :\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/textView7\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView7\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvtSerialNo\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"80dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView9\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textView9\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView9\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView11\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"48dp\"\r\n        android:text=\"Quantity :\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/textView9\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView9\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvtQuantity\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"80dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView11\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textView11\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView11\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView13\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"48dp\"\r\n        android:text=\"Status :\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/textView11\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView11\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvtStatus\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"80dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView13\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textView13\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView13\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView15\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"48dp\"\r\n        android:text=\"Received Date :\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/textView13\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView13\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvtReceivedDate\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"80dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView15\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textView15\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView15\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView17\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"48dp\"\r\n        android:text=\"ReceivedBy :\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/textView15\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView15\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvtReceivedBy\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"80dp\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/textView17\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/textView17\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/textView17\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/btnOk\"\r\n        android:layout_width=\"313dp\"\r\n        android:layout_height=\"52dp\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:text=\"OK\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.571\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/imagePreview\"\r\n        app:layout_constraintVertical_bias=\"1.0\" />\r\n    <ImageView\r\n        android:id=\"@+id/imagePreview\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"200dp\"\r\n        android:layout_marginTop=\"36dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.54\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView17\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_received_detail_.xml b/app/src/main/res/layout/fragment_on_received_detail_.xml
--- a/app/src/main/res/layout/fragment_on_received_detail_.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/fragment_on_received_detail_.xml	(date 1631357139707)
@@ -1,10 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
     tools:context=".OnReceivedDetail_Fragment">
 
     <TextView
@@ -34,7 +34,7 @@
         android:id="@+id/textView9"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginTop="44dp"
+        android:layout_marginTop="40dp"
         android:text="Serial No :"
         app:layout_constraintEnd_toEndOf="@+id/textView7"
         app:layout_constraintTop_toBottomOf="@+id/textView7" />
@@ -56,7 +56,7 @@
         android:id="@+id/textView11"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginTop="48dp"
+        android:layout_marginTop="40dp"
         android:text="Quantity :"
         app:layout_constraintEnd_toEndOf="@+id/textView9"
         app:layout_constraintTop_toBottomOf="@+id/textView9" />
@@ -78,7 +78,7 @@
         android:id="@+id/textView13"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginTop="48dp"
+        android:layout_marginTop="40dp"
         android:text="Status :"
         app:layout_constraintEnd_toEndOf="@+id/textView11"
         app:layout_constraintTop_toBottomOf="@+id/textView11" />
@@ -100,7 +100,7 @@
         android:id="@+id/textView15"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginTop="48dp"
+        android:layout_marginTop="40dp"
         android:text="Received Date :"
         app:layout_constraintEnd_toEndOf="@+id/textView13"
         app:layout_constraintTop_toBottomOf="@+id/textView13" />
@@ -122,7 +122,7 @@
         android:id="@+id/textView17"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginTop="48dp"
+        android:layout_marginTop="40dp"
         android:text="ReceivedBy :"
         app:layout_constraintEnd_toEndOf="@+id/textView15"
         app:layout_constraintTop_toBottomOf="@+id/textView15" />
@@ -144,6 +144,7 @@
         android:id="@+id/btnOk"
         android:layout_width="313dp"
         android:layout_height="52dp"
+        android:layout_marginTop="-5dp"
         android:layout_marginBottom="20dp"
         android:text="OK"
         app:layout_constraintBottom_toBottomOf="parent"
@@ -151,12 +152,13 @@
         app:layout_constraintHorizontal_bias="0.571"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/imagePreview"
-        app:layout_constraintVertical_bias="1.0" />
+        app:layout_constraintVertical_bias="0.627" />
+
     <ImageView
         android:id="@+id/imagePreview"
-        android:layout_width="200dp"
-        android:layout_height="200dp"
-        android:layout_marginTop="36dp"
+        android:layout_width="170dp"
+        android:layout_height="170dp"
+        android:layout_marginTop="24dp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.54"
         app:layout_constraintStart_toStartOf="parent"
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.appcompat.widget.SearchView\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport my.edu.tarc.warehouserit3g2.Data.Product\r\nimport my.edu.tarc.warehouserit3g2.Data.ProductAdapter\r\nimport my.edu.tarc.warehouserit3g2.Data.RackProductAdapter\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackProductDisplayBinding\r\n\r\n\r\nclass OnRack_Product_Display_Fragment : Fragment(), ProductAdapter.OnItemClickListener  {\r\n\r\n    private lateinit var binding: FragmentOnRackProductDisplayBinding\r\n    var productList: MutableList<Product> = ArrayList()\r\n    lateinit var adapter: RackProductAdapter\r\n    lateinit var myRecyclerView : RecyclerView\r\n\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n\r\n    lateinit var searchValue : ArrayList<Product>\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_product_display, container, false)\r\n        val db = Firebase.firestore\r\n        val args = OnRack_Product_Display_FragmentArgs.fromBundle(requireArguments())\r\n        val rackId = args.rackId\r\n        productList.clear()\r\n        myRecyclerView = binding.OnRackproductRecycleView\r\n        Log.w(ContentValues.TAG, \"get value 3 = ${rackId}\")\r\n\r\n        db.collection(\"ReceivedProduct\")\r\n            .get()\r\n            .addOnSuccessListener { result ->\r\n                val i = 0\r\n                for (document in result) {\r\n\r\n                    if(document.data.get(\"Status\") != \"scrap\") {\r\n                        if (rackId == (document.data.get(\"RackID\").toString())) {\r\n                            val p = Product(\r\n                                \"${document.data.get(\"PartNo\").toString()}\",\r\n                                \"${document.id}\"\r\n                            )\r\n                            productList.add(p)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                adapter = RackProductAdapter(productList, this)\r\n                myRecyclerView.adapter = adapter\r\n\r\n                binding.searchOnRackProductView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,\r\n                    android.widget.SearchView.OnQueryTextListener {\r\n                    val myRecyclerView : RecyclerView = binding.OnRackproductRecycleView\r\n\r\n\r\n                    override fun onQueryTextSubmit(query: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${query}\")\r\n\r\n                        return true\r\n                    }\r\n\r\n                    override fun onQueryTextChange(newText: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${newText}\")\r\n\r\n                        adapter.filter.filter(newText)\r\n//\r\n\r\n                        return false\r\n                    }\r\n                })\r\n            }\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onItemClick(position: Int) {\r\n        Toast.makeText(context, \"Item $position clicked\", Toast.LENGTH_SHORT).show()\r\n        val clickedItem : Product = productList[position]\r\n        Log.d(ContentValues.TAG, \"DocumentSnapshot qty data: ${clickedItem}\")\r\n        val action : NavDirections = OnRack_Product_Display_FragmentDirections.actionOnRackProductDisplayFragmentToOnRackDisplayDetailFragment(clickedItem.SerialNo)\r\n\r\n        navController.navigate(action)\r\n//        ProductAdapter.notifyItemChanged(position)\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt	(date 1631548109910)
@@ -17,7 +17,9 @@
 import com.google.firebase.ktx.Firebase
 import my.edu.tarc.warehouserit3g2.Data.Product
 import my.edu.tarc.warehouserit3g2.Data.ProductAdapter
+import my.edu.tarc.warehouserit3g2.Data.RackProduct
 import my.edu.tarc.warehouserit3g2.Data.RackProductAdapter
+import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
 import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding
 import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackProductDisplayBinding
 
@@ -25,13 +27,15 @@
 class OnRack_Product_Display_Fragment : Fragment(), ProductAdapter.OnItemClickListener  {
 
     private lateinit var binding: FragmentOnRackProductDisplayBinding
-    var productList: MutableList<Product> = ArrayList()
+    var productList: MutableList<RackProduct> = ArrayList()
     lateinit var adapter: RackProductAdapter
     lateinit var myRecyclerView : RecyclerView
 
     private val navController by lazy { NavHostFragment.findNavController(this)}
 
-    lateinit var searchValue : ArrayList<Product>
+    lateinit var searchValue : ArrayList<RackProduct>
+    private lateinit var Person: PersonViewModel
+
 
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
@@ -44,25 +48,29 @@
         val rackId = args.rackId
         productList.clear()
         myRecyclerView = binding.OnRackproductRecycleView
+        Person = PersonViewModel.getInstance()
+        var fullname = Person.getUsername().fullName
         Log.w(ContentValues.TAG, "get value 3 = ${rackId}")
 
-        db.collection("ReceivedProduct")
+        db.collection("ReceivedProduct").whereEqualTo("ReceivedBy", fullname)
             .get()
             .addOnSuccessListener { result ->
                 val i = 0
                 for (document in result) {
 
-                    if(document.data.get("Status") != "scrap") {
+                    if(document.data.get("Status") != "Scrap" && document.data.get("Status") != "Transit") {
                         if (rackId == (document.data.get("RackID").toString())) {
-                            val p = Product(
+                            val p = RackProduct(
                                 "${document.data.get("PartNo").toString()}",
-                                "${document.id}"
+                                "${document.id}","${document.data.get("RackID").toString()}","${document.data.get("RackInDate").toString()}",
+                                "${document.data.get("Quantity").toString()}"
                             )
                             productList.add(p)
                         }
                     }
                 }
 
+                productList.sortBy { it.partNo }
                 adapter = RackProductAdapter(productList, this)
                 myRecyclerView.adapter = adapter
 
@@ -93,7 +101,7 @@
 
     override fun onItemClick(position: Int) {
         Toast.makeText(context, "Item $position clicked", Toast.LENGTH_SHORT).show()
-        val clickedItem : Product = productList[position]
+        val clickedItem : RackProduct = productList[position]
         Log.d(ContentValues.TAG, "DocumentSnapshot qty data: ${clickedItem}")
         val action : NavDirections = OnRack_Product_Display_FragmentDirections.actionOnRackProductDisplayFragmentToOnRackDisplayDetailFragment(clickedItem.SerialNo)
 
Index: app/src/main/res/layout/fragment_display_transit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_display_transit.xml b/app/src/main/res/layout/fragment_display_transit.xml
new file mode 100644
--- /dev/null	(date 1631466840067)
+++ b/app/src/main/res/layout/fragment_display_transit.xml	(date 1631466840067)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    tools:context=".DisplayTransit_Fragment">
+
+    <SearchView
+        android:id="@+id/TransitSearchView"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:background="#55F5F5F5"
+        android:elevation="1dp"
+        android:queryHint="Search"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/TransitRecycleView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/TransitSearchView"
+        tools:listitem="@layout/display_transit" />
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.integration.android.IntentIntegrator\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackProductBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding\r\n\r\n\r\nclass OnRack_Product_Fragment : Fragment() {\r\n\r\n    var scannedResult: String = \"\"\r\n    private lateinit var binding: FragmentOnRackProductBinding\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n    private  var checkExist = 0\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack__product_, container, false)\r\n\r\n        binding.RackProductScan.setOnClickListener{\r\n            run {\r\n                val intentIntegrator = IntentIntegrator.forSupportFragment(this)\r\n                intentIntegrator.initiateScan()\r\n            }\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n\r\n        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)\r\n\r\n        val db = Firebase.firestore\r\n\r\n        if (result != null) {\r\n            Log.w(ContentValues.TAG, \"partNo 2 \")\r\n            if (result.contents != null) {\r\n                scannedResult = result.contents\r\n                binding.textView6.text = scannedResult\r\n                binding.txtValue1.text = scannedResult\r\n                Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n                val valueBarcode: String = scannedResult\r\n\r\n\r\n\r\n                db.collection(\"ReceivedProduct\").document(scannedResult)\r\n                    .get()\r\n                    .addOnSuccessListener { documents ->\r\n                        if (documents.data == null) {\r\n                            Toast.makeText(\r\n                                context,\r\n                                \"Invalid product QR code. Please try again !!\",\r\n                                Toast.LENGTH_LONG\r\n                            ).show()\r\n                        } else {\r\n\r\n                            if(documents.data?.get(\"Status\").toString() != \"scrap\"){\r\n                                db.collection(\"ReceivedProduct\")\r\n                                    .get()\r\n                                    .addOnSuccessListener { result ->\r\n\r\n                                        for(document in result){\r\n                                            if(document.data.get(\"RackID\").toString() != \"\"){\r\n                                                checkExist = 1\r\n                                                Log.w(ContentValues.TAG, \"exist\")\r\n                                                break\r\n                                            }\r\n                                        }\r\n\r\n                                        if(checkExist == 0){\r\n                                            val action : NavDirections = OnRack_Product_FragmentDirections.actionOnRackProductFragmentToOnRackRackFragment(scannedResult)\r\n                                            navController.navigate(action)\r\n\r\n                                        }else{\r\n                                            Log.w(ContentValues.TAG, \"quantity 3 = ${checkExist}\")\r\n                                            Toast.makeText(\r\n                                                context,\r\n                                                \"The Product already exist in a rack. Please try again!!\",\r\n                                                Toast.LENGTH_LONG\r\n                                            ).show()\r\n                                            checkExist = 0\r\n                                        }\r\n                                    }\r\n\r\n\r\n\r\n                                Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n                            }else{\r\n                                Toast.makeText(\r\n                                    context,\r\n                                    \"The Product already become scrap. Please try again!!\",\r\n                                    Toast.LENGTH_LONG\r\n                                ).show()\r\n                            }\r\n\r\n\r\n\r\n                        }\r\n                    }\r\n            } else {\r\n                binding.textView6.text = \"scan failed\"\r\n                Log.w(ContentValues.TAG, \"scan failed\")\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data)\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt	(date 1631386441363)
@@ -72,17 +72,18 @@
                             ).show()
                         } else {
 
-                            if(documents.data?.get("Status").toString() != "scrap"){
-                                db.collection("ReceivedProduct")
-                                    .get()
-                                    .addOnSuccessListener { result ->
+                            Log.w(ContentValues.TAG, "status  = ${documents.data?.get("Status").toString()}")
+                            if((documents.data?.get("Status").toString() != "Scrap" ) && (documents.data?.get("Status").toString() != "Transit") ){
+//                                db.collection("ReceivedProduct").document(scannedResult)
+//                                    .get()
+//                                    .addOnSuccessListener { result ->
 
-                                        for(document in result){
-                                            if(document.data.get("RackID").toString() != ""){
+//                                        for(document in result){
+                                            if(documents.data?.get("RackID").toString() != ""){
                                                 checkExist = 1
                                                 Log.w(ContentValues.TAG, "exist")
-                                                break
-                                            }
+//                                                break
+//                                            }
                                         }
 
                                         if(checkExist == 0){
@@ -93,12 +94,12 @@
                                             Log.w(ContentValues.TAG, "quantity 3 = ${checkExist}")
                                             Toast.makeText(
                                                 context,
-                                                "The Product already exist in a rack. Please try again!!",
+                                                "The Product already exist in a rack.",
                                                 Toast.LENGTH_LONG
                                             ).show()
                                             checkExist = 0
                                         }
-                                    }
+//                                    }
 
 
 
@@ -106,7 +107,7 @@
                             }else{
                                 Toast.makeText(
                                     context,
-                                    "The Product already become scrap. Please try again!!",
+                                    "The Product already become scrap or already transit. Please try again!!",
                                     Toast.LENGTH_LONG
                                 ).show()
                             }
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/profileEdit_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/profileEdit_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/profileEdit_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631379181133)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/profileEdit_Fragment.kt	(date 1631379181133)
@@ -0,0 +1,261 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.text.Editable
+import android.text.TextWatcher
+import android.util.Log
+import android.util.Patterns
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.View.INVISIBLE
+import android.view.View.VISIBLE
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.fragment.NavHostFragment
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Data.Person
+import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
+import my.edu.tarc.warehouserit3g2.databinding.FragmentChangeRackRackBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentProfileEditBinding
+import java.util.regex.Pattern
+
+
+class profileEdit_Fragment : Fragment() {
+
+
+    private lateinit var binding: FragmentProfileEditBinding
+    private lateinit var Person: PersonViewModel
+    private  var duplicate = 0
+    private var duplicatePhone = 0
+    private val navController by lazy { NavHostFragment.findNavController(this) }
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        val db = Firebase.firestore
+
+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_profile_edit, container, false)
+        binding.EditUsername.setEnabled(false)
+        binding.Name.setEnabled(false)
+        binding.email.setEnabled(false)
+        binding.phone.setEnabled(false)
+
+        Person = PersonViewModel.getInstance()
+        binding.EditUsername.setText(Person.getUsername().username)
+        binding.Name.setText(Person.getUsername().fullName)
+        binding.email.setText(Person.getUsername().email)
+        binding.phone.setText(Person.getUsername().phoneNo)
+
+
+
+
+
+
+
+        binding.btnProfileEdit.setOnClickListener {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+
+            binding.Name.setEnabled(true)
+            binding.email.setEnabled(true)
+            binding.phone.setEnabled(true)
+
+            binding.btnProfileEdit.setVisibility(INVISIBLE)
+            binding.btnProfileSubmit.setVisibility(VISIBLE)
+
+        }
+
+        setupListener()
+
+        binding.btnChangePass.setOnClickListener {
+            navController.navigate(R.id.action_profileEdit_Fragment_to_changePass_Fragment)
+        }
+
+        binding.btnProfileSubmit.setOnClickListener {
+            var fullname = binding.Name.text.toString()
+            var email = binding.email.text.toString()
+            var phone = binding.phone.text.toString()
+
+            if(isValidate()){
+                db.collection("Employees").document(binding.EditUsername.text.toString())
+                    .update(
+                        mapOf(
+                           "fullName" to binding.Name.text.toString(),
+                            "phoneNo" to binding.phone.text.toString(),
+                            "email" to binding.email.text.toString()
+                        )
+                    )
+                binding.EditUsername.setEnabled(false)
+                binding.Name.setEnabled(false)
+                binding.email.setEnabled(false)
+                binding.phone.setEnabled(false)
+
+                binding.btnProfileEdit.setVisibility(VISIBLE)
+                binding.btnProfileSubmit.setVisibility(INVISIBLE)
+                Toast.makeText(
+                    context,
+                    "Edit successful",
+                    Toast.LENGTH_LONG
+                ).show()
+
+
+            }else{
+                Toast.makeText(
+                    context,
+                    "Edit Unsuccessful. Please try again.",
+                    Toast.LENGTH_LONG
+                ).show()
+            }
+
+
+            }
+
+       return binding.root
+    }
+    private fun setupListener() {
+        binding.Name .addTextChangedListener(TextFieldValidation(binding.Name))
+        binding.email.addTextChangedListener(TextFieldValidation(binding.email))
+        binding.phone.addTextChangedListener(TextFieldValidation(binding.phone))
+
+    }
+
+    private fun isValidate(): Boolean =
+        validateFullName() && validateEmail() && validatePhoneNo()
+
+
+    inner class TextFieldValidation(private val view: View) : TextWatcher {
+        override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
+
+        override fun afterTextChanged(s: Editable?) {}
+
+        override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
+            when (view.id) {
+                R.id.Name -> {
+                    validateFullName()
+                }
+                R.id.email -> {
+                    validateEmail()
+                }
+                R.id.phone -> {
+                    validatePhoneNo()
+                }
+            }
+        }
+    }
+
+
+    private fun validateFullName(): Boolean {
+
+
+
+        if (binding.Name.text.toString().trim().isEmpty()) {
+            binding.nameLayout.error = "Required Field!"
+            binding.Name.requestFocus()
+            return false
+        } else {
+            binding.nameLayout.isErrorEnabled = false
+        }
+
+        return true
+    }
+
+    private fun validateEmail(): Boolean {
+        val db = Firebase.firestore
+
+        var trueFalse = true
+        duplicate = 0
+
+
+
+        db.collection("Employees").whereNotEqualTo("username", binding.EditUsername.text.toString())
+            .get()
+            .addOnSuccessListener { result ->
+                for(document in result){
+                    if(binding.email.text?.contains(document.data.get("email").toString()) == true){
+                        duplicate = 1
+                        Log.w(ContentValues.TAG, "chackemail")
+                    }
+                }
+
+                if (binding.email.text.toString().trim().isEmpty()) {
+                    binding.emailLayout.error = "Required Field!"
+                    binding.email.requestFocus()
+                    trueFalse = false
+                } else if (!validEmail(binding.email.text.toString())) {
+                    binding.emailLayout.error = "Invalid Email! e.g abc@xxx.com"
+                    binding.email.requestFocus()
+                    trueFalse = false
+                } else {
+                    binding.emailLayout.isErrorEnabled = false
+                }
+
+                if(duplicate == 1){
+                    binding.emailLayout.error = "Duplicate Field!"
+                    binding.email.requestFocus()
+                    trueFalse = false
+                }
+                Log.w(ContentValues.TAG, "partNo 1 = ${duplicate}")
+                Log.w(ContentValues.TAG, "partNo 1 = ${trueFalse}")
+                Log.w(ContentValues.TAG, "email = ${binding.email.text}")
+            }
+        Log.w(ContentValues.TAG, "partNo 2 = ${trueFalse}")
+        if(trueFalse == false){
+            return false
+        }
+        return true
+    }
+
+    private fun validEmail(email: String): Boolean {
+        val pattern: Pattern = Patterns.EMAIL_ADDRESS
+        return pattern.matcher(email).matches()
+    }
+
+    private fun validatePhoneNo(): Boolean {
+        val REG = "(01)[0-9]-[0-9]{7,8}"
+        var trueFalse = true
+        val db = Firebase.firestore
+        duplicatePhone = 0
+
+        db.collection("Employees").whereNotEqualTo("username", binding.EditUsername.text.toString())
+            .get()
+            .addOnSuccessListener { result ->
+                for (document in result) {
+                    if (binding.phone.text?.contains(document.data.get("phoneNo").toString()) == true) {
+                        duplicatePhone = 1
+                        Log.w(ContentValues.TAG, "chackemail")
+                    }
+                }
+
+                if (binding.phone.text.toString().trim().isEmpty()) {
+                    binding.phoneLayout.error = "Required Field!"
+                    binding.phone.requestFocus()
+                    trueFalse = false
+                } else if (!Pattern.compile(REG).matcher(binding.phone.text.toString()).matches()) {
+                    binding.phoneLayout.error = "Invalid Phone Number! e.g 01X-XXXXXXXX"
+                    binding.phone.requestFocus()
+                    trueFalse = false
+                } else {
+                    binding.phoneLayout.isErrorEnabled = false
+                }
+
+                if(duplicatePhone == 1){
+                    binding.phoneLayout.error = "Duplicate Field!"
+                    binding.phone.requestFocus()
+                    trueFalse = false
+                }
+            }
+        if(trueFalse == false){
+            return false
+        }
+        return true
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/ChangePass_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/ChangePass_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/ChangePass_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631383985411)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/ChangePass_Fragment.kt	(date 1631383985411)
@@ -0,0 +1,121 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.fragment.NavHostFragment
+import at.favre.lib.crypto.bcrypt.BCrypt
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
+import my.edu.tarc.warehouserit3g2.databinding.FragmentChangePassBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentChangeRackRackBinding
+import java.util.regex.Pattern
+
+
+class ChangePass_Fragment : Fragment() {
+
+    private lateinit var binding: FragmentChangePassBinding
+    private lateinit var Person: PersonViewModel
+    private val navController by lazy { NavHostFragment.findNavController(this) }
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_change_pass, container, false)
+        val db = Firebase.firestore
+
+        binding.btnChangeSubmit.setOnClickListener {
+
+
+
+            Person = PersonViewModel.getInstance()
+            var userName = Person.getUsername().username
+            var oldPass = Person.getUsername().password
+            var newPassword = binding.newPassword.text.toString()
+            var retypePassword = binding.retypePassword.text.toString()
+
+                    var oldPassword= binding.oldPassword.text.toString()
+//user input
+//                    val passHash = BCrypt.withDefaults().hashToString(12, "12345".toCharArray())
+
+                    val correct = BCrypt.verifyer().verify(
+                        oldPassword.toCharArray(),
+                        oldPass
+                    )
+                    if(!correct.verified){
+                        Toast.makeText(
+                            context,
+                            "Old Password not Correct",
+                            Toast.LENGTH_LONG
+                        ).show()
+                    }else{
+                        if( checkPass(newPassword) ){
+                            if(checkPass(retypePassword)){
+                                if(newPassword.equals(retypePassword)){
+                                    val passHash = BCrypt.withDefaults().hashToString(12, newPassword.toCharArray())
+
+                                    db.collection("Employees").document(userName)
+                                        .update(
+                                            mapOf(
+                                                "password" to passHash
+                                            )
+                                        )
+                                    Toast.makeText(
+                                        context,
+                                        "Change password completed",
+                                        Toast.LENGTH_LONG
+                                    ).show()
+
+                                    navController.navigate(R.id.action_changePass_Fragment_to_profileEdit_Fragment)
+                                }else{
+                                    Toast.makeText(
+                                        context,
+                                        "Retype Password not Correct. Please try again !!",
+                                        Toast.LENGTH_LONG
+                                    ).show()
+                                }
+                            }else{
+                                Toast.makeText(
+                                    context,
+                                    "Retype Password must be between 6 to 20, contain at least 1 lower and uppercase, a digit and a symbol",
+                                    Toast.LENGTH_LONG
+                                ).show()
+                            }
+
+                        }else{
+                            Toast.makeText(
+                                context,
+                                "New Password must be between 6 to 20, contain at least 1 lower and uppercase, a digit and a symbol",
+                                Toast.LENGTH_LONG
+                            ).show()
+                        }
+
+                    }
+
+
+
+
+        }
+
+        return binding.root
+    }
+
+    private fun checkPass (pass: String):Boolean{
+
+        var REG = "(?=.*[0-9])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[@#$%^&+=])(?=\\S+$).{6,20}$"
+        if(!Pattern.compile(REG).matcher(binding.newPassword.text.toString()).matches()){
+            return false
+        }
+        return true
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_display_barcode_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_display_barcode_.xml b/app/src/main/res/layout/fragment_display_barcode_.xml
new file mode 100644
--- /dev/null	(date 1631437713971)
+++ b/app/src/main/res/layout/fragment_display_barcode_.xml	(date 1631437713971)
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".displayBarcode_Fragment">
+
+    <ImageView
+        android:id="@+id/image_barcode"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="-700dp"
+        app:layout_constraintBottom_toTopOf="@+id/btnBack"
+        app:layout_constraintHorizontal_bias="0.495"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.623" />
+
+    <TextView
+        android:id="@+id/text_barcode_number"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:gravity="center"
+        android:textColor="@color/black"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="1.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/image_barcode" />
+
+    <Button
+        android:id="@+id/btnBack"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="180dp"
+        android:text="Back"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/displayBarcode_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/displayBarcode_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/displayBarcode_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631443409542)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/displayBarcode_Fragment.kt	(date 1631443409542)
@@ -0,0 +1,109 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.graphics.Bitmap
+import android.graphics.Color
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.annotation.ColorInt
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.Navigation
+import com.google.zxing.BarcodeFormat
+import com.google.zxing.MultiFormatWriter
+import com.google.zxing.WriterException
+import com.google.zxing.oned.Code128Writer
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayBarcodeBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackProductDisplayBinding
+
+
+class displayBarcode_Fragment : Fragment() {
+
+    private lateinit var binding: FragmentDisplayBarcodeBinding
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_display_barcode_, container, false)
+        val args = displayBarcode_FragmentArgs.fromBundle(requireArguments())
+        val barcode = args.barcodeNo
+
+        displayBitmap(barcode)
+
+
+        binding.btnBack.setOnClickListener {
+            Navigation.findNavController(it).navigate(R.id.action_displayBarcode_Fragment_to_receiveProductList_Fragment)
+        }
+
+        return binding.root
+    }
+    private fun displayBitmap(value: String) {
+
+        val widthPixels = 450
+        val heightPixels = 100
+
+        val white = "#ffffff"
+        val purple = "#ffbb86fc"
+        val borderInt: Int = Color.parseColor(purple)
+        val backgroundInt: Int = Color.parseColor(white)
+        binding.imageBarcode.setImageBitmap(
+
+            createBarcodeBitmap(
+                barcodeValue = value,
+                barcodeColor = borderInt,
+                backgroundColor = backgroundInt,
+                widthPixels = widthPixels,
+                heightPixels = heightPixels
+            )
+        )
+        binding.textBarcodeNumber.text = value
+    }
+
+    private fun createBarcodeBitmap(
+        barcodeValue: String,
+        @ColorInt barcodeColor: Int,
+        @ColorInt backgroundColor: Int,
+        widthPixels: Int,
+        heightPixels: Int
+    ): Bitmap {
+        val bitMatrix = Code128Writer().encode(
+            barcodeValue,
+            BarcodeFormat.CODE_128,
+            widthPixels,
+            heightPixels
+        )
+
+        val pixels = IntArray(bitMatrix.width * bitMatrix.height)
+        for (y in 0 until bitMatrix.height) {
+            val offset = y * bitMatrix.width
+            for (x in 0 until bitMatrix.width) {
+                pixels[offset + x] =
+                    if (bitMatrix.get(x, y)) barcodeColor else backgroundColor
+            }
+        }
+
+        val bitmap = Bitmap.createBitmap(
+            bitMatrix.width,
+            bitMatrix.height,
+            Bitmap.Config.ARGB_8888
+        )
+        bitmap.setPixels(
+            pixels,
+            0,
+            bitMatrix.width,
+            0,
+            0,
+            bitMatrix.width,
+            bitMatrix.height
+        )
+        return bitmap
+    }
+
+
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/newProductBarcode.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/newProductBarcode.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/newProductBarcode.kt
new file mode 100644
--- /dev/null	(date 1631436495334)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/newProductBarcode.kt	(date 1631436495334)
@@ -0,0 +1,3 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+data class newProductBarcode(var barodeNo:String, var partNo:String, var quantity:String)
Index: app/src/main/res/layout/display_receive_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_receive_product.xml b/app/src/main/res/layout/display_receive_product.xml
new file mode 100644
--- /dev/null	(date 1631550213260)
+++ b/app/src/main/res/layout/display_receive_product.xml	(date 1631550213260)
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="100dp"
+    android:layout_margin="10dp"
+    app:cardBackgroundColor="#B2E2E8">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:clickable="false">
+
+        <TextView
+            android:id="@+id/receivePartNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="10dp"
+            android:text="TextView"
+            android:textSize="21dp"
+            android:textStyle="bold"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <TextView
+            android:id="@+id/barcodeNoValue"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="10dp"
+            android:text="TextView"
+            android:textSize="18dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toEndOf="@+id/barcodeNo"
+            app:layout_constraintTop_toBottomOf="@+id/receivePartNo"
+            app:layout_constraintVertical_bias="1.0" />
+
+        <TextView
+            android:id="@+id/qty"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginEnd="10dp"
+            android:text="Quantity :"
+            android:textSize="18dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toStartOf="@+id/receiveQuantity"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0" />
+
+        <TextView
+            android:id="@+id/barcodeNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="10dp"
+            android:text="Barcode Value :"
+            android:textSize="18dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/receivePartNo"
+            app:layout_constraintVertical_bias="1.0" />
+
+        <TextView
+            android:id="@+id/receiveQuantity"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginEnd="10dp"
+            android:text="TextView"
+            android:textSize="18dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ReceiveProductAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ReceiveProductAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ReceiveProductAdapter.kt
new file mode 100644
--- /dev/null	(date 1631549329739)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ReceiveProductAdapter.kt	(date 1631549329739)
@@ -0,0 +1,111 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+import android.content.ContentValues
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Filter
+import android.widget.Filterable
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import my.edu.tarc.warehouserit3g2.OnRack_Display_Fragment
+import my.edu.tarc.warehouserit3g2.R
+import my.edu.tarc.warehouserit3g2.ReceiveProductList_Fragment
+import my.edu.tarc.warehouserit3g2.receiveProduct_Fragment
+
+class ReceiveProductAdapter(
+    private var receiveProductList: ArrayList<newProductBarcode>, private val listener: ReceiveProductList_Fragment
+) : RecyclerView.Adapter<ReceiveProductAdapter.myViewHolder>(), Filterable {
+    var searchV = ArrayList<newProductBarcode>();
+
+    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{
+
+        val partNo: TextView = itemView.findViewById(R.id.receivePartNo)
+        val quantity: TextView = itemView.findViewById(R.id.receiveQuantity)
+        val barcodeValue: TextView = itemView.findViewById(R.id.barcodeNoValue)
+        init {
+            Log.w(ContentValues.TAG, "search value 30 = ")
+            itemView.setOnClickListener(this)
+        }
+
+        override fun onClick(p0: View?) {
+            Log.w(ContentValues.TAG, "search value 34 = ")
+            val position = adapterPosition
+            if(position != RecyclerView.NO_POSITION) {
+                listener.onItemClick(position)
+            }
+        }
+
+    }
+    init {
+        searchV = receiveProductList as ArrayList<newProductBarcode>
+    }
+
+    interface OnItemClickListener{
+
+        fun onItemClick(position: Int)
+
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {
+        Log.w(ContentValues.TAG, "search value 42 = ")
+        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.display_receive_product, parent, false)
+
+        return myViewHolder(itemView)
+    }
+
+    override fun onBindViewHolder(holder: myViewHolder, position: Int) {
+        Log.w(ContentValues.TAG, "search value 49 = ")
+
+        val current = searchV[position]
+//        holder.itemView.setOnClickListener(
+        holder.partNo.text = current.partNo
+        holder.quantity.text = current.quantity
+        holder.barcodeValue.text= current.barodeNo
+
+    }
+
+    override fun getItemCount(): Int {
+        return searchV.size
+    }
+
+    override fun getFilter(): Filter {
+        return object: Filter(){
+            override fun performFiltering(constraint: CharSequence?): FilterResults {
+                val charSearch = constraint.toString()
+                Log.w(ContentValues.TAG, "search value 75 = ${charSearch} ")
+                if (charSearch.isEmpty()) {
+                    Log.w(ContentValues.TAG, "77 ")
+                    searchV = receiveProductList
+
+
+                } else {
+                    val resultList = ArrayList<newProductBarcode>()
+                    for (row in receiveProductList) {
+                        Log.w(ContentValues.TAG, " 999 ")
+                        if(row.partNo.contains(charSearch) || row.quantity.contains(charSearch) || row.barodeNo.contains(charSearch)){
+                            Log.w(ContentValues.TAG, "search value 83 = ${row} ")
+                            resultList.add(row)
+                        }
+                    }
+                    searchV = resultList
+                    Log.w(ContentValues.TAG, "search value 88 = ${searchV} ")
+                }
+                val filterResults = FilterResults()
+                filterResults.values = searchV
+                Log.w(ContentValues.TAG, "Final2 = ${filterResults} ")
+                return filterResults
+            }
+
+
+            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
+                Log.w(ContentValues.TAG, "final= ${filterResults} ")
+                searchV = filterResults!!.values as ArrayList<newProductBarcode>
+                notifyDataSetChanged()
+            }
+
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_logout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_logout.xml b/app/src/main/res/layout/fragment_logout.xml
new file mode 100644
--- /dev/null	(date 1631302795871)
+++ b/app/src/main/res/layout/fragment_logout.xml	(date 1631302795871)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".Logout">
+
+    <!-- TODO: Update blank fragment layout -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="@string/hello_blank_fragment" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Logout.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Logout.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Logout.kt
new file mode 100644
--- /dev/null	(date 1631303002121)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Logout.kt	(date 1631303002121)
@@ -0,0 +1,21 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.Intent
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+
+class Logout : Fragment() {
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        val intent = Intent(activity, MainActivity::class.java)
+        startActivity(intent)
+        return view
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/ReceiveProductList_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/ReceiveProductList_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/ReceiveProductList_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631437713965)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/ReceiveProductList_Fragment.kt	(date 1631437713965)
@@ -0,0 +1,94 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.widget.SearchView
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Data.Product
+import my.edu.tarc.warehouserit3g2.Data.ReceiveProductAdapter
+import my.edu.tarc.warehouserit3g2.Data.newProductBarcode
+import my.edu.tarc.warehouserit3g2.databinding.FragmentReceiveProductListBinding
+
+
+class ReceiveProductList_Fragment : Fragment(), ReceiveProductAdapter.OnItemClickListener {
+
+
+    private lateinit var binding: FragmentReceiveProductListBinding
+    var receiveProduct = ArrayList<newProductBarcode>()
+    lateinit var adapter: ReceiveProductAdapter
+    lateinit var myRecyclerView : RecyclerView
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_receive_product_list_, container, false)
+        val db = Firebase.firestore
+        receiveProduct.clear()
+        myRecyclerView = binding.ReceiveProductRecycleView
+
+        db.collection("Barcode").orderBy("partNo")
+            .get()
+            .addOnSuccessListener { result ->
+                val i = 0
+                for (document in result) {
+                    Log.d(ContentValues.TAG, "${document.id} => ${document.data}")
+
+                    val p = newProductBarcode(
+                        "${document.id}",
+                        "${document.data.get("partNo").toString()}",
+                        "${document.data.get("quantity").toString()}"
+                    )
+                    receiveProduct.add(p)
+                }
+
+                adapter = ReceiveProductAdapter(receiveProduct,this)
+                myRecyclerView.adapter = adapter
+
+                binding.receiveProductsearchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,
+                    android.widget.SearchView.OnQueryTextListener {
+//                    val myRecyclerView : RecyclerView = binding
+
+
+                    override fun onQueryTextSubmit(query: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${query}")
+
+                        return true
+                    }
+
+                    override fun onQueryTextChange(newText: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${newText}")
+
+                        adapter.filter.filter(newText)
+
+
+                        return false
+                    }
+                })
+            }
+
+       return binding.root
+    }
+
+    override fun onItemClick(position: Int) {
+        Toast.makeText(context, "Item $position clicked", Toast.LENGTH_SHORT).show()
+        val clickedItem  = receiveProduct[position]
+        Log.d(ContentValues.TAG, "DocumentSnapshot qty data: ${clickedItem}")
+        val action : NavDirections = ReceiveProductList_FragmentDirections.actionReceiveProductListFragmentToDisplayBarcodeFragment(clickedItem.barodeNo)
+        navController.navigate(action)
+//        ProductAdapter.notifyItemChanged(position)
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_receive_product_list_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_receive_product_list_.xml b/app/src/main/res/layout/fragment_receive_product_list_.xml
new file mode 100644
--- /dev/null	(date 1631440909722)
+++ b/app/src/main/res/layout/fragment_receive_product_list_.xml	(date 1631440909722)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ReceiveProductList_Fragment">
+
+    <SearchView
+        android:id="@+id/receiveProductsearchView"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:background="#55F5F5F5"
+        android:elevation="1dp"
+        android:queryHint="Search"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/ReceiveProductRecycleView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/receiveProductsearchView"
+        tools:listitem="@layout/display_receive_product" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
new file mode 100644
--- /dev/null	(date 1631289495157)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1631289495157)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetDropDown">
+    <targetSelectedWithDropDown>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="C:\Users\ASUS\.android\avd\Pixel_5_API_30.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </targetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2021-09-10T15:58:11.192759Z" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/layout/received_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"10dp\"\r\n    app:cardBackgroundColor=\"#B39ADF\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_margin=\"5dp\"\r\n        android:clickable=\"false\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_marginStart=\"15dp\"\r\n            android:layout_marginTop=\"7dp\"\r\n            tools:srcCompat=\"@tools:sample/avatars\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/PartNo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_toEndOf=\"@id/imageView\"\r\n            android:text=\"TextView\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/SerialNo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/PartNo\"\r\n            android:layout_toEndOf=\"@id/imageView\"\r\n            android:text=\"TextView\" />\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/received_item.xml b/app/src/main/res/layout/received_item.xml
--- a/app/src/main/res/layout/received_item.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/received_item.xml	(date 1631550322662)
@@ -5,7 +5,11 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_margin="10dp"
-    app:cardBackgroundColor="#B39ADF">
+    android:layout_marginLeft="10dp"
+    android:layout_marginTop="10dp"
+    android:layout_marginRight="10dp"
+    app:cardBackgroundColor="#B2E2E8"
+    app:cardElevation="20dp">
 
     <RelativeLayout
         android:layout_width="match_parent"
@@ -13,29 +17,68 @@
         android:layout_margin="5dp"
         android:clickable="false">
 
-        <ImageView
-            android:id="@+id/imageView"
-            android:layout_width="80dp"
-            android:layout_height="80dp"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentTop="true"
-            android:layout_marginStart="15dp"
-            android:layout_marginTop="7dp"
-            tools:srcCompat="@tools:sample/avatars" />
 
         <TextView
             android:id="@+id/PartNo"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_toEndOf="@id/imageView"
-            android:text="TextView" />
+            android:text="TextView"
+            android:textColor="#000000"
+            android:textSize="16sp"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/disSerialNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/PartNo"
+            android:layout_marginTop="10dp"
+            android:text="Serial No :" />
+
+        <TextView
+            android:id="@+id/disQuantity"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disSerialNo"
+            android:layout_marginTop="10dp"
+            android:text="Quantity :" />
+
+        <TextView
+            android:id="@+id/disReceivedDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/disQuantity"
+            android:layout_marginTop="10dp"
+            android:text="Reaceived Date :" />
 
         <TextView
             android:id="@+id/SerialNo"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_below="@id/PartNo"
-            android:layout_toEndOf="@id/imageView"
+            android:layout_marginStart="72dp"
+            android:layout_marginTop="11dp"
+            android:layout_toEndOf="@id/PartNo"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/quantity"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/SerialNo"
+            android:layout_marginStart="72dp"
+            android:layout_marginTop="10dp"
+            android:layout_toEndOf="@id/PartNo"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/receivedDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/quantity"
+            android:layout_marginStart="72dp"
+            android:layout_marginTop="9dp"
+            android:layout_toEndOf="@id/PartNo"
             android:text="TextView" />
     </RelativeLayout>
 
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/.idea/gradle.xml	(date 1631344921173)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport androidx.fragment.app.Fragment\r\nimport android.widget.*\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.common.collect.Collections2.filter\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport my.edu.tarc.warehouserit3g2.Data.Product\r\nimport my.edu.tarc.warehouserit3g2.Data.ProductAdapter\r\nimport my.edu.tarc.warehouserit3g2.databinding.ActivityOnReceivedBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding\r\nimport java.util.Locale.filter\r\nimport androidx.appcompat.widget.SearchView\r\nimport com.google.common.collect.Sets.filter\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n\r\nclass Display_Received_item_Fragment : Fragment(), ProductAdapter.OnItemClickListener {\r\n\r\n    private lateinit var binding: FragmentDisplayReceivedItemBinding\r\n     var productList: MutableList<Product> = ArrayList()\r\n    lateinit var adapter: ProductAdapter\r\n    lateinit var myRecyclerView : RecyclerView\r\n\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n\r\n    lateinit var searchValue : ArrayList<Product>\r\n\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_display__received_item_, container, false)\r\n        val db = Firebase.firestore\r\n        productList.clear()\r\n\r\n\r\n        myRecyclerView = binding.productRecycleView\r\n\r\n\r\n\r\n        searchValue = arrayListOf<Product>()\r\n\r\n\r\n\r\n\r\n        val partNumber : Array<String?> = arrayOfNulls<String>(100)\r\n        val serialNumber : Array<String?> = arrayOfNulls<String>(100)\r\n        db.collection(\"ReceivedProduct\")\r\n            .get()\r\n            .addOnSuccessListener { result ->\r\n                val i = 0\r\n                for (document in result) {\r\n                    Log.d(ContentValues.TAG, \"${document.id} => ${document.data}\")\r\n\r\n                    if(document.data?.get(\"Status\").toString() != \"scrap\") {\r\n\r\n                        val p = Product(\"${document.data.get(\"PartNo\").toString()}\", \"${document.id}\")\r\n                        productList.add(p)\r\n                    }\r\n                }\r\n\r\n\r\n                adapter = ProductAdapter(productList, this)\r\n                myRecyclerView.adapter = adapter\r\n\r\n                binding.searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,\r\n                    android.widget.SearchView.OnQueryTextListener {\r\n                    val myRecyclerView : RecyclerView = binding.productRecycleView\r\n\r\n\r\n                    override fun onQueryTextSubmit(query: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${query}\")\r\n\r\n                        return true\r\n                    }\r\n\r\n                    override fun onQueryTextChange(newText: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${newText}\")\r\n\r\n                       adapter.filter.filter(newText)\r\n\r\n\r\n                        return false\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n\r\n\r\n      return binding.root\r\n    }\r\n\r\n\r\n    override fun onItemClick(position: Int) {\r\n        Toast.makeText(context, \"Item $position clicked\", Toast.LENGTH_SHORT).show()\r\n        val clickedItem : Product = productList[position]\r\n        Log.d(ContentValues.TAG, \"DocumentSnapshot qty data: ${clickedItem}\")\r\n        val action : NavDirections = Display_Received_item_FragmentDirections.actionDisplayReceivedItemFragmentToOnReceivedDetailFragment(\"0\", \"view\", clickedItem.SerialNo)\r\n\r\n        navController.navigate(action)\r\n//        ProductAdapter.notifyItemChanged(position)\r\n    }\r\n\r\n//    override fun onQueryTextSubmit(query: String?): Boolean {\r\n//return false\r\n//    }\r\n//\r\n//    override fun onQueryTextChange(newText: String?): Boolean {\r\n////        val myRecyclerView : RecyclerView = binding.productRecycleView\r\n////        if(newText!!.isNotEmpty()){\r\n////            searchValue.clear()\r\n////            val search = newText\r\n////            Log.w(ContentValues.TAG, \"search value 3 = ${newText}\")\r\n////            productList.forEach{\r\n////                if (it.partNo.contains(search)){\r\n////                    Log.w(ContentValues.TAG, \"get value 3 = ${it}\")\r\n////                    searchValue.add(it)\r\n////                }\r\n////            }\r\n////            myRecyclerView.adapter!!.notifyDataSetChanged()\r\n////        }else{\r\n////\r\n////            searchValue.clear()\r\n////            searchValue.addAll(productList)\r\n////            myRecyclerView.adapter!!.notifyDataSetChanged()\r\n////        }\r\n//        return true\r\n//    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt	(date 1631545371696)
@@ -21,6 +21,7 @@
 import java.util.Locale.filter
 import androidx.appcompat.widget.SearchView
 import com.google.common.collect.Sets.filter
+import my.edu.tarc.warehouserit3g2.Models.PersonViewModel
 import java.util.*
 import kotlin.collections.ArrayList
 
@@ -31,10 +32,9 @@
      var productList: MutableList<Product> = ArrayList()
     lateinit var adapter: ProductAdapter
     lateinit var myRecyclerView : RecyclerView
-
     private val navController by lazy { NavHostFragment.findNavController(this)}
-
     lateinit var searchValue : ArrayList<Product>
+    private lateinit var Person: PersonViewModel
 
 
 
@@ -59,20 +59,26 @@
 
         val partNumber : Array<String?> = arrayOfNulls<String>(100)
         val serialNumber : Array<String?> = arrayOfNulls<String>(100)
-        db.collection("ReceivedProduct")
+        Person = PersonViewModel.getInstance()
+        var fullname = Person.getUsername().fullName
+        Log.w(ContentValues.TAG, "name = ${fullname}")
+        db.collection("ReceivedProduct").whereEqualTo("ReceivedBy", fullname)
             .get()
             .addOnSuccessListener { result ->
                 val i = 0
                 for (document in result) {
                     Log.d(ContentValues.TAG, "${document.id} => ${document.data}")
 
-                    if(document.data?.get("Status").toString() != "scrap") {
+                    if(document.data?.get("Status").toString() != "Scrap" && document.data?.get("Status").toString() != "Transit") {
 
-                        val p = Product("${document.data.get("PartNo").toString()}", "${document.id}")
+                        val p = Product("${document.data.get("PartNo").toString()}", "${document.id}", "${document.data?.get("ReceivedDate").toString()}", "${document.data?.get("Quantity").toString()}")
                         productList.add(p)
+
+                        Log.w(ContentValues.TAG, "name2 = ${productList}")
                     }
                 }
 
+                productList.sortBy { it.partNo }
 
                 adapter = ProductAdapter(productList, this)
                 myRecyclerView.adapter = adapter
Index: app/src/main/res/layout/fragment_change_pass.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_change_pass.xml b/app/src/main/res/layout/fragment_change_pass.xml
new file mode 100644
--- /dev/null	(date 1631443787710)
+++ b/app/src/main/res/layout/fragment_change_pass.xml	(date 1631443787710)
@@ -0,0 +1,100 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ChangePass_Fragment">
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/oldPasswordLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:layout_marginTop="50dp"
+        android:hint="Old Password"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.842"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView28"
+        app:passwordToggleEnabled="true">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/oldPassword"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/newPasswordLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:layout_marginTop="100dp"
+        android:hint="New Password"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/oldPasswordLayout"
+        app:passwordToggleEnabled="true">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/newPassword"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:passwordToggleEnabled="true"/>
+
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <com.google.android.material.textfield.TextInputLayout
+
+        android:id="@+id/retypePasswordLayout"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:layout_marginTop="100dp"
+        android:hint="Retype Password"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/newPasswordLayout"
+        app:passwordToggleEnabled="true">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/retypePassword"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+          />
+
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <TextView
+        android:id="@+id/textView28"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="50dp"
+        android:text="Change Password"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <Button
+        android:id="@+id/btnChangeSubmit"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="48dp"
+        android:text="@string/submit"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/retypePasswordLayout" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/navigation/navigate.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/navigate\"\r\n    app:startDestination=\"@id/home_Fragment\">\r\n    <fragment\r\n        android:id=\"@+id/home_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.Home_Fragment\"\r\n        android:label=\"fragment_home_\"\r\n        tools:layout=\"@layout/fragment_home_\" />\r\n    <fragment\r\n        android:id=\"@+id/receiveProduct_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.receiveProduct_Fragment\"\r\n        android:label=\"receiveProduct_Fragment\" />\r\n    <fragment\r\n        android:id=\"@+id/onReceivedDetail_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnReceivedDetail_Fragment\"\r\n        android:label=\"fragment_on_received_detail_\"\r\n        tools:layout=\"@layout/fragment_on_received_detail_\" >\r\n        <argument\r\n            android:name=\"barcodeValue\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_onReceivedDetail_Fragment_to_onReceived_Fragment\"\r\n            app:destination=\"@id/onReceived_Fragment\" />\r\n        <action\r\n            android:id=\"@+id/action_onReceivedDetail_Fragment_to_display_Received_item_Fragment\"\r\n            app:destination=\"@id/display_Received_item_Fragment\" />\r\n        <argument\r\n            android:name=\"place\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"serialNo\"\r\n            app:argType=\"string\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onReceived_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnReceived_Fragment\"\r\n        android:label=\"OnReceived_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_onReceived_Fragment_to_onReceivedDetail_Fragment\"\r\n            app:destination=\"@id/onReceivedDetail_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/display_Received_item_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.Display_Received_item_Fragment\"\r\n        android:label=\"Display_Received_item_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_display_Received_item_Fragment_to_onReceivedDetail_Fragment\"\r\n            app:destination=\"@id/onReceivedDetail_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onRack_Product_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnRack_Product_Fragment\"\r\n        android:label=\"OnRack_Product_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_onRack_Product_Fragment_to_onRack_Rack_Fragment\"\r\n            app:destination=\"@id/onRack_Rack_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onRack_Rack_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnRack_Rack_Fragment\"\r\n        android:label=\"fragment_on_rack__rack_\"\r\n        tools:layout=\"@layout/fragment_on_rack__rack_\" >\r\n        <argument\r\n            android:name=\"serialNoOnRack\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_onRack_Rack_Fragment_to_onRack_Detail_Fragment\"\r\n            app:destination=\"@id/onRack_Detail_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/addRack\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.AddRack\"\r\n        android:label=\"fragment_add_rack\"\r\n        tools:layout=\"@layout/fragment_add_rack\" />\r\n    <fragment\r\n        android:id=\"@+id/onRack_Detail_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnRack_Detail_Fragment\"\r\n        android:label=\"fragment_on_rack_detail\"\r\n        tools:layout=\"@layout/fragment_on_rack_detail\" >\r\n        <argument\r\n            android:name=\"serialNo\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"RackId\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_onRack_Detail_Fragment_to_onRack_Product_Fragment\"\r\n            app:destination=\"@id/onRack_Product_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onRack_Display_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnRack_Display_Fragment\"\r\n        android:label=\"OnRack_Display_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_onRack_Display_Fragment_to_onRack_Product_Display_Fragment\"\r\n            app:destination=\"@id/onRack_Product_Display_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onRack_Product_Display_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnRack_Product_Display_Fragment\"\r\n        android:label=\"OnRack_Product_Display_Fragment\" >\r\n        <argument android:name=\"rackId\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_onRack_Product_Display_Fragment_to_onRack_Display_Detail_Fragment\"\r\n            app:destination=\"@id/onRack_Display_Detail_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onRack_Display_Detail_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnRack_Display_Detail_Fragment\"\r\n        android:label=\"fragment_on_rack_display_detail\"\r\n        tools:layout=\"@layout/fragment_on_rack_display_detail\" >\r\n        <argument\r\n            android:name=\"serialNo\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_onRack_Display_Detail_Fragment_to_onRack_Display_Fragment\"\r\n            app:destination=\"@id/onRack_Display_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/changeRack_product_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.changeRack_product_Fragment\"\r\n        android:label=\"changeRack_product_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_changeRack_product_Fragment_to_changeRack_Rack_Fragment\"\r\n            app:destination=\"@id/changeRack_Rack_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/changeRack_Rack_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.changeRack_Rack_Fragment\"\r\n        android:label=\"changeRack_Rack_Fragment\" >\r\n        <argument\r\n            android:name=\"serialNo\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_changeRack_Rack_Fragment_to_changeRack_product_Fragment\"\r\n            app:destination=\"@id/changeRack_product_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/scanScrap_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.ScanScrap_Fragment\"\r\n        android:label=\"ScanScrap_Fragment\" />\r\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/navigate.xml b/app/src/main/res/navigation/navigate.xml
--- a/app/src/main/res/navigation/navigate.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/navigation/navigate.xml	(date 1631474093603)
@@ -143,4 +143,76 @@
         android:id="@+id/scanScrap_Fragment"
         android:name="my.edu.tarc.warehouserit3g2.ScanScrap_Fragment"
         android:label="ScanScrap_Fragment" />
+    <fragment
+        android:id="@+id/profileEdit_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.profileEdit_Fragment"
+        android:label="fragment_profile_edit"
+        tools:layout="@layout/fragment_profile_edit" >
+        <action
+            android:id="@+id/action_profileEdit_Fragment_to_changePass_Fragment"
+            app:destination="@id/changePass_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/logout"
+        android:name="my.edu.tarc.warehouserit3g2.Logout"
+        android:label="fragment_logout"
+        tools:layout="@layout/fragment_logout" />
+    <fragment
+        android:id="@+id/changePass_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.ChangePass_Fragment"
+        android:label="fragment_change_pass"
+        tools:layout="@layout/fragment_change_pass" >
+        <action
+            android:id="@+id/action_changePass_Fragment_to_profileEdit_Fragment"
+            app:destination="@id/profileEdit_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/receiveProductList_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.ReceiveProductList_Fragment"
+        android:label="ReceiveProductList_Fragment" >
+        <action
+            android:id="@+id/action_receiveProductList_Fragment_to_displayBarcode_Fragment"
+            app:destination="@id/displayBarcode_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/displayBarcode_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.displayBarcode_Fragment"
+        android:label="displayBarcode_Fragment" >
+        <argument
+            android:name="barcodeNo"
+            app:argType="string" />
+        <action
+            android:id="@+id/action_displayBarcode_Fragment_to_receiveProductList_Fragment"
+            app:destination="@id/receiveProductList_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/scrapList_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.scrapList_Fragment"
+        android:label="fragment_scrap_list_"
+        tools:layout="@layout/fragment_scrap_list_" >
+        <action
+            android:id="@+id/action_scrapList_Fragment_to_displayScrap_Fragment"
+            app:destination="@id/displayScrap_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/displayScrap_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.displayScrap_Fragment"
+        android:label="fragment_display_scrap"
+        tools:layout="@layout/fragment_display_scrap" >
+        <action
+            android:id="@+id/action_displayScrap_Fragment_to_scrapList_Fragment"
+            app:destination="@id/scrapList_Fragment" />
+        <argument
+            android:name="serialNo"
+            app:argType="string" />
+    </fragment>
+    <fragment
+        android:id="@+id/displayTransit_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.DisplayTransit_Fragment"
+        android:label="fragment_display_transit"
+        tools:layout="@layout/fragment_display_transit" />
+    <fragment
+        android:id="@+id/scanTransit_Product_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.scanTransit_Product_Fragment"
+        android:label="scanTransit_Product_Fragment" />
 </navigation>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/MSI GF75/Desktop/mobile appication development/WarehouseRIT3G2/app/src/main/res/menu/navdrawer_manager.xml\" value=\"0.25416666666666665\" />\r\n        <entry key=\"..\\:/Users/MSI GF75/Desktop/mobile appication development/WarehouseRIT3G2/app/src/main/res/menu/navdrawer_menu.xml\" value=\"0.25416666666666665\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/.idea/misc.xml	(date 1631553225013)
@@ -3,8 +3,41 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
-        <entry key="..\:/Users/MSI GF75/Desktop/mobile appication development/WarehouseRIT3G2/app/src/main/res/menu/navdrawer_manager.xml" value="0.25416666666666665" />
-        <entry key="..\:/Users/MSI GF75/Desktop/mobile appication development/WarehouseRIT3G2/app/src/main/res/menu/navdrawer_menu.xml" value="0.25416666666666665" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/activity_employee.xml" value="0.264" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/activity_main.xml" value="0.1" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/app_bar_main.xml" value="0.20969202898550723" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/app_bar_manager.xml" value="0.1" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/content_main.xml" value="0.264" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/content_manager.xml" value="0.1" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/display_rack.xml" value="0.4" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/display_rack_product.xml" value="0.5094066570188133" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/display_receive_product.xml" value="0.773678963110668" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/display_scrap.xml" value="0.6" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/display_transit.xml" value="0.6" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_add_rack.xml" value="0.1" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_blank.xml" value="0.2391304347826087" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_change_pass.xml" value="0.536" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_display__received_item_.xml" value="0.17831813576494426" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_display_barcode_.xml" value="0.4" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_display_scrap.xml" value="0.20108695652173914" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_display_transit.xml" value="0.264" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_home_.xml" value="0.4" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_on_rack__product_.xml" value="0.17831813576494426" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_on_rack_display.xml" value="0.17831813576494426" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_on_rack_display_detail.xml" value="0.17831813576494426" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_on_rack_product_display.xml" value="0.17831813576494426" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_on_received_.xml" value="0.17831813576494426" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_on_received_detail_.xml" value="0.21875" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_product_movement_.xml" value="0.13541666666666666" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_profile_edit.xml" value="0.48882410106899904" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_receive_product_.xml" value="0.1" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_receive_product_list_.xml" value="0.26902173913043476" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_scan_transit_product.xml" value="0.23052536231884058" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/fragment_scrap_list_.xml" value="0.4" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/nav_header.xml" value="0.4" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/received_item.xml" value="0.4" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/layout/transit_item.xml" value="0.2563405797101449" />
+        <entry key="..\:/Users/ASUS/AndroidStudioProjects/WarehouseRIT3G2/app/src/main/res/menu/navdrawer_menu.xml" value="0.35104166666666664" />
       </map>
     </option>
   </component>
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/Product.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2.Data\r\n\r\ndata class Product(var partNo:String, var SerialNo:String)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/Product.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/Product.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/Product.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/Product.kt	(date 1631544566734)
@@ -1,3 +1,3 @@
 package my.edu.tarc.warehouserit3g2.Data
 
-data class Product(var partNo:String, var SerialNo:String)
+data class Product(var partNo:String, var SerialNo:String, var date :String, var quantity : String)
Index: app/src/main/res/layout/nav_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!--\r\n  ~ Copyright 2018, The Android Open Source Project\r\n  ~\r\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  ~ you may not use this file except in compliance with the License.\r\n  ~ You may obtain a copy of the License at\r\n  ~\r\n  ~     http://www.apache.org/licenses/LICENSE-2.0\r\n  ~\r\n  ~ Unless required by applicable law or agreed to in writing, software\r\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  ~ See the License for the specific language governing permissions and\r\n  ~ limitations under the License.\r\n  -->\r\n\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/navHeader\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"192dp\"\r\n    android:background=\"@color/white\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"16dp\"\r\n    android:theme=\"@style/ThemeOverlay.AppCompat.Dark\">\r\n\r\n    <!--    <ImageView-->\r\n    <!--        android:id=\"@+id/navHeaderImage\"-->\r\n    <!--        android:layout_width=\"0dp\"-->\r\n    <!--        android:layout_height=\"0dp\"-->\r\n    <!--        android:layout_marginStart=\"@dimen/horizontal_margin\"-->\r\n    <!--        android:layout_marginTop=\"8dp\"-->\r\n    <!--        android:layout_marginEnd=\"@dimen/horizontal_margin\"-->\r\n    <!--        android:layout_marginBottom=\"24dp\"-->\r\n    <!--        android:scaleType=\"fitCenter\"-->\r\n    <!--        app:layout_constraintBottom_toBottomOf=\"parent\"-->\r\n    <!--        app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n    <!--        app:layout_constraintStart_toStartOf=\"parent\"-->\r\n    <!--        app:layout_constraintTop_toTopOf=\"parent\"-->\r\n    <!--        app:srcCompat=\"@drawable/nav_header\"-->\r\n    <!--        tools:ignore=\"VectorDrawableCompat\" />-->\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:contentDescription=\"AbaAba\"\r\n        android:paddingTop=\"5dp\"\r\n        app:srcCompat=\"@mipmap/ic_launcher_round\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/usernameDis\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:fontFamily=\"@font/poppins_medium\"\r\n        android:textColor=\"@color/black\"\r\n        android:textSize=\"20sp\" />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/nav_header.xml b/app/src/main/res/layout/nav_header.xml
--- a/app/src/main/res/layout/nav_header.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/nav_header.xml	(date 1631345081180)
@@ -14,15 +14,13 @@
   ~ limitations under the License.
   -->
 
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/navHeader"
     android:layout_width="match_parent"
     android:layout_height="192dp"
     android:background="@color/white"
-    android:orientation="vertical"
-    android:padding="16dp"
     android:theme="@style/ThemeOverlay.AppCompat.Dark">
 
     <!--    <ImageView-->
@@ -40,21 +38,32 @@
     <!--        app:layout_constraintTop_toTopOf="parent"-->
     <!--        app:srcCompat="@drawable/nav_header"-->
     <!--        tools:ignore="VectorDrawableCompat" />-->
+
     <ImageView
         android:id="@+id/imageView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:layout_width="96dp"
+        android:layout_height="92dp"
+        android:layout_marginTop="20dp"
         android:contentDescription="AbaAba"
         android:paddingTop="5dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
         app:srcCompat="@mipmap/ic_launcher_round" />
 
     <TextView
         android:id="@+id/usernameDis"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginTop="20dp"
         android:fontFamily="@font/poppins_medium"
+        android:text="abaaba"
         android:textColor="@color/black"
-        android:textSize="20sp" />
+        android:textSize="20sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="@+id/imageView"
+        app:layout_constraintHorizontal_bias="0.428"
+        app:layout_constraintStart_toStartOf="@+id/imageView"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintVertical_bias="0.306" />
 
-</LinearLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.Navigation\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDetailBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDisplayDetailBinding\r\n\r\n\r\nclass OnRack_Display_Detail_Fragment : Fragment() {\r\n\r\n    private lateinit var binding: FragmentOnRackDisplayDetailBinding\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_display_detail, container, false)\r\n\r\n        val args = OnRack_Display_Detail_FragmentArgs.fromBundle(requireArguments())\r\n        val serialNo = args.serialNo\r\n        val db = Firebase.firestore\r\n\r\n        Log.d(ContentValues.TAG, \"DocumentSnapshot result data: ${serialNo}\")\r\n\r\n        db.collection(\"ReceivedProduct\").document(serialNo)\r\n            .get()\r\n            .addOnSuccessListener { result ->\r\n                if(result.data != null){\r\n                    Log.d(ContentValues.TAG, \"DocumentSnapshot result data: ${result.data?.get(\"PartNo\").toString()}\")\r\n\r\n\r\n                    var InDate = result.data?.get(\"RackInDate\").toString()\r\n                    var OutDate = result.data?.get(\"RackOutDate\").toString()\r\n                    if(InDate == \"\"){\r\n                        InDate = \"-\"\r\n                    }\r\n                    if(OutDate == \"\"){\r\n                        OutDate = \"-\"\r\n                    }\r\n                    binding.tvtPN.text = result.data?.get(\"PartNo\").toString()\r\n                    binding.tvtQ.text  = result.data?.get(\"quantity\").toString()\r\n                    binding.tvtRN.text = result.data?.get(\"RackID\").toString()\r\n                    binding.tvtRND.text= InDate\r\n                    binding.tvtROD.text= OutDate\r\n                    binding.tvtRB.text = result.data?.get(\"ReceivedBy\").toString()\r\n                    binding.tvtRD.text = result.data?.get(\"ReceivedDate\").toString()\r\n                    binding.tvtS.text  = result.data?.get(\"Status\").toString()\r\n                    binding.tvtSN.text = result.data?.get(\"serialNo\").toString()\r\n                }\r\n            }\r\n\r\n        binding.ButtonOk.setOnClickListener {\r\n            Navigation.findNavController(it)\r\n                .navigate(R.id.action_onRack_Display_Detail_Fragment_to_onRack_Display_Fragment)\r\n        }\r\n\r\n\r\n\r\n\r\n        // Inflate the layout for this fragment\r\n      return binding.root\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt	(date 1631359601162)
@@ -49,14 +49,14 @@
                         OutDate = "-"
                     }
                     binding.tvtPN.text = result.data?.get("PartNo").toString()
-                    binding.tvtQ.text  = result.data?.get("quantity").toString()
+                    binding.tvtQ.text  = result.data?.get("Quantity").toString()
                     binding.tvtRN.text = result.data?.get("RackID").toString()
                     binding.tvtRND.text= InDate
                     binding.tvtROD.text= OutDate
                     binding.tvtRB.text = result.data?.get("ReceivedBy").toString()
                     binding.tvtRD.text = result.data?.get("ReceivedDate").toString()
                     binding.tvtS.text  = result.data?.get("Status").toString()
-                    binding.tvtSN.text = result.data?.get("serialNo").toString()
+                    binding.tvtSN.text = result.data?.get("SerialNo").toString()
                 }
             }
 
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProduct.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProduct.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProduct.kt
new file mode 100644
--- /dev/null	(date 1631547510603)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProduct.kt	(date 1631547510603)
@@ -0,0 +1,3 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+data class RackProduct(var partNo:String, var SerialNo:String, var rackID :String,var rackInDate :String, var quantity : String)
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ScrapAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ScrapAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ScrapAdapter.kt
new file mode 100644
--- /dev/null	(date 1631552078163)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ScrapAdapter.kt	(date 1631552078163)
@@ -0,0 +1,116 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+import android.content.ContentValues
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Filter
+import android.widget.Filterable
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import my.edu.tarc.warehouserit3g2.R
+
+class ScrapAdapter (private var productList :MutableList<Product>, private val listener: ScrapAdapter.OnItemClickListener) : RecyclerView.Adapter<ScrapAdapter.myViewHolder>(),
+    Filterable {
+    var searchV = ArrayList<Product>();
+    //    fun setData(searchV: ArrayList<Product>){
+//        this.searchV = searchV
+//        notifyDataSetChanged()
+//    }
+    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{
+
+        val partNo: TextView = itemView.findViewById(R.id.ScrapPartNo)
+        val serialNo: TextView =itemView.findViewById(R.id.ScrapSerialNo)
+        val rackOutDate: TextView = itemView.findViewById(R.id.rackOutDate)
+
+
+        init {
+            Log.w(ContentValues.TAG, "search value 30 = ")
+            itemView.setOnClickListener(this)
+        }
+
+        override fun onClick(p0: View?) {
+            Log.w(ContentValues.TAG, "search value 34 = ")
+            val position = adapterPosition
+            if(position != RecyclerView.NO_POSITION) {
+                listener.onItemClick(position)
+            }
+        }
+    }
+
+    init {
+        searchV = productList as ArrayList<Product>
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {
+        Log.w(ContentValues.TAG, "search value 42 = ")
+        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.display_scrap, parent, false)
+
+        return myViewHolder(itemView)
+    }
+
+    override fun onBindViewHolder(holder: myViewHolder, position: Int) {
+        Log.w(ContentValues.TAG, "search value 49 = ")
+
+        val currentProduct = searchV[position]
+//        holder.itemView.setOnClickListener(
+        holder.partNo.text = currentProduct.partNo
+        holder.serialNo.text = currentProduct.SerialNo
+        holder.rackOutDate.text = currentProduct.date
+    }
+
+    override fun getItemCount(): Int {
+        Log.w(ContentValues.TAG, "search value 57 = ")
+        return searchV.size
+    }
+
+
+    interface OnItemClickListener{
+
+        fun onItemClick(position: Int)
+
+    }
+
+    override fun getFilter(): Filter {
+        Log.w(ContentValues.TAG, "search value 5 = ")
+        return object: Filter(){
+            override fun performFiltering(constraint: CharSequence?): FilterResults {
+                val charSearch = constraint.toString()
+                Log.w(ContentValues.TAG, "search value 75 = ${charSearch} ")
+                if (charSearch.isEmpty()) {
+                    Log.w(ContentValues.TAG, "77 ")
+                    searchV = productList as ArrayList<Product>
+
+
+                } else {
+                    val resultList = ArrayList<Product>()
+                    for (row in productList) {
+                        Log.w(ContentValues.TAG, " 999 ")
+                        if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch) || row.date.contains(charSearch)){
+                            Log.w(ContentValues.TAG, "search value 83 = ${row} ")
+                            resultList.add(row)
+                        }
+                    }
+                    searchV = resultList
+                    Log.w(ContentValues.TAG, "search value 88 = ${searchV} ")
+                }
+                val filterResults = FilterResults()
+                filterResults.values = searchV
+                Log.w(ContentValues.TAG, "Final2 = ${filterResults} ")
+                return filterResults
+            }
+
+
+            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
+                Log.w(ContentValues.TAG, "final= ${filterResults} ")
+                searchV = filterResults!!.values as ArrayList<Product>
+                notifyDataSetChanged()
+            }
+
+        }
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.appcompat.widget.SearchView\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport my.edu.tarc.warehouserit3g2.Data.RackAdapter\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDisplayBinding\r\n\r\n\r\nclass OnRack_Display_Fragment : Fragment(), RackAdapter.OnItemClickListener {\r\n\r\n\r\n    private lateinit var binding: FragmentOnRackDisplayBinding\r\n    var rack = ArrayList<String>()\r\n    lateinit var adapter: RackAdapter\r\n    lateinit var myRecyclerView : RecyclerView\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_display, container, false)\r\n        val db = Firebase.firestore\r\n        rack.clear()\r\n\r\n        myRecyclerView = binding.RackRecycleView\r\n\r\n        db.collection(\"Rack\")\r\n            .get()\r\n            .addOnSuccessListener { result ->\r\n                val i = 0\r\n                for (document in result) {\r\n                    Log.d(ContentValues.TAG, \"${document.id} => ${document.data}\")\r\n                    rack.add(document.id)\r\n                }\r\n\r\n                adapter = RackAdapter(rack,this)\r\n                myRecyclerView.adapter = adapter\r\n\r\n                binding.rackSearchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,\r\n                    android.widget.SearchView.OnQueryTextListener {\r\n                    val myRecyclerView : RecyclerView = binding.RackRecycleView\r\n\r\n\r\n                    override fun onQueryTextSubmit(query: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${query}\")\r\n\r\n                        return true\r\n                    }\r\n\r\n                    override fun onQueryTextChange(newText: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${newText}\")\r\n\r\n                        adapter.filter.filter(newText)\r\n\r\n\r\n                        return false\r\n                    }\r\n                })\r\n            }\r\n        return binding.root\r\n    }\r\n\r\n    override fun onItemClick(position: Int) {\r\n        Toast.makeText(context, \"Item $position clicked\", Toast.LENGTH_SHORT).show()\r\n        val clickedItem  = rack[position]\r\n        Log.d(ContentValues.TAG, \"DocumentSnapshot qty data: ${clickedItem}\")\r\n        val action : NavDirections = OnRack_Display_FragmentDirections.actionOnRackDisplayFragmentToOnRackProductDisplayFragment(clickedItem)\r\n        navController.navigate(action)\r\n//        ProductAdapter.notifyItemChanged(position)\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt	(date 1631384028177)
@@ -38,7 +38,7 @@
 
         myRecyclerView = binding.RackRecycleView
 
-        db.collection("Rack")
+        db.collection("Rack").orderBy("Rack ID")
             .get()
             .addOnSuccessListener { result ->
                 val i = 0
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/scanTransit_Product_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/scanTransit_Product_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/scanTransit_Product_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631552576374)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/scanTransit_Product_Fragment.kt	(date 1631552576374)
@@ -0,0 +1,100 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.content.Intent
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.integration.android.IntentIntegrator
+import my.edu.tarc.warehouserit3g2.databinding.FragmentScanScrapBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentScanTransitProductBinding
+
+
+class scanTransit_Product_Fragment : Fragment() {
+
+    var scannedResult: String = ""
+    private lateinit var binding: FragmentScanTransitProductBinding
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_scan_transit_product, container, false)
+
+        binding.btnTransitProductScan.setOnClickListener {
+            run {
+                val intentIntegrator = IntentIntegrator.forSupportFragment(this)
+                intentIntegrator.initiateScan()
+            }
+        }
+        return binding.root
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){
+
+        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+
+        val db = Firebase.firestore
+
+        if (result != null) {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+            if (result.contents != null) {
+                scannedResult = result.contents
+
+                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                val valueBarcode : String = scannedResult
+
+
+
+                db.collection("ReceivedProduct").document(scannedResult)
+                    .get()
+                    .addOnSuccessListener { result ->
+                        if(result.data == null){
+                            Toast.makeText(context, "Invalid product QR code. Please try again !!", Toast.LENGTH_LONG).show()
+                        }else{
+
+                            var correct = 0
+                            var transferID = ""
+                            db.collection("Transfer")
+                                .get()
+                                .addOnSuccessListener { documents ->
+                                    for(transferProduct in documents){
+                                        if(result.data?.get("PartNo").toString() == transferProduct.data?.get("partNo") && result.data?.get("Quantity").toString() == transferProduct.data?.get("quantity")){
+                                            correct = 1
+                                            transferID = transferProduct.id
+                                            break
+                                        }
+                                    }
+
+                                    if(correct == 1){
+                                        db.collection("Transfer").document(transferID)
+                                            .update(
+                                                mapOf(
+                                                    "status" to "inTransit"
+                                                )
+                                            )
+                                        db.collection("ReceivedProduct").document(transferID)
+                                            .update(
+                                                mapOf(
+                                                    "Status" to "Transit"
+                                                //add serial no
+                                                )
+                                            )
+                                    }
+                                }
+                        }
+                    }
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/menu/navdrawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <item\r\n        android:id=\"@+id/home_Fragment\"\r\n        android:title=\"Home\" />\r\n    <item\r\n        android:title=\"Receive Product\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/receiveProduct_Fragment\"\r\n\r\n                android:title=\"Receive Product\" />\r\n            <item\r\n                android:id=\"@+id/onReceived_Fragment\"\r\n                android:icon=\"@drawable/receiveproduct\"\r\n                android:title=\"On Received\" />\r\n            <item\r\n                android:id=\"@+id/display_Received_item_Fragment\"\r\n                android:icon=\"@drawable/list\"\r\n                android:title=\"On Received List\" />\r\n        </menu>\r\n    </item>\r\n\r\n    <item\r\n        android:title=\"Rack\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/onRack_Product_Fragment\"\r\n\r\n                android:title=\"On Rack\" />\r\n            <item\r\n                android:id=\"@+id/addRack\"\r\n                android:title=\"Add Rack\"/>\r\n            <item\r\n                android:id=\"@+id/onRack_Display_Fragment\"\r\n                android:title=\"Display Rack\"\r\n                />\r\n            <item\r\n                android:id=\"@+id/changeRack_product_Fragment\"\r\n                android:title=\"Change Rack\"\r\n                />\r\n        </menu>\r\n    </item>\r\n\r\n    <item\r\n        android:title=\"Scrap\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/scanScrap_Fragment\"\r\n                android:icon=\"@drawable/scrapdelete\"\r\n                android:title=\"Scrap Meterial\"\r\n                />\r\n        </menu>\r\n    </item>\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/navdrawer_menu.xml b/app/src/main/res/menu/navdrawer_menu.xml
--- a/app/src/main/res/menu/navdrawer_menu.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/menu/navdrawer_menu.xml	(date 1631474090831)
@@ -11,6 +11,10 @@
 
                 android:title="Receive Product" />
             <item
+                android:id="@+id/receiveProductList_Fragment"
+                android:icon="@drawable/list"
+                android:title="Production List" />
+            <item
                 android:id="@+id/onReceived_Fragment"
                 android:icon="@drawable/receiveproduct"
                 android:title="On Received" />
@@ -18,6 +22,8 @@
                 android:id="@+id/display_Received_item_Fragment"
                 android:icon="@drawable/list"
                 android:title="On Received List" />
+
+
         </menu>
     </item>
 
@@ -33,7 +39,7 @@
                 android:title="Add Rack"/>
             <item
                 android:id="@+id/onRack_Display_Fragment"
-                android:title="Display Rack"
+                android:title="Display Rack Item"
                 />
             <item
                 android:id="@+id/changeRack_product_Fragment"
@@ -50,6 +56,47 @@
                 android:icon="@drawable/scrapdelete"
                 android:title="Scrap Meterial"
                 />
+            <item
+                android:id="@+id/scrapList_Fragment"
+                android:icon="@drawable/scrapdelete"
+                android:title="Scrap List"
+                />
+        </menu>
+    </item>
+
+    <item
+        android:title="Transit">
+        <menu>
+            <item
+                android:id="@+id/displayTransit_Fragment"
+
+                android:title="Transit List"
+                />
+            <item
+                android:id="@+id/scanTransit_Product_Fragment"
+
+                android:title="Scan Transit Product"
+                />
+        </menu>
+    </item>
+
+
+    <item
+        android:title="Setting">
+        <menu>
+    <item
+        android:id="@+id/profileEdit_Fragment"
+        android:icon="@drawable/setting"
+        android:title="Edit Profile"
+        />
+    <item
+        android:id="@+id/logout"
+        android:icon="@drawable/logout"
+        android:title="Logout"
+        />
         </menu>
     </item>
+
+
+
 </menu>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_scan_transit_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_scan_transit_product.xml b/app/src/main/res/layout/fragment_scan_transit_product.xml
new file mode 100644
--- /dev/null	(date 1631472463074)
+++ b/app/src/main/res/layout/fragment_scan_transit_product.xml	(date 1631472463074)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".scanTransit_Product_Fragment">
+
+
+
+    <Button
+        android:id="@+id/btnTransitProductScan"
+        android:layout_width="315dp"
+        android:layout_height="72dp"
+        android:layout_marginTop="116dp"
+        android:text="Scan"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imageView2" />
+
+
+
+    <ImageView
+        android:id="@+id/imageView2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="84dp"
+        android:src="@drawable/img"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Home_Fragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"@string/hello_blank_fragment\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home_.xml b/app/src/main/res/layout/fragment_home_.xml
--- a/app/src/main/res/layout/fragment_home_.xml	(revision ec0ff7caf30b213ba27a21241f5671de70574a5f)
+++ b/app/src/main/res/layout/fragment_home_.xml	(date 1631442798206)
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     tools:context=".Home_Fragment">
 
     <!-- TODO: Update blank fragment layout -->
@@ -11,4 +12,5 @@
         android:layout_height="match_parent"
         android:text="@string/hello_blank_fragment" />
 
-</FrameLayout>
\ No newline at end of file
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
