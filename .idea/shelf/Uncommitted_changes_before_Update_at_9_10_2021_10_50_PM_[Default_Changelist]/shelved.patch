Index: app/src/main/res/layout/fragment_on_rack_display_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack_display_detail.xml b/app/src/main/res/layout/fragment_on_rack_display_detail.xml
new file mode 100644
--- /dev/null	(date 1631285125609)
+++ b/app/src/main/res/layout/fragment_on_rack_display_detail.xml	(date 1631285125609)
@@ -0,0 +1,222 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".OnRack_Display_Detail_Fragment">
+
+
+    <TextView
+        android:id="@+id/textView18"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="76dp"
+        android:layout_marginTop="44dp"
+        android:text="Part No :"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/textView19"
+        android:layout_width="61dp"
+        android:layout_height="22dp"
+        android:layout_marginStart="72dp"
+        android:layout_marginTop="40dp"
+        android:text="Rack No : "
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView18" />
+
+    <TextView
+        android:id="@+id/textView20"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="64dp"
+        android:layout_marginTop="40dp"
+        android:text="Seerial No :"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView19" />
+
+    <TextView
+        android:id="@+id/textView21"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="52dp"
+        android:layout_marginTop="40dp"
+        android:text="RackIn Date : "
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView20" />
+
+    <TextView
+        android:id="@+id/textView22"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="48dp"
+        android:layout_marginTop="48dp"
+        android:text="RackOut Date :"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView21" />
+
+    <TextView
+        android:id="@+id/textView23"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="80dp"
+        android:layout_marginTop="40dp"
+        android:text="Quantity : "
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView22" />
+
+    <TextView
+        android:id="@+id/textView24"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="92dp"
+        android:layout_marginTop="40dp"
+        android:text="Status : "
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView23" />
+
+    <TextView
+        android:id="@+id/textView25"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:layout_marginTop="40dp"
+        android:text="Received By :"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView24" />
+
+    <TextView
+        android:id="@+id/textView26"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="40dp"
+        android:layout_marginTop="40dp"
+        android:text="Received Date  : "
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView25" />
+
+    <TextView
+        android:id="@+id/tvtPN"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="52dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView18"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView18"
+        app:layout_constraintTop_toTopOf="@+id/textView18"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtRN"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView19"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView19"
+        app:layout_constraintTop_toTopOf="@+id/textView19"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtSN"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView20"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView20"
+        app:layout_constraintTop_toTopOf="@+id/textView20"
+        app:layout_constraintVertical_bias="1.0" />
+
+    <TextView
+        android:id="@+id/tvtRND"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="64dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView21"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView21"
+        app:layout_constraintTop_toTopOf="@+id/textView21"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtROD"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView22"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView22"
+        app:layout_constraintTop_toTopOf="@+id/textView22"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtQ"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="64dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView23"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView23"
+        app:layout_constraintTop_toTopOf="@+id/textView23"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtS"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView24"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView24"
+        app:layout_constraintTop_toTopOf="@+id/textView24"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtRB"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="56dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView25"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView25"
+        app:layout_constraintTop_toTopOf="@+id/textView25"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <TextView
+        android:id="@+id/tvtRD"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="@+id/textView26"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView26"
+        app:layout_constraintTop_toTopOf="@+id/textView26"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <Button
+        android:id="@+id/ButtonOk"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="64dp"
+        android:text="OK"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView26"
+        app:layout_constraintVertical_bias="0.014" />
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/AddRack.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/AddRack.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/AddRack.kt
new file mode 100644
--- /dev/null	(date 1631285125591)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/AddRack.kt	(date 1631285125591)
@@ -0,0 +1,103 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.app.Activity
+import android.content.ContentValues
+import android.content.Context
+import android.graphics.Bitmap
+import android.graphics.Color
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.view.inputmethod.EditorInfo
+import android.view.inputmethod.InputMethodManager
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.BarcodeFormat
+import com.google.zxing.MultiFormatWriter
+import com.google.zxing.WriterException
+import my.edu.tarc.warehouserit3g2.databinding.FragmentAddRackBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentReceiveProductBinding
+
+
+class AddRack : Fragment() {
+
+    private lateinit var binding: FragmentAddRackBinding
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_add_rack, container, false)
+
+        binding.addR.setOnClickListener {
+            val rackId = binding.ID.text.toString()
+            if(rackId.isEmpty() || rackId.isBlank()){
+
+                Toast.makeText(context, "Please Enter the new Rack Number !!", Toast.LENGTH_SHORT).show()
+
+            }else{
+
+                val db = Firebase.firestore
+                var exist = 0
+
+
+                db.collection("Rack")
+                    .get()
+                    .addOnSuccessListener { result ->
+                        for (document in result){
+                            if(document.id == rackId){
+                                exist = 1
+                                Toast.makeText(context, "${rackId} already exist !!", Toast.LENGTH_SHORT).show()
+                                break
+                            }
+                        }
+
+                        if(exist == 0){
+                            Toast.makeText(context, "Got Value", Toast.LENGTH_SHORT).show()
+                            val bitmap = generateQRCode(rackId)
+                            Log.d(ContentValues.TAG, "getfailedwith ${bitmap} ")
+                            binding.imageQRcode.setImageBitmap(bitmap)
+
+                            binding.ID.onEditorAction(EditorInfo.IME_ACTION_DONE)
+
+                            val barcodeValue = hashMapOf(
+                                "Rack ID" to rackId
+                            )
+                            db.collection("Rack").document(rackId).set(barcodeValue)
+                        }
+
+                    }
+
+
+
+            }
+        }
+
+        return binding.root
+    }
+
+    private fun generateQRCode(text: String): Bitmap {
+        val width = 400
+        val height = 400
+        val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)
+        val codeWriter = MultiFormatWriter()
+        try {
+            val bitMatrix = codeWriter.encode(text, BarcodeFormat.QR_CODE, width, height)
+            for (x in 0 until width) {
+                for (y in 0 until height) {
+                    bitmap.setPixel(x, y, if (bitMatrix[x, y]) Color.BLACK else Color.WHITE)
+                }
+            }
+        } catch (e: WriterException) { Log.d(ContentValues.TAG, "generateQRCode: ${e.message}") }
+        return bitmap
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125599)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Fragment.kt	(date 1631285125599)
@@ -0,0 +1,87 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.widget.SearchView
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Data.RackAdapter
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDisplayBinding
+
+
+class OnRack_Display_Fragment : Fragment(), RackAdapter.OnItemClickListener {
+
+
+    private lateinit var binding: FragmentOnRackDisplayBinding
+    var rack = ArrayList<String>()
+    lateinit var adapter: RackAdapter
+    lateinit var myRecyclerView : RecyclerView
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_display, container, false)
+        val db = Firebase.firestore
+        rack.clear()
+
+        myRecyclerView = binding.RackRecycleView
+
+        db.collection("Rack")
+            .get()
+            .addOnSuccessListener { result ->
+                val i = 0
+                for (document in result) {
+                    Log.d(ContentValues.TAG, "${document.id} => ${document.data}")
+                    rack.add(document.id)
+                }
+
+                adapter = RackAdapter(rack,this)
+                myRecyclerView.adapter = adapter
+
+                binding.rackSearchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,
+                    android.widget.SearchView.OnQueryTextListener {
+                    val myRecyclerView : RecyclerView = binding.RackRecycleView
+
+
+                    override fun onQueryTextSubmit(query: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${query}")
+
+                        return true
+                    }
+
+                    override fun onQueryTextChange(newText: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${newText}")
+
+                        adapter.filter.filter(newText)
+
+
+                        return false
+                    }
+                })
+            }
+        return binding.root
+    }
+
+    override fun onItemClick(position: Int) {
+        Toast.makeText(context, "Item $position clicked", Toast.LENGTH_SHORT).show()
+        val clickedItem  = rack[position]
+        Log.d(ContentValues.TAG, "DocumentSnapshot qty data: ${clickedItem}")
+        val action : NavDirections = OnRack_Display_FragmentDirections.actionOnRackDisplayFragmentToOnRackProductDisplayFragment(clickedItem)
+        navController.navigate(action)
+//        ProductAdapter.notifyItemChanged(position)
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125574)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Display_Detail_Fragment.kt	(date 1631285125574)
@@ -0,0 +1,74 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.Navigation
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDetailBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDisplayDetailBinding
+
+
+class OnRack_Display_Detail_Fragment : Fragment() {
+
+    private lateinit var binding: FragmentOnRackDisplayDetailBinding
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_display_detail, container, false)
+
+        val args = OnRack_Display_Detail_FragmentArgs.fromBundle(requireArguments())
+        val serialNo = args.serialNo
+        val db = Firebase.firestore
+
+        Log.d(ContentValues.TAG, "DocumentSnapshot result data: ${serialNo}")
+
+        db.collection("ReceivedProduct").document(serialNo)
+            .get()
+            .addOnSuccessListener { result ->
+                if(result.data != null){
+                    Log.d(ContentValues.TAG, "DocumentSnapshot result data: ${result.data?.get("PartNo").toString()}")
+
+
+                    var InDate = result.data?.get("RackInDate").toString()
+                    var OutDate = result.data?.get("RackOutDate").toString()
+                    if(InDate == ""){
+                        InDate = "-"
+                    }
+                    if(OutDate == ""){
+                        OutDate = "-"
+                    }
+                    binding.tvtPN.text = result.data?.get("PartNo").toString()
+                    binding.tvtQ.text  = result.data?.get("quantity").toString()
+                    binding.tvtRN.text = result.data?.get("RackID").toString()
+                    binding.tvtRND.text= InDate
+                    binding.tvtROD.text= OutDate
+                    binding.tvtRB.text = result.data?.get("ReceivedBy").toString()
+                    binding.tvtRD.text = result.data?.get("ReceivedDate").toString()
+                    binding.tvtS.text  = result.data?.get("Status").toString()
+                    binding.tvtSN.text = result.data?.get("serialNo").toString()
+                }
+            }
+
+        binding.ButtonOk.setOnClickListener {
+            Navigation.findNavController(it)
+                .navigate(R.id.action_onRack_Display_Detail_Fragment_to_onRack_Display_Fragment)
+        }
+
+
+
+
+        // Inflate the layout for this fragment
+      return binding.root
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/display_rack.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_rack.xml b/app/src/main/res/layout/display_rack.xml
new file mode 100644
--- /dev/null	(date 1631285125582)
+++ b/app/src/main/res/layout/display_rack.xml	(date 1631285125582)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="10dp"
+    app:cardBackgroundColor="#B39ADF">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:clickable="false">
+
+        <ImageView
+            android:id="@+id/imageView"
+            android:layout_width="80dp"
+            android:layout_height="80dp"
+            android:layout_alignParentStart="true"
+            android:layout_alignParentTop="true"
+            android:layout_marginStart="15dp"
+            android:layout_marginTop="7dp"
+            tools:srcCompat="@tools:sample/avatars" />
+
+        <TextView
+            android:id="@+id/RackID"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_toEndOf="@id/imageView"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/SerialNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/RackID"
+            android:layout_toEndOf="@id/imageView"
+            android:text="TextView" />
+    </RelativeLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceived_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.integration.android.IntentIntegrator\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding\r\n\r\n\r\nclass OnReceived_Fragment : Fragment() {\r\n\r\n    var scannedResult: String = \"\"\r\n    private lateinit var binding: FragmentOnReceivedBinding\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_received_, container, false)\r\n        // Inflate the layout for this fragment\r\n\r\n        binding.btnScan.setOnClickListener {\r\n            run {\r\n                val intentIntegrator = IntentIntegrator.forSupportFragment(this)\r\n                intentIntegrator.initiateScan()\r\n            }\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){\r\n\r\n        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)\r\n\r\n        val db = Firebase.firestore\r\n\r\n        if (result != null) {\r\n            Log.w(ContentValues.TAG, \"partNo 2 \")\r\n            if (result.contents != null) {\r\n                scannedResult = result.contents\r\n                binding.textView6.text = scannedResult\r\n                binding.txtValue.text = scannedResult\r\n                Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n                val valueBarcode : String = scannedResult\r\n\r\n\r\n\r\n                db.collection(\"Barcode\").document(scannedResult)\r\n                    .get()\r\n                    .addOnSuccessListener { result ->\r\n                        if(result.data == null){\r\n                            Toast.makeText(context, \"Invalid Bar code. Please try again !!\", Toast.LENGTH_LONG).show()\r\n                        }else{\r\n//                            Toast.makeText(context, \"Valid Bar code\", Toast.LENGTH_LONG).show()\r\n                            val action : NavDirections = OnReceived_FragmentDirections.actionOnReceivedFragmentToOnReceivedDetailFragment(valueBarcode, \"receive\" , \"0\")\r\n\r\n                            navController.navigate(action)\r\n//                            val intent: Intent = Intent(this, OnReceivedDetail::class.java)\r\n//                            intent.putExtra(\"BarcodeNumber\", scannedResult)\r\n//                            Log.w(ContentValues.TAG, \"partNo 2 = ${scannedResult}\")\r\n//                            startActivity(intent)\r\n                        }\r\n                    }\r\n\r\n\r\n            } else {\r\n                binding.textView6.text = \"scan failed\"\r\n                Log.w(ContentValues.TAG, \"scan failed\")\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data)\r\n        }\r\n    }\r\n\r\n\r\n//    override fun onSaveInstanceState(outState: Bundle) {\r\n//\r\n//        outState?.putString(\"scannedResult\", scannedResult)\r\n//        super.onSaveInstanceState(outState)\r\n//    }\r\n//\r\n//    override fun onRestoreInstanceState(savedInstanceState: Bundle) {\r\n//        super.onRestoreInstanceState(savedInstanceState)\r\n//\r\n//        savedInstanceState?.let {\r\n//            scannedResult = it.getString(\"scannedResult\").toString()\r\n//            binding.txtValue.text = scannedResult\r\n//            Log.w(ContentValues.TAG, \"partNo 3 = ${scannedResult}\")\r\n//        }\r\n//    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceived_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceived_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceived_Fragment.kt	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceived_Fragment.kt	(date 1631285125441)
@@ -29,7 +29,7 @@
         savedInstanceState: Bundle?
     ): View? {
         binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_received_, container, false)
-        // Inflate the layout for this fragment
+
 
         binding.btnScan.setOnClickListener {
             run {
@@ -68,10 +68,7 @@
                             val action : NavDirections = OnReceived_FragmentDirections.actionOnReceivedFragmentToOnReceivedDetailFragment(valueBarcode, "receive" , "0")
 
                             navController.navigate(action)
-//                            val intent: Intent = Intent(this, OnReceivedDetail::class.java)
-//                            intent.putExtra("BarcodeNumber", scannedResult)
-//                            Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
-//                            startActivity(intent)
+
                         }
                     }
 
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.content.Intent\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.Navigation\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.BarcodeFormat\r\nimport com.google.zxing.MultiFormatWriter\r\nimport com.google.zxing.WriterException\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedDetailBinding\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\n\r\n\r\nclass OnReceivedDetail_Fragment : Fragment() {\r\n\r\n    private lateinit var binding: FragmentOnReceivedDetailBinding\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_received_detail_, container, false)\r\n\r\n\r\n\r\n        val args = OnReceivedDetail_FragmentArgs.fromBundle(requireArguments())\r\n        var partNumberDatabase = \"\"\r\n        var quantityDataBase = \"\"\r\n        var serialNumber = \"\"\r\n        val myArray3 = arrayOf<String>(\"SE\",\"RE\",\"SA\",\"YO\",\"RA\",\"KE\")\r\n        val db = Firebase.firestore\r\n        val place = args.place\r\n        val seNo = args.serialNo\r\n\r\n\r\n      //  binding.tvtPartNo.text = args.barcodeValue\r\n        Log.w(ContentValues.TAG, \"partNo 4 = ${args.barcodeValue}\")\r\n\r\n        if(place == \"receive\") {\r\n\r\n\r\n            db.collection(\"Barcode\").document(args.barcodeValue)\r\n                .get()\r\n                .addOnSuccessListener { result ->\r\n                    Log.d(ContentValues.TAG, \"Abaaba\")\r\n                    if (result.data != null) {\r\n\r\n                        Log.d(ContentValues.TAG, \"DocumentSnapshot result data: ${result.data}\")\r\n                        val randomInt = (0..5).random()\r\n\r\n                        val rnd = Random()\r\n                        val number: Int = rnd.nextInt(999999999)\r\n                        var no = String.format(\"%07d\", number)\r\n                        val sdf = SimpleDateFormat(\"dd/M/yyyy\")\r\n                        val currentDate = sdf.format(Date())\r\n                        val receivedBy = \"Data Kang\"\r\n\r\n                        partNumberDatabase = result.data?.get(\"partNo\").toString()\r\n                        quantityDataBase = result.data?.get(\"quantity\").toString()\r\n                        serialNumber = myArray3[randomInt] + no\r\n\r\n                        Log.d(\r\n                            ContentValues.TAG,\r\n                            \"DocumentSnapshot part data: ${partNumberDatabase}\"\r\n                        )\r\n                        Log.d(ContentValues.TAG, \"DocumentSnapshot qty data: ${quantityDataBase}\")\r\n\r\n\r\n\r\n\r\n                        Log.d(ContentValues.TAG, \"Serial number: ${serialNumber}\")\r\n                        val bitmap = generateQRCode(serialNumber)\r\n                        binding.imagePreview.setImageBitmap(bitmap)\r\n\r\n                        binding.tvtPartNo.text = partNumberDatabase.toString()\r\n                        binding.tvtQuantity.text = quantityDataBase.toString()\r\n                        binding.tvtSerialNo.text = serialNumber.toString()\r\n                        binding.tvtStatus.text = \"received\"\r\n                        binding.tvtReceivedDate.text = currentDate\r\n                        binding.tvtReceivedBy.text = receivedBy\r\n                        saveData(\r\n                            partNumberDatabase,\r\n                            quantityDataBase,\r\n                            serialNumber,\r\n                            \"received\",\r\n                            currentDate,\r\n                            receivedBy\r\n                        )\r\n\r\n                        binding.btnOk.setOnClickListener {\r\n                            Navigation.findNavController(it)\r\n                                .navigate(R.id.action_onReceivedDetail_Fragment_to_onReceived_Fragment)\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }.addOnFailureListener { exception ->\r\n                    Log.d(ContentValues.TAG, \"getfailedwith \", exception)\r\n                }\r\n        } else if(place == \"view\"){\r\n            db.collection(\"ReceivedProduct\").document(seNo)\r\n                .get()\r\n                .addOnSuccessListener { result ->\r\n\r\n                    binding.tvtPartNo.text = result.data?.get(\"PartNo\").toString()\r\n                    binding.tvtQuantity.text = result.data?.get(\"quantity\").toString()\r\n                    binding.tvtSerialNo.text = result.id\r\n                    binding.tvtStatus.text = result.data?.get(\"Status\").toString()\r\n                    binding.tvtReceivedDate.text = result.data?.get(\"ReceivedDate\").toString()\r\n                    binding.tvtReceivedBy.text = result.data?.get(\"ReceivedBy\").toString()\r\n\r\n                    val bitmap = generateQRCode(result.id)\r\n                    binding.imagePreview.setImageBitmap(bitmap)\r\n\r\n                    binding.btnOk.setOnClickListener {\r\n                        Navigation.findNavController(it)\r\n                            .navigate(R.id.action_onReceivedDetail_Fragment_to_display_Received_item_Fragment)\r\n\r\n                    }\r\n\r\n                }.addOnFailureListener { exception ->\r\n                    Log.d(ContentValues.TAG, \"getfailedwith \", exception)\r\n                }\r\n\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n\r\n\r\n    fun generateQRCode(text: String): Bitmap {\r\n        val width = 400\r\n        val height = 400\r\n        val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)\r\n        val codeWriter = MultiFormatWriter()\r\n        try {\r\n            val bitMatrix = codeWriter.encode(text, BarcodeFormat.QR_CODE, width, height)\r\n            for (x in 0 until width) {\r\n                for (y in 0 until height) {\r\n                    bitmap.setPixel(x, y, if (bitMatrix[x, y]) Color.BLACK else Color.WHITE)\r\n                }\r\n            }\r\n        } catch (e: WriterException) { Log.d(ContentValues.TAG, \"generateQRCode: ${e.message}\") }\r\n        return bitmap\r\n    }\r\n\r\n    private fun saveData(partNo: String, quantity: String, serialNo: String, Status :String, Date :String, ReceivedBy :String){\r\n\r\n        val db = Firebase.firestore\r\n        val barcodeValue = hashMapOf(\r\n            \"PartNo\" to partNo,\r\n            \"quantity\" to quantity.toInt(),\r\n            \"serialNo\" to serialNo,\r\n            \"Status\" to Status,\r\n            \"ReceivedDate\" to Date,\r\n            \"ReceivedBy\" to ReceivedBy\r\n        )\r\n\r\n        db.collection(\"ReceivedProduct\").document(serialNo).set(barcodeValue)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnReceivedDetail_Fragment.kt	(date 1631285125465)
@@ -125,8 +125,7 @@
                     binding.imagePreview.setImageBitmap(bitmap)
 
                     binding.btnOk.setOnClickListener {
-                        Navigation.findNavController(it)
-                            .navigate(R.id.action_onReceivedDetail_Fragment_to_display_Received_item_Fragment)
+                        Navigation.findNavController(it).navigate(R.id.action_onReceivedDetail_Fragment_to_display_Received_item_Fragment)
 
                     }
 
@@ -140,7 +139,7 @@
     }
 
 
-    fun generateQRCode(text: String): Bitmap {
+    private fun generateQRCode(text: String): Bitmap {
         val width = 400
         val height = 400
         val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)
@@ -165,7 +164,10 @@
             "serialNo" to serialNo,
             "Status" to Status,
             "ReceivedDate" to Date,
-            "ReceivedBy" to ReceivedBy
+            "ReceivedBy" to ReceivedBy,
+            "RackID" to "",
+            "RackInDate" to "",
+            "RackOutDate" to "",
         )
 
         db.collection("ReceivedProduct").document(serialNo).set(barcodeValue)
Index: app/src/main/res/layout/fragment_change_rack_rack.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_change_rack_rack.xml b/app/src/main/res/layout/fragment_change_rack_rack.xml
new file mode 100644
--- /dev/null	(date 1631285125266)
+++ b/app/src/main/res/layout/fragment_change_rack_rack.xml	(date 1631285125266)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".changeRack_Rack_Fragment">
+
+
+    <TextView
+        android:id="@+id/txtValueLabel1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="108dp"
+
+        android:text="Scanned Value: "
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.652"
+        app:layout_constraintStart_toEndOf="@+id/txtValue3"
+        app:layout_constraintTop_toBottomOf="@+id/changeRackrackScan"
+        app:layout_constraintVertical_bias="0.963" />
+
+    <TextView
+        android:id="@+id/txtValue3"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:layout_marginBottom="108dp"
+        android:text="{{please scan first}}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView6"
+        app:layout_constraintTop_toBottomOf="@+id/changeRackrackScan"
+        app:layout_constraintVertical_bias="0.963" />
+
+    <Button
+        android:id="@+id/changeRackrackScan"
+        android:layout_width="315dp"
+        android:layout_height="72dp"
+        android:layout_marginTop="116dp"
+        android:text="Scan"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imageView2" />
+
+    <TextView
+        android:id="@+id/textView6"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="24dp"
+        android:layout_marginTop="32dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/changeRackrackScan"
+        app:layout_constraintVertical_bias="0.157" />
+
+    <ImageView
+        android:id="@+id/imageView2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="84dp"
+        android:src="@drawable/img"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_add_rack.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_add_rack.xml b/app/src/main/res/layout/fragment_add_rack.xml
new file mode 100644
--- /dev/null	(date 1631285125388)
+++ b/app/src/main/res/layout/fragment_add_rack.xml	(date 1631285125388)
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".AddRack">
+
+    <TextView
+        android:id="@+id/textView2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="44dp"
+        android:layout_marginTop="68dp"
+        android:text="Rack ID :"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <Button
+        android:id="@+id/addR"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="84dp"
+        android:text="Add"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/ID" />
+
+    <EditText
+        android:id="@+id/ID"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="32dp"
+        android:ems="10"
+        android:inputType="textPersonName"
+        app:layout_constraintBottom_toBottomOf="@+id/textView2"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.0"
+        app:layout_constraintStart_toEndOf="@+id/textView2"
+        app:layout_constraintTop_toTopOf="@+id/textView2"
+        app:layout_constraintVertical_bias="0.73" />
+
+    <ImageView
+        android:id="@+id/image_QRcode"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintHorizontal_bias="0.495"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/addR" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_on_rack__rack_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack__rack_.xml b/app/src/main/res/layout/fragment_on_rack__rack_.xml
new file mode 100644
--- /dev/null	(date 1631285125423)
+++ b/app/src/main/res/layout/fragment_on_rack__rack_.xml	(date 1631285125423)
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+
+        <TextView
+            android:id="@+id/txtValueLabel1"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="108dp"
+
+            android:text="Scanned Value: "
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.652"
+            app:layout_constraintStart_toEndOf="@+id/txtValue1"
+            app:layout_constraintTop_toBottomOf="@+id/RackScan"
+            app:layout_constraintVertical_bias="0.963" />
+
+        <TextView
+            android:id="@+id/txtValue1"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="60dp"
+            android:layout_marginBottom="108dp"
+            android:text="{{please scan first}}"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toEndOf="@+id/textView6"
+            app:layout_constraintTop_toBottomOf="@+id/RackScan"
+            app:layout_constraintVertical_bias="0.963" />
+
+        <Button
+            android:id="@+id/RackScan"
+            android:layout_width="315dp"
+            android:layout_height="72dp"
+            android:layout_marginTop="116dp"
+            android:text="Scan"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/imageView2" />
+
+        <TextView
+            android:id="@+id/textView6"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="24dp"
+            android:layout_marginTop="32dp"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/RackScan"
+            app:layout_constraintVertical_bias="0.157" />
+
+        <ImageView
+            android:id="@+id/imageView2"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="84dp"
+            android:src="@drawable/img"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Rack_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Rack_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Rack_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125364)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Rack_Fragment.kt	(date 1631285125364)
@@ -0,0 +1,91 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.content.Intent
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.integration.android.IntentIntegrator
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackRackBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding
+
+
+class OnRack_Rack_Fragment : Fragment() {
+
+    var scannedResult: String = ""
+    private lateinit var binding: FragmentOnRackRackBinding
+    private val navController by lazy { NavHostFragment.findNavController(this) }
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        binding =
+            DataBindingUtil.inflate(inflater, R.layout.fragment_on_rack__rack_, container, false)
+
+        binding.RackScan.setOnClickListener {
+            run {
+                val intentIntegrator = IntentIntegrator.forSupportFragment(this)
+                intentIntegrator.initiateScan()
+            }
+        }
+        return binding.root
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){
+
+        val args = OnRack_Rack_FragmentArgs.fromBundle(requireArguments())
+        val serialNo = args.serialNoOnRack
+
+        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+
+        val db = Firebase.firestore
+
+        if (result != null) {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+            if (result.contents != null) {
+                scannedResult = result.contents
+                binding.textView6.text = serialNo
+                binding.txtValue1.text = scannedResult
+                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                val valueQRcode : String = scannedResult
+//                Toast.makeText(context, "Geted ${serialNo}", Toast.LENGTH_LONG).show()
+//                Toast.makeText(context, "Geted 2 ${valueBarcode}", Toast.LENGTH_LONG).show()
+
+
+
+                db.collection("Rack").document(scannedResult)
+                    .get()
+                    .addOnSuccessListener { result ->
+                        if(result.data == null){
+                            Toast.makeText(context, "Invalid Rack QR code. Please try again !!", Toast.LENGTH_LONG).show()
+                        }else{
+//                            Toast.makeText(context, "Valid Bar code", Toast.LENGTH_LONG).show()
+                            val action : NavDirections = OnRack_Rack_FragmentDirections.actionOnRackRackFragmentToOnRackDetailFragment(serialNo , valueQRcode)
+
+                            navController.navigate(action)
+
+                        }
+                    }
+
+
+            } else {
+                binding.textView6.text = "scan failed"
+                Log.w(ContentValues.TAG, "scan failed")
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+}
+
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.*\r\nimport androidx.fragment.app.Fragment\r\nimport android.widget.*\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.NavDirections\r\nimport androidx.navigation.fragment.NavHostFragment\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.common.collect.Collections2.filter\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport my.edu.tarc.warehouserit3g2.Data.Product\r\nimport my.edu.tarc.warehouserit3g2.Data.ProductAdapter\r\nimport my.edu.tarc.warehouserit3g2.databinding.ActivityOnReceivedBinding\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding\r\nimport java.util.Locale.filter\r\nimport androidx.appcompat.widget.SearchView\r\nimport com.google.common.collect.Sets.filter\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n\r\nclass Display_Received_item_Fragment : Fragment(), ProductAdapter.OnItemClickListener {\r\n\r\n    private lateinit var binding: FragmentDisplayReceivedItemBinding\r\n     var productList: MutableList<Product> = ArrayList()\r\n    lateinit var adapter: ProductAdapter\r\n    lateinit var myRecyclerView : RecyclerView\r\n\r\n    private val navController by lazy { NavHostFragment.findNavController(this)}\r\n\r\n    lateinit var searchValue : ArrayList<Product>\r\n\r\n\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment, SearchView.OnQueryTextListener\r\n        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_display__received_item_, container, false)\r\n        val db = Firebase.firestore\r\n        productList.clear()\r\n\r\n\r\n        myRecyclerView = binding.productRecycleView\r\n\r\n\r\n//        val productList = listOf<Product>(\r\n//            Product(\"P001\", \"1234567\"),\r\n//            Product(\"P002\", \"1234567\"),\r\n//            Product(\"P003\", \"1234567\"),\r\n//            Product(\"P004\", \"1234567\"),\r\n//            Product(\"P005\", \"1234567\"),\r\n//            Product(\"P006\", \"1234567\"),\r\n//            Product(\"P007\", \"1234567\"),\r\n//            Product(\"P008\", \"1234567\"),\r\n//            Product(\"P009\", \"1234567\"),\r\n//            Product(\"P0010\", \"1234567\"),\r\n//\r\n//        )\r\n        searchValue = arrayListOf<Product>()\r\n\r\n\r\n\r\n\r\n        val partNumber : Array<String?> = arrayOfNulls<String>(100)\r\n        val serialNumber : Array<String?> = arrayOfNulls<String>(100)\r\n        db.collection(\"ReceivedProduct\")\r\n            .get()\r\n            .addOnSuccessListener { result ->\r\n                val i = 0\r\n                for (document in result) {\r\n                    Log.d(ContentValues.TAG, \"${document.id} => ${document.data}\")\r\n                    partNumber[i] = \"${document.id}\"\r\n                    serialNumber[i] = \"${document.data.get(\"PartNo\").toString()}\"\r\n                    val p = Product( \"${document.data.get(\"PartNo\").toString()}\",\"${document.id}\")\r\n                    productList.add(p)\r\n                    searchValue.add(p)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n//                val myRecyclerView : RecyclerView = binding.productRecycleView\r\n                adapter = ProductAdapter(productList, this)\r\n                myRecyclerView.adapter = adapter\r\n\r\n                binding.searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,\r\n                    android.widget.SearchView.OnQueryTextListener {\r\n                    val myRecyclerView : RecyclerView = binding.productRecycleView\r\n\r\n\r\n                    override fun onQueryTextSubmit(query: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${query}\")\r\n\r\n                        return true\r\n                    }\r\n\r\n                    override fun onQueryTextChange(newText: String?): Boolean {\r\n                        Log.w(ContentValues.TAG, \"get value 3 = ${newText}\")\r\n\r\n                       adapter.filter.filter(newText)\r\n\r\n\r\n                        return false\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n\r\n\r\n      return binding.root\r\n    }\r\n\r\n\r\n    override fun onItemClick(position: Int) {\r\n        Toast.makeText(context, \"Item $position clicked\", Toast.LENGTH_SHORT).show()\r\n        val clickedItem : Product = productList[position]\r\n        Log.d(ContentValues.TAG, \"DocumentSnapshot qty data: ${clickedItem}\")\r\n        val action : NavDirections = Display_Received_item_FragmentDirections.actionDisplayReceivedItemFragmentToOnReceivedDetailFragment(\"0\", \"view\", clickedItem.SerialNo)\r\n\r\n        navController.navigate(action)\r\n//        ProductAdapter.notifyItemChanged(position)\r\n    }\r\n\r\n//    override fun onQueryTextSubmit(query: String?): Boolean {\r\n//return false\r\n//    }\r\n//\r\n//    override fun onQueryTextChange(newText: String?): Boolean {\r\n////        val myRecyclerView : RecyclerView = binding.productRecycleView\r\n////        if(newText!!.isNotEmpty()){\r\n////            searchValue.clear()\r\n////            val search = newText\r\n////            Log.w(ContentValues.TAG, \"search value 3 = ${newText}\")\r\n////            productList.forEach{\r\n////                if (it.partNo.contains(search)){\r\n////                    Log.w(ContentValues.TAG, \"get value 3 = ${it}\")\r\n////                    searchValue.add(it)\r\n////                }\r\n////            }\r\n////            myRecyclerView.adapter!!.notifyDataSetChanged()\r\n////        }else{\r\n////\r\n////            searchValue.clear()\r\n////            searchValue.addAll(productList)\r\n////            myRecyclerView.adapter!!.notifyDataSetChanged()\r\n////        }\r\n//        return true\r\n//    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Display_Received_item_Fragment.kt	(date 1631285125517)
@@ -42,7 +42,7 @@
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
-        // Inflate the layout for this fragment, SearchView.OnQueryTextListener
+
         binding = DataBindingUtil.inflate(inflater,R.layout.fragment_display__received_item_, container, false)
         val db = Firebase.firestore
         productList.clear()
@@ -51,19 +51,7 @@
         myRecyclerView = binding.productRecycleView
 
 
-//        val productList = listOf<Product>(
-//            Product("P001", "1234567"),
-//            Product("P002", "1234567"),
-//            Product("P003", "1234567"),
-//            Product("P004", "1234567"),
-//            Product("P005", "1234567"),
-//            Product("P006", "1234567"),
-//            Product("P007", "1234567"),
-//            Product("P008", "1234567"),
-//            Product("P009", "1234567"),
-//            Product("P0010", "1234567"),
-//
-//        )
+
         searchValue = arrayListOf<Product>()
 
 
@@ -77,18 +65,15 @@
                 val i = 0
                 for (document in result) {
                     Log.d(ContentValues.TAG, "${document.id} => ${document.data}")
-                    partNumber[i] = "${document.id}"
-                    serialNumber[i] = "${document.data.get("PartNo").toString()}"
-                    val p = Product( "${document.data.get("PartNo").toString()}","${document.id}")
-                    productList.add(p)
-                    searchValue.add(p)
+
+                    if(document.data?.get("Status").toString() != "scrap") {
+
+                        val p = Product("${document.data.get("PartNo").toString()}", "${document.id}")
+                        productList.add(p)
+                    }
                 }
-
-
-
 
 
-//                val myRecyclerView : RecyclerView = binding.productRecycleView
                 adapter = ProductAdapter(productList, this)
                 myRecyclerView.adapter = adapter
 
Index: app/src/main/res/layout/fragment_on_rack_display.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack_display.xml b/app/src/main/res/layout/fragment_on_rack_display.xml
new file mode 100644
--- /dev/null	(date 1631285125555)
+++ b/app/src/main/res/layout/fragment_on_rack_display.xml	(date 1631285125555)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    tools:context=".OnRack_Display_Fragment">
+
+    <SearchView
+        android:id="@+id/rackSearchView"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:background="#55F5F5F5"
+        android:elevation="1dp"
+        android:queryHint="Search"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/RackRecycleView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/rackSearchView"
+        tools:listitem="@layout/display_rack" />
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/display_rack_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/display_rack_product.xml b/app/src/main/res/layout/display_rack_product.xml
new file mode 100644
--- /dev/null	(date 1631285125311)
+++ b/app/src/main/res/layout/display_rack_product.xml	(date 1631285125311)
@@ -0,0 +1,41 @@
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="10dp"
+    app:cardBackgroundColor="#B39ADF">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:clickable="false">
+
+        <ImageView
+            android:id="@+id/imageView"
+            android:layout_width="80dp"
+            android:layout_height="80dp"
+            android:layout_alignParentStart="true"
+            android:layout_alignParentTop="true"
+            android:layout_marginStart="15dp"
+            android:layout_marginTop="7dp"
+            tools:srcCompat="@tools:sample/avatars" />
+
+        <TextView
+            android:id="@+id/OnRackPartNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_toEndOf="@id/imageView"
+            android:text="TextView" />
+
+        <TextView
+            android:id="@+id/OnRackSerialNo"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_below="@id/OnRackPartNo"
+            android:layout_toEndOf="@id/imageView"
+            android:text="TextView" />
+    </RelativeLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_on_rack_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack_detail.xml b/app/src/main/res/layout/fragment_on_rack_detail.xml
new file mode 100644
--- /dev/null	(date 1631285125564)
+++ b/app/src/main/res/layout/fragment_on_rack_detail.xml	(date 1631285125564)
@@ -0,0 +1,151 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+
+        <TextView
+            android:id="@+id/textView3"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="76dp"
+            android:layout_marginTop="60dp"
+            android:text="Rack ID :"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <TextView
+            android:id="@+id/textView8"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40dp"
+            android:text="Part No :"
+            app:layout_constraintEnd_toEndOf="@+id/textView3"
+            app:layout_constraintTop_toBottomOf="@+id/textView3" />
+
+        <TextView
+            android:id="@+id/textView10"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40dp"
+            android:text="Serial No :"
+            app:layout_constraintEnd_toEndOf="@+id/textView8"
+            app:layout_constraintTop_toBottomOf="@+id/textView8" />
+
+        <TextView
+            android:id="@+id/textView12"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40dp"
+            android:text="Rack In Date :"
+            app:layout_constraintEnd_toEndOf="@+id/textView10"
+            app:layout_constraintTop_toBottomOf="@+id/textView10" />
+
+        <TextView
+            android:id="@+id/textView14"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40dp"
+            android:text="Rack Out Date :"
+            app:layout_constraintEnd_toEndOf="@+id/textView12"
+            app:layout_constraintTop_toBottomOf="@+id/textView12" />
+
+        <TextView
+            android:id="@+id/textView16"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="40dp"
+            android:text="Status :"
+            app:layout_constraintEnd_toEndOf="@+id/textView14"
+            app:layout_constraintTop_toBottomOf="@+id/textView14" />
+
+        <TextView
+            android:id="@+id/tvtRackId"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="116dp"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="@+id/textView3"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toEndOf="@+id/textView3"
+            app:layout_constraintTop_toTopOf="@+id/textView3"
+            app:layout_constraintVertical_bias="0.0" />
+
+        <TextView
+            android:id="@+id/tvtPartN"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="76dp"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="@+id/textView8"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.248"
+            app:layout_constraintStart_toEndOf="@+id/textView8"
+            app:layout_constraintTop_toTopOf="@+id/textView8"
+            app:layout_constraintVertical_bias="0.0" />
+
+        <TextView
+            android:id="@+id/tvtSerialN"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="68dp"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="@+id/textView10"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.284"
+            app:layout_constraintStart_toEndOf="@+id/textView10"
+            app:layout_constraintTop_toTopOf="@+id/textView10"
+            app:layout_constraintVertical_bias="1.0" />
+
+        <TextView
+            android:id="@+id/tvtRackInDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="@+id/textView12"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.489"
+            app:layout_constraintStart_toEndOf="@+id/textView12"
+            app:layout_constraintTop_toTopOf="@+id/textView12"
+            app:layout_constraintVertical_bias="0.0" />
+
+        <TextView
+            android:id="@+id/tvtRackOutDate"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="@+id/textView14"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.489"
+            app:layout_constraintStart_toEndOf="@+id/textView14"
+            app:layout_constraintTop_toTopOf="@+id/textView14"
+            app:layout_constraintVertical_bias="0.0" />
+
+        <TextView
+            android:id="@+id/RackStatus"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="@+id/textView16"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.489"
+            app:layout_constraintStart_toEndOf="@+id/textView16"
+            app:layout_constraintTop_toTopOf="@+id/textView16"
+            app:layout_constraintVertical_bias="0.0" />
+
+        <Button
+            android:id="@+id/BtnOk"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="124dp"
+            android:text="OK"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/textView16" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125537)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Display_Fragment.kt	(date 1631285125537)
@@ -0,0 +1,105 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.widget.SearchView
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.Data.Product
+import my.edu.tarc.warehouserit3g2.Data.ProductAdapter
+import my.edu.tarc.warehouserit3g2.Data.RackProductAdapter
+import my.edu.tarc.warehouserit3g2.databinding.FragmentDisplayReceivedItemBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackProductDisplayBinding
+
+
+class OnRack_Product_Display_Fragment : Fragment(), ProductAdapter.OnItemClickListener  {
+
+    private lateinit var binding: FragmentOnRackProductDisplayBinding
+    var productList: MutableList<Product> = ArrayList()
+    lateinit var adapter: RackProductAdapter
+    lateinit var myRecyclerView : RecyclerView
+
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+
+    lateinit var searchValue : ArrayList<Product>
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_product_display, container, false)
+        val db = Firebase.firestore
+        val args = OnRack_Product_Display_FragmentArgs.fromBundle(requireArguments())
+        val rackId = args.rackId
+        productList.clear()
+        myRecyclerView = binding.OnRackproductRecycleView
+        Log.w(ContentValues.TAG, "get value 3 = ${rackId}")
+
+        db.collection("ReceivedProduct")
+            .get()
+            .addOnSuccessListener { result ->
+                val i = 0
+                for (document in result) {
+
+                    if(document.data.get("Status") != "scrap") {
+                        if (rackId == (document.data.get("RackID").toString())) {
+                            val p = Product(
+                                "${document.data.get("PartNo").toString()}",
+                                "${document.id}"
+                            )
+                            productList.add(p)
+                        }
+                    }
+                }
+
+                adapter = RackProductAdapter(productList, this)
+                myRecyclerView.adapter = adapter
+
+                binding.searchOnRackProductView.setOnQueryTextListener(object : SearchView.OnQueryTextListener,
+                    android.widget.SearchView.OnQueryTextListener {
+                    val myRecyclerView : RecyclerView = binding.OnRackproductRecycleView
+
+
+                    override fun onQueryTextSubmit(query: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${query}")
+
+                        return true
+                    }
+
+                    override fun onQueryTextChange(newText: String?): Boolean {
+                        Log.w(ContentValues.TAG, "get value 3 = ${newText}")
+
+                        adapter.filter.filter(newText)
+//
+
+                        return false
+                    }
+                })
+            }
+
+        return binding.root
+    }
+
+    override fun onItemClick(position: Int) {
+        Toast.makeText(context, "Item $position clicked", Toast.LENGTH_SHORT).show()
+        val clickedItem : Product = productList[position]
+        Log.d(ContentValues.TAG, "DocumentSnapshot qty data: ${clickedItem}")
+        val action : NavDirections = OnRack_Product_Display_FragmentDirections.actionOnRackProductDisplayFragmentToOnRackDisplayDetailFragment(clickedItem.SerialNo)
+
+        navController.navigate(action)
+//        ProductAdapter.notifyItemChanged(position)
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_change_rack_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_change_rack_product.xml b/app/src/main/res/layout/fragment_change_rack_product.xml
new file mode 100644
--- /dev/null	(date 1631285125413)
+++ b/app/src/main/res/layout/fragment_change_rack_product.xml	(date 1631285125413)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".changeRack_product_Fragment">
+
+    <TextView
+        android:id="@+id/txtValueLabel2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="108dp"
+
+        android:text="Scanned Value: "
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.652"
+        app:layout_constraintStart_toEndOf="@+id/txtValue2"
+        app:layout_constraintTop_toBottomOf="@+id/ChangeRackProductScan"
+        app:layout_constraintVertical_bias="0.963" />
+
+    <TextView
+        android:id="@+id/txtValue2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:layout_marginBottom="108dp"
+        android:text="{{please scan first}}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView6"
+        app:layout_constraintTop_toBottomOf="@+id/ChangeRackProductScan"
+        app:layout_constraintVertical_bias="0.963" />
+
+    <Button
+        android:id="@+id/ChangeRackProductScan"
+        android:layout_width="315dp"
+        android:layout_height="72dp"
+        android:layout_marginTop="116dp"
+        android:text="Scan"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imageView3" />
+
+    <TextView
+        android:id="@+id/textView6"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="24dp"
+        android:layout_marginTop="32dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/ChangeRackProductScan"
+        app:layout_constraintVertical_bias="0.157" />
+
+    <ImageView
+        android:id="@+id/imageView3"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="84dp"
+        android:src="@drawable/img"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125547)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/ScanScrap_Fragment.kt	(date 1631285125547)
@@ -0,0 +1,105 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.app.AlertDialog
+import android.content.ContentValues
+import android.content.Intent
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.integration.android.IntentIntegrator
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentScanScrapBinding
+
+class ScanScrap_Fragment : Fragment() {
+
+    var scannedResult: String = ""
+    private lateinit var binding: FragmentScanScrapBinding
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_scan_scrap, container, false)
+        // Inflate the layout for this fragment
+        binding.ScrapScan.setOnClickListener {
+            run {
+                val intentIntegrator = IntentIntegrator.forSupportFragment(this)
+                intentIntegrator.initiateScan()
+            }
+        }
+        return binding.root
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){
+
+        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+
+        val db = Firebase.firestore
+
+        if (result != null) {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+            if (result.contents != null) {
+                scannedResult = result.contents
+                binding.textView6.text = scannedResult
+                binding.textView6 .text = scannedResult
+                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                val valueBarcode : String = scannedResult
+
+
+
+                db.collection("ReceivedProduct").document(scannedResult)
+                    .get()
+                    .addOnSuccessListener { result ->
+                        if(result.data == null){
+                            Toast.makeText(context, "Invalid Bar code. Please try again !!", Toast.LENGTH_LONG).show()
+                        }else{
+//                            Toast.makeText(context, "Valid Bar code", Toast.LENGTH_LONG).show()
+
+                            basicAlert(scannedResult)
+                        }
+                    }
+
+
+            } else {
+                binding.textView6.text = "scan failed"
+                Log.w(ContentValues.TAG, "scan failed")
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+
+    fun basicAlert(serialNo: String) {
+
+        val db = Firebase.firestore
+
+        val builder: AlertDialog.Builder = AlertDialog.Builder(this.requireContext())
+        builder.setTitle("Scrap Meterial")
+
+
+        builder.setMessage("Are you sure put product ${serialNo} to scrap ?? ")
+
+        builder.setPositiveButton("Save") { dialog, which ->
+            db.collection("ReceivedProduct").document(serialNo)
+                .update(
+                    mapOf(
+                        "Status" to "scrap"
+                    )
+                )
+
+        }
+
+        builder.setNegativeButton("Cancel") { dialog, which ->
+
+        }
+        builder.show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125285)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Product_Fragment.kt	(date 1631285125285)
@@ -0,0 +1,127 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.content.Intent
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.integration.android.IntentIntegrator
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackProductBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding
+
+
+class OnRack_Product_Fragment : Fragment() {
+
+    var scannedResult: String = ""
+    private lateinit var binding: FragmentOnRackProductBinding
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+    private  var checkExist = 0
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack__product_, container, false)
+
+        binding.RackProductScan.setOnClickListener{
+            run {
+                val intentIntegrator = IntentIntegrator.forSupportFragment(this)
+                intentIntegrator.initiateScan()
+            }
+        }
+
+        return binding.root
+    }
+
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+
+        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+
+        val db = Firebase.firestore
+
+        if (result != null) {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+            if (result.contents != null) {
+                scannedResult = result.contents
+                binding.textView6.text = scannedResult
+                binding.txtValue1.text = scannedResult
+                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                val valueBarcode: String = scannedResult
+
+
+
+                db.collection("ReceivedProduct").document(scannedResult)
+                    .get()
+                    .addOnSuccessListener { documents ->
+                        if (documents.data == null) {
+                            Toast.makeText(
+                                context,
+                                "Invalid product QR code. Please try again !!",
+                                Toast.LENGTH_LONG
+                            ).show()
+                        } else {
+
+                            if(documents.data?.get("Status").toString() != "scrap"){
+                                db.collection("ReceivedProduct")
+                                    .get()
+                                    .addOnSuccessListener { result ->
+
+                                        for(document in result){
+                                            if(document.data.get("RackID").toString() != ""){
+                                                checkExist = 1
+                                                Log.w(ContentValues.TAG, "exist")
+                                                break
+                                            }
+                                        }
+
+                                        if(checkExist == 0){
+                                            val action : NavDirections = OnRack_Product_FragmentDirections.actionOnRackProductFragmentToOnRackRackFragment(scannedResult)
+                                            navController.navigate(action)
+
+                                        }else{
+                                            Log.w(ContentValues.TAG, "quantity 3 = ${checkExist}")
+                                            Toast.makeText(
+                                                context,
+                                                "The Product already exist in a rack. Please try again!!",
+                                                Toast.LENGTH_LONG
+                                            ).show()
+                                            checkExist = 0
+                                        }
+                                    }
+
+
+
+                                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                            }else{
+                                Toast.makeText(
+                                    context,
+                                    "The Product already become scrap. Please try again!!",
+                                    Toast.LENGTH_LONG
+                                ).show()
+                            }
+
+
+
+                        }
+                    }
+            } else {
+                binding.textView6.text = "scan failed"
+                Log.w(ContentValues.TAG, "scan failed")
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125500)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_product_Fragment.kt	(date 1631285125500)
@@ -0,0 +1,95 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.content.Intent
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.fragment.NavHostFragment
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.integration.android.IntentIntegrator
+import my.edu.tarc.warehouserit3g2.databinding.FragmentChangeRackProductBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding
+
+class changeRack_product_Fragment : Fragment() {
+
+    var scannedResult: String = ""
+    private lateinit var binding: FragmentChangeRackProductBinding
+    private val navController by lazy { NavHostFragment.findNavController(this)}
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_change_rack_product, container, false)
+
+        binding.ChangeRackProductScan.setOnClickListener {
+            run {
+                val intentIntegrator = IntentIntegrator.forSupportFragment(this)
+                intentIntegrator.initiateScan()
+            }
+        }
+        return binding.root
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){
+
+        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+
+        val db = Firebase.firestore
+
+        if (result != null) {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+            if (result.contents != null) {
+                scannedResult = result.contents
+                binding.textView6.text = scannedResult
+                binding.txtValue2 .text = scannedResult
+                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+//                val valueBarcode : String = scannedResult
+
+
+
+                db.collection("ReceivedProduct").document(scannedResult)
+                    .get()
+                    .addOnSuccessListener { result ->
+                        if(result.data == null){
+                            Toast.makeText(context, "Invalid QR code. Please try again !!", Toast.LENGTH_LONG).show()
+                        }else{
+
+                            if(result.data?.get("Status").toString() != "scrap"){
+                                if(result.data?.get("RackID").toString() != ""){
+//
+                                    Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                                    val action : NavDirections = changeRack_product_FragmentDirections.actionChangeRackProductFragmentToChangeRackRackFragment(scannedResult)
+                                    navController.navigate(action)
+
+                                }else {
+                                    Toast.makeText(context, "Product not in rack. Please try again !!", Toast.LENGTH_LONG).show()
+                                }
+                            }else{
+                                Toast.makeText(context, "Product already become scrap. Please try again !!", Toast.LENGTH_LONG).show()
+                            }
+                        }
+                    }
+
+
+            } else {
+                binding.textView6.text = "scan failed"
+                Log.w(ContentValues.TAG, "scan failed")
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_on_rack_product_display.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack_product_display.xml b/app/src/main/res/layout/fragment_on_rack_product_display.xml
new file mode 100644
--- /dev/null	(date 1631285125299)
+++ b/app/src/main/res/layout/fragment_on_rack_product_display.xml	(date 1631285125299)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    tools:context=".OnRack_Product_Display_Fragment">
+
+    <SearchView
+        android:id="@+id/searchOnRackProductView"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:background="#55F5F5F5"
+        android:elevation="1dp"
+        android:queryHint="Search"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/OnRackproductRecycleView"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/searchOnRackProductView"
+        tools:listitem="@layout/received_item" />
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125529)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/OnRack_Detail_Fragment.kt	(date 1631285125529)
@@ -0,0 +1,85 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.content.ContentValues
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.Navigation
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnRackDetailBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedDetailBinding
+import java.text.SimpleDateFormat
+import java.util.*
+
+
+class OnRack_Detail_Fragment : Fragment() {
+
+    private lateinit var binding: FragmentOnRackDetailBinding
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        binding = DataBindingUtil.inflate(inflater,R.layout.fragment_on_rack_detail, container, false)
+        val args = OnRack_Detail_FragmentArgs.fromBundle(requireArguments())
+        Log.w(ContentValues.TAG, "partNo 4 = ${args.rackId}")
+        Log.w(ContentValues.TAG, "partNo 4 = ${args.serialNo}")
+
+        val db = Firebase.firestore
+        val sdf = SimpleDateFormat("dd/M/yyyy")
+        val rackId = args.rackId
+        val serialNo = args.serialNo
+        val rackStatus = "In Rack"
+        val rackInDate = sdf.format(Date())
+
+        db.collection("ReceivedProduct").document(serialNo)
+            .get()
+            .addOnSuccessListener { result ->
+                val partNo = result.data?.get("PartNo").toString()
+
+                binding.tvtPartN.text = partNo
+                binding.tvtRackId.text = rackId
+                binding.tvtRackInDate.text = rackInDate
+                binding.RackStatus.text = rackStatus
+                binding.tvtSerialN.text = serialNo
+                binding.tvtRackOutDate.text = "-"
+
+                val RackInValue = hashMapOf(
+                    "PartNo" to result.data?.get("PartNo").toString(),
+                    "ReceivedBy" to result.data?.get("ReceivedBy").toString(),
+                    "ReceivedDate" to result.data?.get("ReceivedDate").toString(),
+                    "Status" to rackStatus,
+                    "quantity" to result.data?.get("quantity").toString(),
+                    "serialNo" to result.data?.get("serialNo").toString(),
+                    "RackID" to rackId,
+                    "RackInDate" to rackInDate,
+                    "RackOutDate" to "",
+                )
+
+                //db.collection("RackIn").document("").update(RackInValue as Map<String, Any>)
+                db.collection("ReceivedProduct").document(serialNo).set(RackInValue)
+
+
+
+            }.addOnFailureListener { exception ->
+                Log.d(ContentValues.TAG, "getfailedwith ", exception)
+            }
+
+        binding.BtnOk.setOnClickListener {
+            Navigation.findNavController(it).navigate(R.id.action_onRack_Detail_Fragment_to_onRack_Product_Fragment)
+        }
+
+
+
+        return binding.root
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_scan_scrap.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_scan_scrap.xml b/app/src/main/res/layout/fragment_scan_scrap.xml
new file mode 100644
--- /dev/null	(date 1631285125401)
+++ b/app/src/main/res/layout/fragment_scan_scrap.xml	(date 1631285125401)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto">
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ScanScrap_Fragment">
+
+    <TextView
+        android:id="@+id/txtValueLabel1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="108dp"
+
+        android:text="Scanned Value: "
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.652"
+        app:layout_constraintStart_toEndOf="@+id/txtValue4"
+        app:layout_constraintTop_toBottomOf="@+id/ScrapScan"
+        app:layout_constraintVertical_bias="0.963" />
+
+    <TextView
+        android:id="@+id/txtValue4"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="60dp"
+        android:layout_marginBottom="108dp"
+        android:text="{{please scan first}}"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/textView6"
+        app:layout_constraintTop_toBottomOf="@+id/ScrapScan"
+        app:layout_constraintVertical_bias="0.963" />
+
+    <Button
+        android:id="@+id/ScrapScan"
+        android:layout_width="315dp"
+        android:layout_height="72dp"
+        android:layout_marginTop="116dp"
+        android:text="Scan"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imageView2" />
+
+    <TextView
+        android:id="@+id/textView6"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="24dp"
+        android:layout_marginTop="32dp"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/ScrapScan"
+        app:layout_constraintVertical_bias="0.157" />
+
+    <ImageView
+        android:id="@+id/imageView2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="84dp"
+        android:src="@drawable/img"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_Rack_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_Rack_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_Rack_Fragment.kt
new file mode 100644
--- /dev/null	(date 1631285125474)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/changeRack_Rack_Fragment.kt	(date 1631285125474)
@@ -0,0 +1,132 @@
+package my.edu.tarc.warehouserit3g2
+
+import android.app.AlertDialog
+import android.content.ContentValues
+import android.content.Intent
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.navigation.NavDirections
+import androidx.navigation.Navigation
+import androidx.navigation.fragment.NavHostFragment
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.google.zxing.integration.android.IntentIntegrator
+import my.edu.tarc.warehouserit3g2.databinding.FragmentChangeRackRackBinding
+import my.edu.tarc.warehouserit3g2.databinding.FragmentOnReceivedBinding
+
+class changeRack_Rack_Fragment : Fragment() {
+
+    var scannedResult: String = ""
+    private lateinit var binding: FragmentChangeRackRackBinding
+    private val navController by lazy { NavHostFragment.findNavController(this) }
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding =
+            DataBindingUtil.inflate(inflater, R.layout.fragment_change_rack_rack, container, false)
+
+        binding.changeRackrackScan.setOnClickListener {
+            run {
+                val intentIntegrator = IntentIntegrator.forSupportFragment(this)
+                intentIntegrator.initiateScan()
+            }
+        }
+
+        return binding.root
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+
+        var result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+        val args = changeRack_Rack_FragmentArgs.fromBundle(requireArguments())
+        val serialNo = args.serialNo
+        var previosRackId = ""
+
+        val db = Firebase.firestore
+
+        if (result != null) {
+            Log.w(ContentValues.TAG, "partNo 2 ")
+            if (result.contents != null) {
+                scannedResult = result.contents
+                binding.textView6.text = scannedResult
+                binding.txtValue3.text = scannedResult
+                Log.w(ContentValues.TAG, "partNo 2 = ${scannedResult}")
+                val valueBarcode: String = scannedResult
+
+                db.collection("ReceivedProduct").document(serialNo)
+                    .get()
+                    .addOnSuccessListener { result ->
+                        if (result.data?.get("RackID").toString() == scannedResult) {
+                            Toast.makeText(
+                                context,
+                                "Product already in the rack ${scannedResult}",
+                                Toast.LENGTH_LONG
+                            ).show()
+                        } else {
+                            previosRackId = result.data?.get("RackID").toString()
+                            db.collection("Rack").document(scannedResult)
+                                .get()
+                                .addOnSuccessListener { document ->
+                                    if (document.data == null) {
+                                        Toast.makeText(
+                                            context,
+                                            "Invalid QR code. Please try again !!",
+                                            Toast.LENGTH_LONG
+                                        ).show()
+                                    } else {
+                                        Toast.makeText(context, "Valid Bar code", Toast.LENGTH_LONG)
+                                            .show()
+                                        basicAlert(scannedResult, serialNo, previosRackId)
+
+//                            // add pop up menu
+                                    }
+                                }
+                        }
+                    }
+            } else {
+                binding.textView6.text = "scan failed"
+                Log.w(ContentValues.TAG, "scan failed")
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+
+    fun basicAlert(RackId: String, serialNo: String, previosRackID :String) {
+
+        val db = Firebase.firestore
+
+        val builder: AlertDialog.Builder = AlertDialog.Builder(this.requireContext())
+        builder.setTitle("Change Rack")
+
+
+        builder.setMessage("Are you sure change product ${serialNo} from ${previosRackID} to ${RackId} ")
+
+        builder.setPositiveButton("Save") { dialog, which ->
+            db.collection("ReceivedProduct").document(serialNo)
+                .update(
+                    mapOf(
+                        "RackID" to RackId
+                    )
+                )
+
+           navController.navigate(R.id.action_changeRack_Rack_Fragment_to_changeRack_product_Fragment)
+
+        }
+
+        builder.setNegativeButton("Cancel") { dialog, which ->
+
+        }
+        builder.show()
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackAdapter.kt
new file mode 100644
--- /dev/null	(date 1631285125491)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackAdapter.kt	(date 1631285125491)
@@ -0,0 +1,114 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+import android.content.ContentValues
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Filter
+import android.widget.Filterable
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import my.edu.tarc.warehouserit3g2.OnRack_Display_Fragment
+import my.edu.tarc.warehouserit3g2.R
+
+//import android.content.ContentValues
+//import android.util.Log
+//import android.view.View
+//import android.view.ViewGroup
+//import android.widget.Filter
+//import android.widget.Filterable
+//import androidx.recyclerview.widget.RecyclerView
+//import my.edu.tarc.warehouserit3g2.OnRack_Display_Fragment
+
+class RackAdapter(
+    private var rackList: ArrayList<String>, private val listener: OnRack_Display_Fragment
+) : RecyclerView.Adapter<RackAdapter.myViewHolder>(), Filterable {
+
+    var searchV = ArrayList<String>();
+
+    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{
+
+        val rackid:TextView = itemView.findViewById(R.id.RackID)
+        init {
+            Log.w(ContentValues.TAG, "search value 30 = ")
+            itemView.setOnClickListener(this)
+        }
+
+        override fun onClick(p0: View?) {
+            Log.w(ContentValues.TAG, "search value 34 = ")
+            val position = adapterPosition
+            if(position != RecyclerView.NO_POSITION) {
+                listener.onItemClick(position)
+            }
+        }
+
+    }
+    init {
+        searchV = rackList
+    }
+
+    interface OnItemClickListener{
+
+        fun onItemClick(position: Int)
+
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {
+        Log.w(ContentValues.TAG, "search value 42 = ")
+        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.display_rack, parent, false)
+
+        return myViewHolder(itemView)
+    }
+
+    override fun onBindViewHolder(holder: myViewHolder, position: Int) {
+        Log.w(ContentValues.TAG, "search value 49 = ")
+
+        val currentRack = searchV[position]
+//        holder.itemView.setOnClickListener(
+        holder.rackid.text = currentRack
+
+    }
+
+    override fun getItemCount(): Int {
+        return searchV.size
+    }
+
+    override fun getFilter(): Filter {
+        return object: Filter(){
+            override fun performFiltering(constraint: CharSequence?): FilterResults {
+                val charSearch = constraint.toString()
+                Log.w(ContentValues.TAG, "search value 75 = ${charSearch} ")
+                if (charSearch.isEmpty()) {
+                    Log.w(ContentValues.TAG, "77 ")
+                    searchV = rackList
+
+
+                } else {
+                    val resultList = ArrayList<String>()
+                    for (row in rackList) {
+                        Log.w(ContentValues.TAG, " 999 ")
+                        if(row.contains(charSearch) || row.contains(charSearch)){
+                            Log.w(ContentValues.TAG, "search value 83 = ${row} ")
+                            resultList.add(row)
+                        }
+                    }
+                    searchV = resultList
+                    Log.w(ContentValues.TAG, "search value 88 = ${searchV} ")
+                }
+                val filterResults = FilterResults()
+                filterResults.values = searchV
+                Log.w(ContentValues.TAG, "Final2 = ${filterResults} ")
+                return filterResults
+            }
+
+
+            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
+                Log.w(ContentValues.TAG, "final= ${filterResults} ")
+                searchV = filterResults!!.values as ArrayList<String>
+                notifyDataSetChanged()
+            }
+
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/navigation/navigate.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/navigate\"\r\n    app:startDestination=\"@id/home_Fragment\">\r\n    <fragment\r\n        android:id=\"@+id/home_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.Home_Fragment\"\r\n        android:label=\"fragment_home_\"\r\n        tools:layout=\"@layout/fragment_home_\" />\r\n    <fragment\r\n        android:id=\"@+id/receiveProduct_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.receiveProduct_Fragment\"\r\n        android:label=\"receiveProduct_Fragment\" />\r\n    <fragment\r\n        android:id=\"@+id/onReceivedDetail_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnReceivedDetail_Fragment\"\r\n        android:label=\"fragment_on_received_detail_\"\r\n        tools:layout=\"@layout/fragment_on_received_detail_\" >\r\n        <argument\r\n            android:name=\"barcodeValue\"\r\n            app:argType=\"string\" />\r\n        <action\r\n            android:id=\"@+id/action_onReceivedDetail_Fragment_to_onReceived_Fragment\"\r\n            app:destination=\"@id/onReceived_Fragment\" />\r\n        <action\r\n            android:id=\"@+id/action_onReceivedDetail_Fragment_to_display_Received_item_Fragment\"\r\n            app:destination=\"@id/display_Received_item_Fragment\" />\r\n        <argument\r\n            android:name=\"place\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"serialNo\"\r\n            app:argType=\"string\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/onReceived_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.OnReceived_Fragment\"\r\n        android:label=\"OnReceived_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_onReceived_Fragment_to_onReceivedDetail_Fragment\"\r\n            app:destination=\"@id/onReceivedDetail_Fragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/display_Received_item_Fragment\"\r\n        android:name=\"my.edu.tarc.warehouserit3g2.Display_Received_item_Fragment\"\r\n        android:label=\"Display_Received_item_Fragment\" >\r\n        <action\r\n            android:id=\"@+id/action_display_Received_item_Fragment_to_onReceivedDetail_Fragment\"\r\n            app:destination=\"@id/onReceivedDetail_Fragment\" />\r\n    </fragment>\r\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/navigate.xml b/app/src/main/res/navigation/navigate.xml
--- a/app/src/main/res/navigation/navigate.xml	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/res/navigation/navigate.xml	(date 1631285125619)
@@ -50,4 +50,97 @@
             android:id="@+id/action_display_Received_item_Fragment_to_onReceivedDetail_Fragment"
             app:destination="@id/onReceivedDetail_Fragment" />
     </fragment>
+    <fragment
+        android:id="@+id/onRack_Product_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.OnRack_Product_Fragment"
+        android:label="OnRack_Product_Fragment" >
+        <action
+            android:id="@+id/action_onRack_Product_Fragment_to_onRack_Rack_Fragment"
+            app:destination="@id/onRack_Rack_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/onRack_Rack_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.OnRack_Rack_Fragment"
+        android:label="fragment_on_rack__rack_"
+        tools:layout="@layout/fragment_on_rack__rack_" >
+        <argument
+            android:name="serialNoOnRack"
+            app:argType="string" />
+        <action
+            android:id="@+id/action_onRack_Rack_Fragment_to_onRack_Detail_Fragment"
+            app:destination="@id/onRack_Detail_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/addRack"
+        android:name="my.edu.tarc.warehouserit3g2.AddRack"
+        android:label="fragment_add_rack"
+        tools:layout="@layout/fragment_add_rack" />
+    <fragment
+        android:id="@+id/onRack_Detail_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.OnRack_Detail_Fragment"
+        android:label="fragment_on_rack_detail"
+        tools:layout="@layout/fragment_on_rack_detail" >
+        <argument
+            android:name="serialNo"
+            app:argType="string" />
+        <argument
+            android:name="RackId"
+            app:argType="string" />
+        <action
+            android:id="@+id/action_onRack_Detail_Fragment_to_onRack_Product_Fragment"
+            app:destination="@id/onRack_Product_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/onRack_Display_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.OnRack_Display_Fragment"
+        android:label="OnRack_Display_Fragment" >
+        <action
+            android:id="@+id/action_onRack_Display_Fragment_to_onRack_Product_Display_Fragment"
+            app:destination="@id/onRack_Product_Display_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/onRack_Product_Display_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.OnRack_Product_Display_Fragment"
+        android:label="OnRack_Product_Display_Fragment" >
+        <argument android:name="rackId"
+            app:argType="string" />
+        <action
+            android:id="@+id/action_onRack_Product_Display_Fragment_to_onRack_Display_Detail_Fragment"
+            app:destination="@id/onRack_Display_Detail_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/onRack_Display_Detail_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.OnRack_Display_Detail_Fragment"
+        android:label="fragment_on_rack_display_detail"
+        tools:layout="@layout/fragment_on_rack_display_detail" >
+        <argument
+            android:name="serialNo"
+            app:argType="string" />
+        <action
+            android:id="@+id/action_onRack_Display_Detail_Fragment_to_onRack_Display_Fragment"
+            app:destination="@id/onRack_Display_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/changeRack_product_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.changeRack_product_Fragment"
+        android:label="changeRack_product_Fragment" >
+        <action
+            android:id="@+id/action_changeRack_product_Fragment_to_changeRack_Rack_Fragment"
+            app:destination="@id/changeRack_Rack_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/changeRack_Rack_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.changeRack_Rack_Fragment"
+        android:label="changeRack_Rack_Fragment" >
+        <argument
+            android:name="serialNo"
+            app:argType="string" />
+        <action
+            android:id="@+id/action_changeRack_Rack_Fragment_to_changeRack_product_Fragment"
+            app:destination="@id/changeRack_product_Fragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/scanScrap_Fragment"
+        android:name="my.edu.tarc.warehouserit3g2.ScanScrap_Fragment"
+        android:label="ScanScrap_Fragment" />
 </navigation>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/.idea/misc.xml	(date 1631285242260)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2.Data\r\n\r\nimport android.content.ContentValues\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Filter\r\nimport android.widget.Filterable\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport my.edu.tarc.warehouserit3g2.R\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass ProductAdapter (private var productList :MutableList<Product>, private val listener: OnItemClickListener ) : RecyclerView.Adapter<ProductAdapter.myViewHolder>(), Filterable{\r\n\r\n    var searchV = ArrayList<Product>();\r\n//    fun setData(searchV: ArrayList<Product>){\r\n//        this.searchV = searchV\r\n//        notifyDataSetChanged()\r\n//    }\r\n    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{\r\n\r\n        val partNo:TextView = itemView.findViewById(R.id.PartNo)\r\n        val serialNo:TextView =itemView.findViewById(R.id.SerialNo)\r\n\r\n\r\n        init {\r\n            Log.w(ContentValues.TAG, \"search value 30 = \")\r\n            itemView.setOnClickListener(this)\r\n        }\r\n\r\n        override fun onClick(p0: View?) {\r\n            Log.w(ContentValues.TAG, \"search value 34 = \")\r\n            val position = adapterPosition\r\n            if(position != RecyclerView.NO_POSITION) {\r\n                listener.onItemClick(position)\r\n            }\r\n        }\r\n    }\r\n\r\n    init {\r\n        searchV = productList as ArrayList<Product>\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {\r\n        Log.w(ContentValues.TAG, \"search value 42 = \")\r\n        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.received_item, parent, false)\r\n\r\n        return myViewHolder(itemView)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: myViewHolder, position: Int) {\r\n        Log.w(ContentValues.TAG, \"search value 49 = \")\r\n\r\n        val currentProduct = searchV[position]\r\n//        holder.itemView.setOnClickListener(\r\n        holder.partNo.text = currentProduct.partNo\r\n        holder.serialNo.text = currentProduct.SerialNo\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        Log.w(ContentValues.TAG, \"search value 57 = \")\r\n        return searchV.size\r\n    }\r\n\r\n\r\n    interface OnItemClickListener{\r\n\r\n        fun onItemClick(position: Int)\r\n\r\n    }\r\n\r\n    override fun getFilter(): Filter {\r\n        Log.w(ContentValues.TAG, \"search value 5 = \")\r\n        return object: Filter(){\r\n            override fun performFiltering(constraint: CharSequence?): FilterResults {\r\n                val charSearch = constraint.toString()\r\n                Log.w(ContentValues.TAG, \"search value 75 = ${charSearch} \")\r\n                if (charSearch.isEmpty()) {\r\n                    Log.w(ContentValues.TAG, \"77 \")\r\n                    searchV = productList as ArrayList<Product>\r\n\r\n\r\n                } else {\r\n                    val resultList = ArrayList<Product>()\r\n                    for (row in productList) {\r\n                        Log.w(ContentValues.TAG, \" 999 \")\r\n                       if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch)){\r\n                           Log.w(ContentValues.TAG, \"search value 83 = ${row} \")\r\n                           resultList.add(row)\r\n                       }\r\n                    }\r\n                    searchV = resultList\r\n                    Log.w(ContentValues.TAG, \"search value 88 = ${searchV} \")\r\n                }\r\n                val filterResults = FilterResults()\r\n                filterResults.values = searchV\r\n                Log.w(ContentValues.TAG, \"Final2 = ${filterResults} \")\r\n                return filterResults\r\n            }\r\n//            override fun performFiltering(charSequence: CharSequence?): FilterResults {\r\n//                Log.w(ContentValues.TAG, \"search value 2 = ${charSequence}\")\r\n//                val filterResult = FilterResults();\r\n//\r\n//                if(charSequence == null || charSequence.length < 0){\r\n//                    filterResult.count = productList.size\r\n//                    filterResult.values = productList\r\n//                }else{\r\n//                    var searchChr = charSequence.toString()\r\n//                    val itemModal = ArrayList<Product>()\r\n//                    Log.w(ContentValues.TAG, \"search value 3 = ${searchChr}\")\r\n//\r\n//                    for(item in productList){\r\n//                        if(item.partNo.contains(searchChr) || item.SerialNo.contains(searchChr)){\r\n//                            itemModal.add(item)\r\n//                        }\r\n//                    }\r\n//                    filterResult.count = itemModal.size\r\n//                    filterResult.values = itemModal\r\n//                }\r\n//                    return filterResult\r\n//            }\r\n\r\n            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {\r\n                Log.w(ContentValues.TAG, \"final= ${filterResults} \")\r\n                searchV = filterResults!!.values as ArrayList<Product>\r\n                notifyDataSetChanged()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/ProductAdapter.kt	(date 1631285125637)
@@ -100,28 +100,7 @@
                 Log.w(ContentValues.TAG, "Final2 = ${filterResults} ")
                 return filterResults
             }
-//            override fun performFiltering(charSequence: CharSequence?): FilterResults {
-//                Log.w(ContentValues.TAG, "search value 2 = ${charSequence}")
-//                val filterResult = FilterResults();
-//
-//                if(charSequence == null || charSequence.length < 0){
-//                    filterResult.count = productList.size
-//                    filterResult.values = productList
-//                }else{
-//                    var searchChr = charSequence.toString()
-//                    val itemModal = ArrayList<Product>()
-//                    Log.w(ContentValues.TAG, "search value 3 = ${searchChr}")
-//
-//                    for(item in productList){
-//                        if(item.partNo.contains(searchChr) || item.SerialNo.contains(searchChr)){
-//                            itemModal.add(item)
-//                        }
-//                    }
-//                    filterResult.count = itemModal.size
-//                    filterResult.values = itemModal
-//                }
-//                    return filterResult
-//            }
+
 
             override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
                 Log.w(ContentValues.TAG, "final= ${filterResults} ")
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt
new file mode 100644
--- /dev/null	(date 1631285125351)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/Data/RackProductAdapter.kt	(date 1631285125351)
@@ -0,0 +1,108 @@
+package my.edu.tarc.warehouserit3g2.Data
+
+import android.content.ContentValues
+import android.util.Log
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Filter
+import android.widget.Filterable
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import my.edu.tarc.warehouserit3g2.OnRack_Product_Display_Fragment
+import my.edu.tarc.warehouserit3g2.R
+
+class RackProductAdapter(private var productList:MutableList<Product>, private val listener: OnRack_Product_Display_Fragment) : RecyclerView.Adapter<RackProductAdapter.myViewHolder>(),
+    Filterable {
+
+    var searchV = ArrayList<Product>();
+
+    inner class myViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView), View.OnClickListener{
+
+        val OnRackPartNo: TextView = itemView.findViewById(R.id.OnRackPartNo)
+        val OnRackSerialNo: TextView =itemView.findViewById(R.id.OnRackSerialNo)
+
+
+        init {
+            Log.w(ContentValues.TAG, "search value 30 = ")
+            itemView.setOnClickListener(this)
+        }
+
+        override fun onClick(p0: View?) {
+            Log.w(ContentValues.TAG, "search value 34 = ")
+            val position = adapterPosition
+            if(position != RecyclerView.NO_POSITION) {
+                listener.onItemClick(position)
+            }
+        }
+    }
+
+    init {
+        searchV = productList as ArrayList<Product>
+    }
+
+    interface OnItemClickListener {
+        fun onItemClick(position: Int)
+
+    }
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): myViewHolder {
+        Log.w(ContentValues.TAG, "search value 42 = ")
+        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.display_rack_product, parent, false)
+
+        return myViewHolder(itemView)
+    }
+
+    override fun onBindViewHolder(holder: myViewHolder, position: Int) {
+        Log.w(ContentValues.TAG, "search value 49 = ")
+
+        val currentProduct = searchV[position]
+//        holder.itemView.setOnClickListener(
+        holder.OnRackPartNo.text = currentProduct.partNo
+        holder.OnRackSerialNo.text = currentProduct.SerialNo
+    }
+
+    override fun getItemCount(): Int {
+        Log.w(ContentValues.TAG, "search value 57 = ")
+        return searchV.size
+    }
+
+    override fun getFilter(): Filter {
+        return object: Filter(){
+            override fun performFiltering(constraint: CharSequence?): FilterResults {
+                val charSearch = constraint.toString()
+                Log.w(ContentValues.TAG, "search value 75 = ${charSearch} ")
+                if (charSearch.isEmpty()) {
+                    Log.w(ContentValues.TAG, "77 ")
+                    searchV = productList as ArrayList<Product>
+
+
+                } else {
+                    val resultList = ArrayList<Product>()
+                    for (row in productList) {
+                        Log.w(ContentValues.TAG, " 999 ")
+                        if(row.partNo.contains(charSearch) || row.SerialNo.contains(charSearch)){
+                            Log.w(ContentValues.TAG, "search value 83 = ${row} ")
+                            resultList.add(row)
+                        }
+                    }
+                    searchV = resultList
+                    Log.w(ContentValues.TAG, "search value 88 = ${searchV} ")
+                }
+                val filterResults = FilterResults()
+                filterResults.values = searchV
+                Log.w(ContentValues.TAG, "Final2 = ${filterResults} ")
+                return filterResults
+            }
+
+
+            override fun publishResults(p0: CharSequence?, filterResults: FilterResults?) {
+                Log.w(ContentValues.TAG, "final= ${filterResults} ")
+                searchV = filterResults!!.values as ArrayList<Product>
+                notifyDataSetChanged()
+            }
+
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_on_rack__product_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_on_rack__product_.xml b/app/src/main/res/layout/fragment_on_rack__product_.xml
new file mode 100644
--- /dev/null	(date 1631285125326)
+++ b/app/src/main/res/layout/fragment_on_rack__product_.xml	(date 1631285125326)
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <TextView
+            android:id="@+id/txtValueLabel1"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="108dp"
+
+            android:text="Scanned Value: "
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.652"
+            app:layout_constraintStart_toEndOf="@+id/txtValue1"
+            app:layout_constraintTop_toBottomOf="@+id/RackProductScan"
+            app:layout_constraintVertical_bias="0.963" />
+
+        <TextView
+            android:id="@+id/txtValue1"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="60dp"
+            android:layout_marginBottom="108dp"
+            android:text="{{please scan first}}"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toEndOf="@+id/textView6"
+            app:layout_constraintTop_toBottomOf="@+id/RackProductScan"
+            app:layout_constraintVertical_bias="0.963" />
+
+        <Button
+            android:id="@+id/RackProductScan"
+            android:layout_width="315dp"
+            android:layout_height="72dp"
+            android:layout_marginTop="116dp"
+            android:text="Scan"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/imageView2" />
+
+        <TextView
+            android:id="@+id/textView6"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="24dp"
+            android:layout_marginTop="32dp"
+            android:text="TextView"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/RackProductScan"
+            app:layout_constraintVertical_bias="0.157" />
+
+        <ImageView
+            android:id="@+id/imageView2"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="84dp"
+            android:src="@drawable/img"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/menu/navdrawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <item\r\n        android:id=\"@+id/home_Fragment\"\r\n        android:title=\"Home\" />\r\n    <item\r\n        android:id=\"@+id/receiveProduct_Fragment\"\r\n        android:title=\"Receive Product\" />\r\n    <item\r\n        android:id=\"@+id/onReceived_Fragment\"\r\n        android:title=\"On Received\" />\r\n    <item\r\n        android:id=\"@+id/display_Received_item_Fragment\"\r\n        android:title=\"On Received List\" />\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/navdrawer_menu.xml b/app/src/main/res/menu/navdrawer_menu.xml
--- a/app/src/main/res/menu/navdrawer_menu.xml	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/res/menu/navdrawer_menu.xml	(date 1631285125172)
@@ -1,17 +1,55 @@
 <?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
     <item
         android:id="@+id/home_Fragment"
         android:title="Home" />
     <item
-        android:id="@+id/receiveProduct_Fragment"
-        android:title="Receive Product" />
-    <item
-        android:id="@+id/onReceived_Fragment"
-        android:title="On Received" />
-    <item
-        android:id="@+id/display_Received_item_Fragment"
-        android:title="On Received List" />
+        android:title="Receive Product">
+        <menu>
+            <item
+                android:id="@+id/receiveProduct_Fragment"
+
+                android:title="Receive Product" />
+            <item
+                android:id="@+id/onReceived_Fragment"
+                android:icon="@drawable/receiveproduct"
+                android:title="On Received" />
+            <item
+                android:id="@+id/display_Received_item_Fragment"
+                android:icon="@drawable/list"
+                android:title="On Received List" />
+        </menu>
+    </item>
+
+    <item
+        android:title="Rack">
+        <menu>
+            <item
+                android:id="@+id/onRack_Product_Fragment"
+
+                android:title="On Rack" />
+            <item
+                android:id="@+id/addRack"
+                android:title="Add Rack"/>
+            <item
+                android:id="@+id/onRack_Display_Fragment"
+                android:title="Display Rack"
+                />
+            <item
+                android:id="@+id/changeRack_product_Fragment"
+                android:title="Change Rack"
+                />
+        </menu>
+    </item>
+
+    <item
+        android:title="Scrap">
+        <menu>
+            <item
+                android:id="@+id/scanScrap_Fragment"
+                android:icon="@drawable/scrapdelete"
+                android:title="Scrap Meterial"
+                />
+        </menu>
+    </item>
 </menu>
\ No newline at end of file
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.widget.TextView\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport my.edu.tarc.warehouserit3g2.Models.PersonViewModel\r\nimport my.edu.tarc.warehouserit3g2.databinding.ActivityEmployeeBinding\r\n\r\n\r\nclass EmployeeActivity : AppCompatActivity() {\r\n\r\n    private lateinit var drawerLayout: DrawerLayout\r\n    private lateinit var binding: ActivityEmployeeBinding\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var Person: PersonViewModel\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n//        setContentView(R.layout.activity_employee)\r\n\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_employee)\r\n\r\n        drawerLayout = binding.drawerLayout\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n\r\n        binding.appBarMain.fab.setOnClickListener { view ->\r\n            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n                .setAction(\"Action\", null).show()\r\n        }\r\n\r\n//        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val headerView = navView.getHeaderView(0)\r\n        val username : TextView = headerView.findViewById(R.id.usernameDis)\r\n        val navController = findNavController(R.id.myNavHostFragment)\r\n\r\n        Person = PersonViewModel.getInstance()\r\n        username.text = Person.getUsername().username\r\n\r\n\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.home_Fragment, R.id.receiveProduct_Fragment, R.id.onReceived_Fragment, R.id.display_Received_item_Fragment\r\n            ), drawerLayout\r\n        )\r\n\r\n\r\n\r\n        // val navController = findNavController(R.id.myNavHostFragment)\r\n\r\n//        NavigationUI.setupActionBarWithNavController(this,navController, drawerLayout)\r\n\r\n//        NavigationUI.setupWithNavController(binding.navView, navController)\r\n\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = this.findNavController(R.id.myNavHostFragment)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/EmployeeActivity.kt	(date 1631285125245)
@@ -50,7 +50,9 @@
 
         appBarConfiguration = AppBarConfiguration(
             setOf(
-                R.id.home_Fragment, R.id.receiveProduct_Fragment, R.id.onReceived_Fragment, R.id.display_Received_item_Fragment
+                R.id.home_Fragment, R.id.receiveProduct_Fragment, R.id.onReceived_Fragment,
+                R.id.display_Received_item_Fragment, R.id.onRack_Product_Fragment, R.id.onRack_Display_Fragment,
+                R.id.changeRack_product_Fragment, R.id.scanScrap_Fragment
             ), drawerLayout
         )
 
Index: app/src/main/java/my/edu/tarc/warehouserit3g2/receiveProduct_Fragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package my.edu.tarc.warehouserit3g2\r\n\r\nimport android.content.ContentValues\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.annotation.ColorInt\r\nimport androidx.databinding.DataBindingUtil\r\nimport com.google.firebase.firestore.ktx.firestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport com.google.zxing.BarcodeFormat\r\nimport com.google.zxing.oned.Code128Writer\r\nimport my.edu.tarc.warehouserit3g2.databinding.FragmentReceiveProductBinding\r\nimport java.util.*\r\n\r\n\r\nclass receiveProduct_Fragment : Fragment() {\r\n\r\n    var scannedResult: String = \"\"\r\n    private lateinit var binding: FragmentReceiveProductBinding\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        binding =\r\n            DataBindingUtil.inflate(inflater, R.layout.fragment_receive_product_, container, false)\r\n        binding.submitBtn.setOnClickListener {\r\n\r\n            val productID = binding.EnterProductID.text.toString()\r\n            val qty = binding.EnterQty.text.toString()\r\n            val db = Firebase.firestore\r\n\r\n            val rnd = Random()\r\n            val number: Int = rnd.nextInt(999999999)\r\n            var no = String.format(\"%07d\", number)\r\n            var pdID = \"\"\r\n            var partNumberDatabase = \"\"\r\n            var quantityDataBase = \"\"\r\n            var checkExist = 0\r\n\r\n            if (productID.isEmpty() || qty.isEmpty()) {\r\n\r\n                Toast.makeText(\r\n                    context,\r\n                    \"Please Enter the part number and quantity !!\",\r\n                    Toast.LENGTH_SHORT\r\n                ).show()\r\n            } else {\r\n\r\n                db.collection(\"Barcode\")\r\n                    .get()\r\n                    .addOnSuccessListener { result ->\r\n                        for (document in result) {\r\n                            Log.d(ContentValues.TAG, \"${document.id} => ${document.data}\")\r\n\r\n                            pdID = document.id\r\n                            partNumberDatabase = document.data.get(\"partNo\").toString()\r\n                            quantityDataBase = document.data.get(\"quantity\").toString()\r\n\r\n\r\n                            if (productID == partNumberDatabase && qty == quantityDataBase) {\r\n                                Log.w(ContentValues.TAG, \"Error .\")\r\n                                Toast.makeText(\r\n                                    context,\r\n                                    \"The part number and quantity is existed. Please try another!\",\r\n                                    Toast.LENGTH_LONG\r\n                                ).show()\r\n                                checkExist = 1\r\n                                break\r\n                            } else {\r\n                                Log.w(ContentValues.TAG, \"partNo 2 = ${partNumberDatabase}\")\r\n                                Log.w(ContentValues.TAG, \"quantity 3 = ${quantityDataBase}\")\r\n                            }\r\n\r\n//\r\n\r\n                        }\r\n\r\n                        if (checkExist != 1) {\r\n                            while (pdID == no) {\r\n                                no = rnd.nextInt(999999999).toString().format(\"%06d\", number)\r\n                                Log.w(ContentValues.TAG, \"repeat\")\r\n                            }\r\n                            Log.w(ContentValues.TAG, \"productID 1 = ${no}\")\r\n\r\n\r\n                            val barcodeValue = hashMapOf(\r\n                                \"partNo\" to productID,\r\n                                \"quantity\" to qty.toString().toInt()\r\n                            )\r\n\r\n                            db.collection(\"Barcode\").document(no).set(barcodeValue)\r\n\r\n                            displayBitmap(no)\r\n                        }\r\n\r\n                    }\r\n                    .addOnFailureListener { exception ->\r\n                        Log.w(ContentValues.TAG, \"Error getting documents.\", exception)\r\n                    }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n        return binding.root\r\n    }\r\n\r\n    private fun displayBitmap(value: String) {\r\n\r\n        val widthPixels = 450\r\n        val heightPixels = 100\r\n\r\n        val white = \"#ffffff\"\r\n        val purple = \"#ffbb86fc\"\r\n        val borderInt: Int = Color.parseColor(purple)\r\n        val backgroundInt: Int = Color.parseColor(white)\r\n        binding.imageBarcode.setImageBitmap(\r\n\r\n            createBarcodeBitmap(\r\n                barcodeValue = value,\r\n                barcodeColor = borderInt,\r\n                backgroundColor = backgroundInt,\r\n                widthPixels = widthPixels,\r\n                heightPixels = heightPixels\r\n            )\r\n        )\r\n        binding.textBarcodeNumber.text = value\r\n    }\r\n\r\n    private fun createBarcodeBitmap(\r\n        barcodeValue: String,\r\n        @ColorInt barcodeColor: Int,\r\n        @ColorInt backgroundColor: Int,\r\n        widthPixels: Int,\r\n        heightPixels: Int\r\n    ): Bitmap {\r\n        val bitMatrix = Code128Writer().encode(\r\n            barcodeValue,\r\n            BarcodeFormat.CODE_128,\r\n            widthPixels,\r\n            heightPixels\r\n        )\r\n\r\n        val pixels = IntArray(bitMatrix.width * bitMatrix.height)\r\n        for (y in 0 until bitMatrix.height) {\r\n            val offset = y * bitMatrix.width\r\n            for (x in 0 until bitMatrix.width) {\r\n                pixels[offset + x] =\r\n                    if (bitMatrix.get(x, y)) barcodeColor else backgroundColor\r\n            }\r\n        }\r\n\r\n        val bitmap = Bitmap.createBitmap(\r\n            bitMatrix.width,\r\n            bitMatrix.height,\r\n            Bitmap.Config.ARGB_8888\r\n        )\r\n        bitmap.setPixels(\r\n            pixels,\r\n            0,\r\n            bitMatrix.width,\r\n            0,\r\n            0,\r\n            bitMatrix.width,\r\n            bitMatrix.height\r\n        )\r\n        return bitmap\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/my/edu/tarc/warehouserit3g2/receiveProduct_Fragment.kt b/app/src/main/java/my/edu/tarc/warehouserit3g2/receiveProduct_Fragment.kt
--- a/app/src/main/java/my/edu/tarc/warehouserit3g2/receiveProduct_Fragment.kt	(revision bcb1c86cb8cb18796a067ecf40a6c411ddf4427e)
+++ b/app/src/main/java/my/edu/tarc/warehouserit3g2/receiveProduct_Fragment.kt	(date 1631285125653)
@@ -9,6 +9,7 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.view.inputmethod.EditorInfo
 import android.widget.Toast
 import androidx.annotation.ColorInt
 import androidx.databinding.DataBindingUtil
@@ -29,8 +30,7 @@
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
-        binding =
-            DataBindingUtil.inflate(inflater, R.layout.fragment_receive_product_, container, false)
+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_receive_product_, container, false)
         binding.submitBtn.setOnClickListener {
 
             val productID = binding.EnterProductID.text.toString()
@@ -45,7 +45,7 @@
             var quantityDataBase = ""
             var checkExist = 0
 
-            if (productID.isEmpty() || qty.isEmpty()) {
+            if (productID.isEmpty() || qty.isEmpty() || productID.isBlank() || qty.isBlank()) {
 
                 Toast.makeText(
                     context,
@@ -53,6 +53,8 @@
                     Toast.LENGTH_SHORT
                 ).show()
             } else {
+                binding.EnterProductID.onEditorAction(EditorInfo.IME_ACTION_DONE)
+                binding.EnterQty.onEditorAction(EditorInfo.IME_ACTION_DONE)
 
                 db.collection("Barcode")
                     .get()
@@ -65,6 +67,7 @@
                             quantityDataBase = document.data.get("quantity").toString()
 
 
+
                             if (productID == partNumberDatabase && qty == quantityDataBase) {
                                 Log.w(ContentValues.TAG, "Error .")
                                 Toast.makeText(
